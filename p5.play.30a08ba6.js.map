{"version":3,"sources":["p5.play.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["p5","prototype","registerMethod","p5PlayInit","window","planck","Error","pInst","log","console","pl","Settings","velocityThreshold","plScale","p5play","os","emulated","autoDrawSprites","autoUpdateSprites","mouseTracking","mouseSprite","mouseSprites","standardizeKeyboard","angleMode","DEGREES","scaleTo","tileSize","x","y","Vec2","scaleXTo","scaleFrom","scaleXFrom","fixRound","val","Math","abs","round","linearSlop","isArrowFunction","fn","test","toString","isColliderType","t","abr","slice","getRegularPolygon","n","l","spriteProps","eventTypes","_collisions","_overlappers","Vector","_angleBetween","angleBetween","v","a","isNaN","Sprite","w","h","collider","p","idNum","world","spritesCreated","args","arguments","group","ani","undefined","Group","length","_noArgs","SpriteAnimation","Image","FriendlyError","originMode","Array","isArray","Number","groups","allSprites","push","animations","autoResetAnimations","removed","_ani","dynamic","kinematic","static","_shape","shape","life","visible","_collides","_colliding","_collided","_overlap","_overlaps","_overlapping","_overlapped","Map","_this","_pos","_position","_vel","_velocity","createVector","call","Object","defineProperty","get","body","getLinearVelocity","set","setLinearVelocity","_mirror","mirror","layer","maxDepth","width","_vertexMode","height","diameter","addAni","_changeAni","_animation","clone","ts","mouse","SpriteMouse","addCollider","_scale","Scale","_x","scalarX","_w","_hw","_resizeCollider","_avg","_y","scalarY","_h","_hh","prevPos","_dest","_destIdx","drag","debug","_shift","gvx","vel","gvy","prop","assign","g","traits","props","keys","deletes","d","strokeWeight","color","random","textColor","textSize","canvas","shouldCreateSensor","_hasOverlaps","_createSensors","_dimensionsUndefined","offsetX","offsetY","path","dimensions","s","Box","Circle","checkVert","vert","min","max","vecs","usesVertices","_relativeOrigin","pop","i","rep","mod","ang","j","len","cos","sin","isConvex","_isConvexPoly","centerX","centerY","sumX","sumY","vl","vec","maxPolygonVertices","Polygon","Chain","density","restitution","friction","bounciness","createBody","position","type","sprite","createFixture","_diameter","_removeFixtures","spriteB","spriteA","motorSpeed","enableMotor","bodyA","bodyB","maxLength","lengthA","lengthB","groundAnchorA","groundAnchorB","upperTranslation","lowerTranslation","linearOffset","anchorA","localAnchorA","anchorB","localAnchorB","DistanceJoint","PulleyJoint","WheelJoint","RopeJoint","WeldJoint","RevoluteJoint","getWorldCenter","GearJoint","FrictionJoint","MotorJoint","PrismaticJoint","createJoint","isSensor","prevFxt","fxt","fixtureList","getNext","m_isSensor","_fxt","m_next","destroyProxies","m_broadPhase","m_fixtureList","del","indexOf","splice","getSleepingAllowed","setSleepingAllowed","changeAni","fixture","getRestitution","setRestitution","_collider","toLowerCase","c","oldCollider","_reset","bodyProps","_cloneBodyProps","_getVertices","destroyBody","Color","colorPal","levels","_color","_parseColor","_stroke","_textColor","getDensity","setDensity","warn","atan2","_direction","rotation","_heading","dir","replaceAll","dirs","up","down","left","right","upright","rightup","upleft","leftup","downright","rightdown","downleft","leftdown","forward","backward","speed","getLinearDamping","Infinity","setLinearDamping","_display","_draw","isDynamic","isFixedRotation","setFixedRotation","getFixtureList","getFriction","setFriction","direction","isStatic","setStatic","frameImage","isBullet","setBullet","isKinematic","getMass","massData","mass","setMassData","I","center","getMassData","_angle","_angleMode","degrees","getAngle","setAngle","radians","getAngularDamping","setAngularDamping","getAngularVelocity","_rotationSpeed","setAngularVelocity","scalars","isAwake","setAwake","mag","angle","output2DArrays","f","getShape","m_vertices","m_type","unshift","at","arr","getPosition","pos","setPosition","hw","hh","remove","shapeChange","_removeSensors","_removeColliders","scalar","sh","m_shape","m_radius","synchronizeFixtures","loopk","k","reverse","i1","i2","e","sub","cross","validShapes","join","_update","_customUpdate","animation","update","event","entry","contactType","b","delete","cb","_findContactCB","draw","stroke","_drawFixture","rect","circle","text","textAlign","CENTER","fill","origin","camera","active","bound","imageMode","rectMode","ellipseMode","translate","rotate","scale","_cameraActiveWhenDrawn","noFill","beginShape","vertex","endShape","CLOSE","ellipse","m_p","line","m_vertex1","m_vertex2","forceVector","forceOrigin","applyForce","mul","m_mass","applyForceToCenter","applyTorque","tracking","obj","error","repel","moveTowards","distance","dirNameMode","moveTo","sqrt","percent","frames","floor","margin","destIdx","distX","distY","delay","magnitude","o","dist","isMoving","facing","angleTo","rotationSpeed","dist1","dist2","absA","cw","ceil","_rotateIdx","anis","name","start","end","Promise","resolve","frame","goToFrame","lastFrame","onComplete","includes","label","noLoop","target","callback","collides","_ensureCollide","overlaps","_ensureOverlap","Turtle","size","_isTurtleSprite","_prevPos","_move","move","parent","cycles","targetFrame","offset","_frameDelay","playing","looping","endOnFirstFrame","frameChanged","from","to","num2","digits1","digits2","charAt","prefix1","prefix2","loadImage","num1","parseInt","fileName","nf","_generateSheetFrames","atlas","frameSize","frameDelay","spriteSheet","frameCount","sheet","url","r","sx","sy","img","image","previousFrame","toFrame","createGraphics","_isAllSpritesGroup","autoCull","groupsCreated","GroupSprite","SubGroup","presses","pressing","pressed","holds","holding","held","released","hovers","hovering","hovered","state","inp","objProps","objProp","orbitAngle","diff","shouldAdd","add","centroid","distCentroid","snap","movements","all","resetCentroid","dest","resetDistancesFromCentroid","moveAway","amount","x2","y2","top","bottom","TypeError","cx","zoom","cy","minX","minY","maxX","maxY","item","idx","gIdx","findIndex","reduce","minDepth","depth","sort","addAnimation","addImage","addImg","addAnis","addAnimations","addImages","addImgs","atlases","World","_offset","resize","palettes","m","u","contacts","on","_beginContact","_endContact","gravity","m_gravity","sleeping","contact","m_fixtureA","m_fixtureB","m_body","g2","inContact","getAllowSleeping","setAllowSleeping","Camera","mouseX","mouseY","s0","s1","s1IsSprite","g1","g0","Fixture","shouldCollide","that","shouldOverlap","Tiles","tiles","split","row","col","wasFound","tile","createTiles","updateSprites","timeStep","velocityIterations","positionIterations","step","getSpritesAt","cameraActiveWhenDrawn","convertedPoint","aabb","AABB","lowerBound","upperBound","fxts","queryAABB","testPoint","getBody","getTransform","sprites","getSpriteAt","palette","clr","spriteArt","txt","lines","trim","replace","createImage","loadPixels","sX","sY","updatePixels","images","onLoad","drawSprite","drawSprites","createSprite","createGroup","loadAni","loadAnimation","millisecond","requestAnimationFrame","setTimeout","sleep","play","sound","reject","onended","userDisabledP5Errors","disableFriendlyErrors","_createCanvas","createCanvas","isFullScreen","pixelated","ratio","innerWidth","innerHeight","rW","rH","can","tabIndex","addEventListener","key","preventDefault","isOnCanvas","style","styleElem","document","createElement","innerHTML","head","appendChild","navigator","userAgent","version","substring","pixelDensity","platform","userAgentData","noSmooth","Canvas","_background","background","_fill","_loadImage","loadImg","pixels","cbs","calls","_decrementPreload","_cb","_img","errorMessages","generic","constructor","base","changeAnimation","collide","overlap","func","errorNum","stack","match","className","ln","msg","_friendlyError","InputDevice","holdThreshold","inputs","default","ac","Mouse","init","draggable","hover","_onmousedown","__onmousedown","btn","ms","button","_ontouchstart","_onmouseup","__onmouseup","_ontouchend","KeyBoard","toUpperCase","kb","keyboard","getLayoutMap","then","keyboardLayoutMap","keyIsDown","keyCode","_getKeyFromCode","code","simpleKeyControls","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","_onkeydown","_onkeyup","Contro","gp","leftStick","rightStick","_btns","lt","rt","select","leftStickButton","rightStickButton","_axes","leftTrigger","rightTrigger","id","gamepad","getGamepads","index","pad","buttons","axes","value","Contros","_addContro","methods","axis","gps","contro","controllers","p5playPostDraw","off","cull","uiSprites","concat","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","overlay","createErrorOverlay","getElementById","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","cache","some"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,SAAH,CAAaC,cAAb,CAA4B,MAA5B,EAAoC,SAASC,UAAT,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACzD,MAAI,OAAOC,MAAM,CAACC,MAAd,IAAwB,WAA5B,EAAyC;AACxC,UAAM,IAAIC,KAAJ,CAAU,yCAAV,CAAN;AACA,GAHwD,CAKzD;;;AACA,MAAIC,KAAK,GAAG,IAAZ;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAApB,CARyD,CAQhC;;AACzB,OAAKA,GAAL,GAAWC,OAAO,CAACD,GAAnB;AAEA,MAAME,EAAE,GAAGL,MAAX,CAXyD,CAYzD;;AACAK,EAAAA,EAAE,CAACC,QAAH,CAAYC,iBAAZ,GAAgC,IAAhC;AACA,MAAIC,OAAO,GAAG,EAAd;AAEA,OAAKC,MAAL,GAAc,KAAKA,MAAL,IAAe,EAA7B;AACA,0CAAKA,MAAL,EAAYC,EAAZ,0EAAYA,EAAZ,GAAmB;AAClBC,IAAAA,QAAQ,EAAE;AADQ,GAAnB;AAGA,iDAAKF,MAAL,EAAYG,eAAZ,uFAAYA,eAAZ,GAAgC,IAAhC;AACA,iDAAKH,MAAL,EAAYI,iBAAZ,uFAAYA,iBAAZ,GAAkC,IAAlC;AACA,iDAAKJ,MAAL,EAAYK,aAAZ,uFAAYA,aAAZ,GAA8B,IAA9B;AACA,OAAKL,MAAL,CAAYM,WAAZ,GAA0B,IAA1B;AACA,OAAKN,MAAL,CAAYO,YAAZ,GAA2B,EAA3B;AACA,OAAKP,MAAL,CAAYQ,mBAAZ,GAAkC,KAAlC,CAzByD,CA2BzD;;AACA,OAAKC,SAAL,CAAevB,EAAE,CAACC,SAAH,CAAauB,OAA5B,EA5ByD,CA8BzD;;AACA,MAAMC,OAAO,GAAG,SAAVA,OAAU,OAAWC,QAAX;AAAA,QAAGC,CAAH,QAAGA,CAAH;AAAA,QAAMC,CAAN,QAAMA,CAAN;AAAA,WAAwB,IAAIlB,EAAE,CAACmB,IAAP,CAAaF,CAAC,GAAGD,QAAL,GAAiBb,OAA7B,EAAuCe,CAAC,GAAGF,QAAL,GAAiBb,OAAvD,CAAxB;AAAA,GAAhB;;AACA,MAAMiB,QAAQ,GAAG,SAAXA,QAAW,CAACH,CAAD,EAAID,QAAJ;AAAA,WAAkBC,CAAC,GAAGD,QAAL,GAAiBb,OAAlC;AAAA,GAAjB,CAhCyD,CAkCzD;;;AACA,MAAMkB,SAAS,GAAG,SAAZA,SAAY,QAAWL,QAAX;AAAA,QAAGC,CAAH,SAAGA,CAAH;AAAA,QAAMC,CAAN,SAAMA,CAAN;AAAA,WAAwB,IAAIlB,EAAE,CAACmB,IAAP,CAAaF,CAAC,GAAGD,QAAL,GAAiBb,OAA7B,EAAuCe,CAAC,GAAGF,QAAL,GAAiBb,OAAvD,CAAxB;AAAA,GAAlB;;AACA,MAAMmB,UAAU,GAAG,SAAbA,UAAa,CAACL,CAAD,EAAID,QAAJ;AAAA,WAAkBC,CAAC,GAAGD,QAAL,GAAiBb,OAAlC;AAAA,GAAnB;;AAEA,MAAMoB,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD;AAAA,WAAUC,IAAI,CAACC,GAAL,CAASF,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAf,KAAmCxB,EAAE,CAACC,QAAH,CAAY2B,UAA/C,GAA4DH,IAAI,CAACE,KAAL,CAAWH,GAAX,CAA5D,GAA8EA,GAAxF;AAAA,GAAjB;;AACA,MAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD;AAAA,WACvB,CAAC,iXAAiXC,IAAjX,CACAD,EAAE,CAACE,QAAH,EADA,CADsB;AAAA,GAAxB;AAKA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,WAASC,cAAT,CAAwBC,CAAxB,EAA2B;AAC1B,QAAIC,GAAG,GAAGD,CAAC,CAACE,KAAF,CAAQ,CAAR,EAAW,CAAX,CAAV;AACA,WAAOF,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAAjB,IAAwBA,CAAC,IAAI,GAA7B,IAAoCA,CAAC,IAAI,GAAzC,IAAgDC,GAAG,IAAI,IAAvD,IAA+DA,GAAG,IAAI,IAAtE,IAA8EA,GAAG,IAAI,IAArF,IAA6FA,GAAG,IAAI,IAA3G;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;AACC,WAASE,iBAAT,CAA2BC,CAA3B,EAA8BC,CAA9B,EAAiC;AAChC,QAAID,CAAC,IAAI,UAAT,EAAqBC,CAAC,GAAG,CAACA,CAAD,EAAI,CAAC,GAAL,EAAU,CAAV,CAAJ,CAArB,KACK,IAAID,CAAC,IAAI,QAAT,EAAmBC,CAAC,GAAG,CAACA,CAAD,EAAI,CAAC,EAAL,EAAS,CAAT,CAAJ,CAAnB,KACA,IAAID,CAAC,IAAI,UAAT,EAAqBC,CAAC,GAAG,CAACA,CAAD,EAAI,CAAC,EAAL,EAAS,CAAT,CAAJ,CAArB,KACA,IAAID,CAAC,IAAI,SAAT,EAAoBC,CAAC,GAAG,CAACA,CAAD,EAAI,CAAC,EAAL,EAAS,CAAT,CAAJ,CAApB,KACA,IAAID,CAAC,IAAI,UAAT,EAAqBC,CAAC,GAAG,CAACA,CAAD,EAAI,CAAC,aAAL,EAAoB,CAApB,CAAJ,CAArB,KACA,IAAID,CAAC,IAAI,SAAT,EAAoBC,CAAC,GAAG,CAACA,CAAD,EAAI,CAAC,EAAL,EAAS,CAAT,CAAJ,CAApB,KACA,IAAID,CAAC,IAAI,UAAT,EAAqBC,CAAC,GAAG,CAACA,CAAD,EAAI,CAAC,EAAL,EAAS,CAAT,CAAJ,CAArB,KACA,IAAID,CAAC,IAAI,SAAT,EAAoBC,CAAC,GAAG,CAACA,CAAD,EAAI,CAAC,EAAL,EAAS,EAAT,CAAJ,CAApB,KACA,IAAID,CAAC,IAAI,YAAT,EAAuBC,CAAC,GAAG,CAACA,CAAD,EAAI,CAAC,aAAL,EAAoB,EAApB,CAAJ,CAAvB,KACA,IAAID,CAAC,IAAI,WAAT,EAAsBC,CAAC,GAAG,CAACA,CAAD,EAAI,CAAC,EAAL,EAAS,EAAT,CAAJ;AAC3B,WAAOA,CAAP;AACA;;AAED,MAAIC,WAAW,GAAG,CACjB,YADiB,EAEjB,UAFiB,EAGjB,OAHiB,EAIjB,SAJiB,EAKjB,GALiB,EAMjB,OANiB,EAOjB,UAPiB,EAQjB,WARiB,EASjB;AACA,QAViB,EAWjB,SAXiB,EAYjB,UAZiB,EAajB,MAbiB,EAcjB,GAdiB,EAejB,QAfiB,EAgBjB,SAhBiB,EAiBjB,aAjBiB,EAkBjB,WAlBiB,EAmBjB,OAnBiB,EAoBjB,MApBiB,EAqBjB,MArBiB,EAsBjB,UAtBiB,EAuBjB,cAvBiB,EAwBjB,cAxBiB,EAyBjB,eAzBiB,EA0BjB,OA1BiB,EA2BjB,OA3BiB,EA4BjB,OA5BiB,EA6BjB,QA7BiB,EA8BjB,QA9BiB,EA+BjB,cA/BiB,EAgCjB,MAhCiB,EAiCjB,WAjCiB,EAkCjB,UAlCiB,EAmCjB,SAnCiB,EAoCjB,GApCiB,EAqCjB,OArCiB,EAsCjB,GAtCiB,EAuCjB,GAvCiB,CAAlB;AA0CA,MAAIC,UAAU,GAAG;AAChBC,IAAAA,WAAW,EAAE,CAAC,WAAD,EAAc,YAAd,EAA4B,WAA5B,CADG;AAEhBC,IAAAA,YAAY,EAAE,CAAC,WAAD,EAAc,cAAd,EAA8B,aAA9B;AAFE,GAAjB;AAKArD,EAAAA,EAAE,CAACsD,MAAH,CAAUrD,SAAV,CAAoBsD,aAApB,GAAoCvD,EAAE,CAACsD,MAAH,CAAUrD,SAAV,CAAoBuD,YAAxD;;AACAxD,EAAAA,EAAE,CAACsD,MAAH,CAAUrD,SAAV,CAAoBuD,YAApB,GAAmC,UAAUC,CAAV,EAAa;AAC/C,QAAIC,CAAC,GAAG,KAAKH,aAAL,CAAmBE,CAAnB,CAAR;;AACA,QAAI,CAACE,KAAK,CAACD,CAAD,CAAV,EAAe,OAAOA,CAAP;AACf,WAAO,CAAP;AACA,GAJD;AAMA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AArK0D,MAsKnDE,MAtKmD;AAuKxD,oBAAYjC,CAAZ,EAAeC,CAAf,EAAkBiC,CAAlB,EAAqBC,CAArB,EAAwBC,QAAxB,EAAkC;AAAA;;AAAA;;AACjC,WAAKC,CAAL,GAASzD,KAAT;AACA,WAAK0D,KAAL,GAAa,KAAKD,CAAL,CAAOE,KAAP,CAAaC,cAA1B;AACA,WAAKH,CAAL,CAAOE,KAAP,CAAaC,cAAb;AAEA,UAAIC,IAAI,8BAAOC,SAAP,CAAR;AAEA,UAAIC,KAAJ,EAAWC,GAAX;;AAEA,UAAIH,IAAI,CAAC,CAAD,CAAJ,KAAYI,SAAZ,IAAyBJ,IAAI,CAAC,CAAD,CAAJ,YAAmBK,KAAhD,EAAuD;AACtDH,QAAAA,KAAK,GAAGF,IAAI,CAAC,CAAD,CAAZ;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACtB,KAAL,CAAW,CAAX,CAAP;AACA;;AAED,UAAI,CAACsB,IAAI,CAACM,MAAV,EAAkB,KAAKC,OAAL,GAAe,IAAf;;AAElB,UACCP,IAAI,CAAC,CAAD,CAAJ,KAAYI,SAAZ,IACAb,KAAK,CAACS,IAAI,CAAC,CAAD,CAAL,CADL,KAEC,OAAOA,IAAI,CAAC,CAAD,CAAX,IAAkB,QAAlB,IAA8BA,IAAI,CAAC,CAAD,CAAJ,YAAmBQ,eAAjD,IAAoER,IAAI,CAAC,CAAD,CAAJ,YAAmBpE,EAAE,CAAC6E,KAF3F,CADD,EAIE;AACD;AACAN,QAAAA,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAV;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACtB,KAAL,CAAW,CAAX,CAAP;AACA;;AAED,UAAIsB,IAAI,CAACM,MAAL,IAAe,CAAf,IAAoB,OAAON,IAAI,CAAC,CAAD,CAAX,IAAkB,QAA1C,EAAoD;AACnD,cAAM,IAAIU,aAAJ,CAAkB,QAAlB,EAA4B,CAA5B,EAA+B,CAACV,IAAI,CAAC,CAAD,CAAL,CAA/B,CAAN;AACA;;AAEDzC,MAAAA,CAAC,GAAGyC,IAAI,CAAC,CAAD,CAAR;AACAxC,MAAAA,CAAC,GAAGwC,IAAI,CAAC,CAAD,CAAR;AACAP,MAAAA,CAAC,GAAGO,IAAI,CAAC,CAAD,CAAR;AACAN,MAAAA,CAAC,GAAGM,IAAI,CAAC,CAAD,CAAR;AACAL,MAAAA,QAAQ,GAAGK,IAAI,CAAC,CAAD,CAAf;AACA,WAAKW,UAAL,GAAkB,QAAlB;;AAEA,UAAIC,KAAK,CAACC,OAAN,CAActD,CAAd,CAAJ,EAAsB;AACrBA,QAAAA,CAAC,GAAG6C,SAAJ;AACA5C,QAAAA,CAAC,GAAG4C,SAAJ;AACAX,QAAAA,CAAC,GAAGO,IAAI,CAAC,CAAD,CAAR;AACAN,QAAAA,CAAC,GAAGM,IAAI,CAAC,CAAD,CAAR;AACAL,QAAAA,QAAQ,GAAGK,IAAI,CAAC,CAAD,CAAf;AACA,OA3CgC,CA6CjC;AACA;;;AACA,UAAIY,KAAK,CAACC,OAAN,CAAcpB,CAAd,KAAoB,OAAOC,CAAP,IAAY,QAApC,EAA8C;AAC7C,YAAI,CAACH,KAAK,CAACE,CAAD,CAAV,EAAeA,CAAC,GAAGqB,MAAM,CAACrB,CAAD,CAAV;;AACf,YAAI,OAAOA,CAAP,IAAY,QAAZ,IAAwBmB,KAAK,CAACC,OAAN,CAAcpB,CAAC,CAAC,CAAD,CAAf,CAA5B,EAAiD;AAChD,eAAKkB,UAAL,GAAkB,OAAlB;AACA;;AACD,YAAIjB,CAAC,KAAKU,SAAV,EAAqB;AACpB,cAAIQ,KAAK,CAACC,OAAN,CAAcnB,CAAd,CAAJ,EAAsB;AACrB,kBAAM,IAAIgB,aAAJ,CAAkB,QAAlB,EAA4B,CAA5B,EAA+B,aAAMjB,CAAN,iBAAcC,CAAd,QAA/B,CAAN;AACA;;AACD,cAAInB,cAAc,CAACmB,CAAD,CAAlB,EAAuB;AACtBC,YAAAA,QAAQ,GAAGD,CAAX;AACA,WAFD,MAEO;AACND,YAAAA,CAAC,GAAGd,iBAAiB,CAACe,CAAD,EAAID,CAAJ,CAArB;AACA;;AACDC,UAAAA,CAAC,GAAGU,SAAJ;AACA;AACD,OAhBD,MAgBO,IAAIb,KAAK,CAACE,CAAD,CAAT,EAAc;AACpBE,QAAAA,QAAQ,GAAGF,CAAX;AACAA,QAAAA,CAAC,GAAGW,SAAJ;AACA;AAED;AACH;AACA;AACA;AACA;AACA;AACA;;;AACG,WAAKW,MAAL,GAAc,EAAd;AACA,WAAKnB,CAAL,CAAOoB,UAAP,CAAkBC,IAAlB,CAAuB,IAAvB;AAEA;AACH;AACA;AACA;AACA;AACA;;AACG,WAAKC,UAAL,GAAkB,EAAlB;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACG,WAAKC,mBAAL;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;;AACG,WAAKC,OAAL,GAAe,KAAf;;AAEA,UAAIlB,KAAJ,EAAW;AACVA,QAAAA,KAAK,CAACe,IAAN,CAAW,IAAX;;AACA,YAAI,CAACd,GAAL,EAAU;AACT,eAAK,IAAIkB,IAAT,IAAiBnB,KAAK,CAACgB,UAAvB,EAAmC;AAClCf,YAAAA,GAAG,GAAGkB,IAAN;AACA;AACA;AACD;AACD,OARD,MAQO;AACNnB,QAAAA,KAAK,GAAG,KAAKN,CAAL,CAAOoB,UAAf;AACA;;AAED,UAAId,KAAK,CAACoB,OAAV,EAAmB,aAAA3B,QAAQ,UAAR,uCAAAA,QAAQ,GAAK,SAAb;AACnB,UAAIO,KAAK,CAACqB,SAAV,EAAqB,cAAA5B,QAAQ,UAAR,yCAAAA,QAAQ,GAAK,WAAb;AACrB,UAAIO,KAAK,CAACsB,MAAV,EAAkB,cAAA7B,QAAQ,UAAR,yCAAAA,QAAQ,GAAK,QAAb;AAClB,oBAAAA,QAAQ,UAAR,yCAAAA,QAAQ,GAAKO,KAAK,CAACP,QAAnB;AAEA,WAAK8B,MAAL,GAAcvB,KAAK,CAACwB,KAApB;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACG,WAAKC,IAAL,GAAY,SAAZ;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;;AACG,WAAKC,OAAL,GAAe,IAAf;AAEA;AACH;AACA;AACA;;AACG,WAAKC,SAAL,GAAiB,EAAjB;AACA,WAAKC,UAAL,GAAkB,EAAlB;AACA,WAAKC,SAAL,GAAiB,EAAjB;AAEA,WAAKC,QAAL,GAAgB,EAAhB;AACA;AACH;AACA;AACA;;AACG,WAAKC,SAAL,GAAiB,EAAjB;AACA,WAAKC,YAAL,GAAoB,EAApB;AACA,WAAKC,WAAL,GAAmB,EAAnB;AAEA,WAAKnD,WAAL,GAAmB,IAAIoD,GAAJ,EAAnB;AACA,WAAKnD,YAAL,GAAoB,IAAImD,GAAJ,EAApB;AAEA,WAAK9E,QAAL,GAAgB4C,KAAK,CAAC5C,QAAN,IAAkB,CAAlC;;AAEA,UAAI+E,KAAK,GAAG,IAAZ,CAzKiC,CA2KjC;AACA;;;AACA,WAAKC,IAAL,GAAY;AACX/E,QAAAA,CAAC,EAAE,CADQ;AAEXC,QAAAA,CAAC,EAAE;AAFQ,OAAZ;AAKA,WAAK+E,SAAL,GAAiB;AAChB,YAAIhF,CAAJ,GAAQ;AACP,iBAAO8E,KAAK,CAAC9E,CAAb;AACA,SAHe;;AAIhB,YAAIA,CAAJ,CAAMO,GAAN,EAAW;AACVuE,UAAAA,KAAK,CAAC9E,CAAN,GAAUO,GAAV;AACA,SANe;;AAOhB,YAAIN,CAAJ,GAAQ;AACP,iBAAO6E,KAAK,CAAC7E,CAAb;AACA,SATe;;AAUhB,YAAIA,CAAJ,CAAMM,GAAN,EAAW;AACVuE,UAAAA,KAAK,CAAC7E,CAAN,GAAUM,GAAV;AACA;;AAZe,OAAjB,CAlLiC,CAiMjC;;AACA,WAAK0E,IAAL,GAAY;AACXjF,QAAAA,CAAC,EAAE,CADQ;AAEXC,QAAAA,CAAC,EAAE;AAFQ,OAAZ,CAlMiC,CAuMjC;;AACA,WAAKiF,SAAL,GAAiBtG,KAAK,CAACuG,YAAN,CAAmBC,IAAnB,CAAwBxG,KAAxB,CAAjB;AAEAyG,MAAAA,MAAM,CAACC,cAAP,CAAsB,KAAKJ,SAA3B,EAAsC,GAAtC,EAA2C;AAC1CK,QAAAA,GAD0C,iBACpC;AACL,cAAIhF,GAAJ;AACA,cAAI,CAACuE,KAAK,CAACU,IAAX,EAAiBjF,GAAG,GAAGuE,KAAK,CAACG,IAAN,CAAWjF,CAAjB,CAAjB,KACKO,GAAG,GAAGuE,KAAK,CAACU,IAAN,CAAWC,iBAAX,GAA+BzF,CAArC;AACL,iBAAOM,QAAQ,CAACC,GAAG,GAAGuE,KAAK,CAAC/E,QAAb,CAAf;AACA,SANyC;AAO1C2F,QAAAA,GAP0C,eAOtCnF,GAPsC,EAOjC;AACRA,UAAAA,GAAG,IAAIuE,KAAK,CAAC/E,QAAb;;AACA,cAAI+E,KAAK,CAACU,IAAV,EAAgB;AACfV,YAAAA,KAAK,CAACU,IAAN,CAAWG,iBAAX,CAA6B,IAAI5G,EAAE,CAACmB,IAAP,CAAYK,GAAZ,EAAiBuE,KAAK,CAACU,IAAN,CAAWC,iBAAX,GAA+BxF,CAAhD,CAA7B;AACA,WAFD,MAEO;AACN6E,YAAAA,KAAK,CAACG,IAAN,CAAWjF,CAAX,GAAeO,GAAf;AACA;AACD;AAdyC,OAA3C;AAiBA8E,MAAAA,MAAM,CAACC,cAAP,CAAsB,KAAKJ,SAA3B,EAAsC,GAAtC,EAA2C;AAC1CK,QAAAA,GAD0C,iBACpC;AACL,cAAIhF,GAAJ;AACA,cAAI,CAACuE,KAAK,CAACU,IAAX,EAAiBjF,GAAG,GAAGuE,KAAK,CAACG,IAAN,CAAWhF,CAAjB,CAAjB,KACKM,GAAG,GAAGuE,KAAK,CAACU,IAAN,CAAWC,iBAAX,GAA+BxF,CAArC;AACL,iBAAOK,QAAQ,CAACC,GAAG,GAAGuE,KAAK,CAAC/E,QAAb,CAAf;AACA,SANyC;AAO1C2F,QAAAA,GAP0C,eAOtCnF,GAPsC,EAOjC;AACRA,UAAAA,GAAG,IAAIuE,KAAK,CAAC/E,QAAb;;AACA,cAAI+E,KAAK,CAACU,IAAV,EAAgB;AACfV,YAAAA,KAAK,CAACU,IAAN,CAAWG,iBAAX,CAA6B,IAAI5G,EAAE,CAACmB,IAAP,CAAY4E,KAAK,CAACU,IAAN,CAAWC,iBAAX,GAA+BzF,CAA3C,EAA8CO,GAA9C,CAA7B;AACA,WAFD,MAEO;AACNuE,YAAAA,KAAK,CAACG,IAAN,CAAWhF,CAAX,GAAeM,GAAf;AACA;AACD;AAdyC,OAA3C;AAiBA,WAAKqF,OAAL,GAAe;AACd5F,QAAAA,CAAC,EAAE,CADW;AAEdC,QAAAA,CAAC,EAAE;AAFW,OAAf;AAKA,WAAK4F,MAAL,GAAc;AACb,YAAI7F,CAAJ,GAAQ;AACP,iBAAO8E,KAAK,CAACc,OAAN,CAAc5F,CAAd,GAAkB,CAAzB;AACA,SAHY;;AAIb,YAAIA,CAAJ,CAAMO,GAAN,EAAW;AACVuE,UAAAA,KAAK,CAACc,OAAN,CAAc5F,CAAd,GAAkBO,GAAG,GAAG,CAAC,CAAJ,GAAQ,CAA7B;AACA,SANY;;AAOb,YAAIN,CAAJ,GAAQ;AACP,iBAAO6E,KAAK,CAACc,OAAN,CAAc3F,CAAd,GAAkB,CAAzB;AACA,SATY;;AAUb,YAAIA,CAAJ,CAAMM,GAAN,EAAW;AACVuE,UAAAA,KAAK,CAACc,OAAN,CAAc3F,CAAd,GAAkBM,GAAG,GAAG,CAAC,CAAJ,GAAQ,CAA7B;AACA;;AAZY,OAAd;AAeA,WAAKuF,KAAL,GAAanD,KAAK,CAACmD,KAAnB;AACA,0BAAKA,KAAL,0DAAKA,KAAL,GAAe,KAAKzD,CAAL,CAAOoB,UAAP,CAAkBsC,QAAlB,KAA+B,CAA9C;AACA,oBAAA3D,QAAQ,UAAR,yCAAAA,QAAQ,GAAKO,KAAK,CAACP,QAAnB;;AAEA,UAAI,CAACA,QAAD,IAAa,OAAOA,QAAP,IAAmB,QAApC,EAA8C;AAC7CA,QAAAA,QAAQ,GAAG,SAAX;AACA;;AACD,WAAKA,QAAL,GAAgBA,QAAhB;AAEA,YAAApC,CAAC,UAAD,yBAAAA,CAAC,GAAK2C,KAAK,CAAC3C,CAAZ;;AACA,UAAIA,CAAC,KAAK6C,SAAV,EAAqB;AACpB7C,QAAAA,CAAC,GAAG,KAAKqC,CAAL,CAAO2D,KAAP,GAAe,KAAK3D,CAAL,CAAOoB,UAAP,CAAkB1D,QAAjC,GAA4C,CAAhD;AACA,aAAKkG,WAAL,GAAmB,IAAnB;AACA;;AACD,YAAAhG,CAAC,UAAD,yBAAAA,CAAC,GAAK0C,KAAK,CAAC1C,CAAZ;AACA,UAAIA,CAAC,KAAK4C,SAAV,EAAqB5C,CAAC,GAAG,KAAKoC,CAAL,CAAO6D,MAAP,GAAgB,KAAK7D,CAAL,CAAOoB,UAAP,CAAkB1D,QAAlC,GAA6C,CAAjD;AACrB,YAAAmC,CAAC,UAAD,yBAAAA,CAAC,GAAKS,KAAK,CAACT,CAAN,IAAWS,KAAK,CAACqD,KAAjB,IAA0BrD,KAAK,CAACwD,QAAtC;AACA,YAAAhE,CAAC,UAAD,yBAAAA,CAAC,GAAKQ,KAAK,CAACR,CAAN,IAAWQ,KAAK,CAACuD,MAAvB;AAEA,UAAI,OAAOlG,CAAP,IAAY,UAAhB,EAA4BA,CAAC,GAAGA,CAAC,CAAC2C,KAAK,CAACI,MAAN,GAAe,CAAhB,CAAL;AAC5B,UAAI,OAAO9C,CAAP,IAAY,UAAhB,EAA4BA,CAAC,GAAGA,CAAC,CAAC0C,KAAK,CAACI,MAAN,GAAe,CAAhB,CAAL;AAE5B,WAAK/C,CAAL,GAASA,CAAT;AACA,WAAKC,CAAL,GAASA,CAAT;;AAEA,UAAI2C,GAAJ,EAAS;AACR,YAAIA,GAAG,YAAYvE,EAAE,CAAC6E,KAAtB,EAA6B;AAC5B,eAAKkD,MAAL,CAAYxD,GAAZ;AACA,SAFD,MAEO;AACN,cAAI,OAAOA,GAAP,IAAc,QAAlB,EAA4B,KAAKyD,UAAL,CAAgBzD,GAAhB,EAA5B,KACK,KAAK0D,UAAL,GAAkB1D,GAAG,CAAC2D,KAAJ,EAAlB;AACL;;AACD,YAAIC,EAAE,GAAG,KAAKzG,QAAd;;AACA,YAAI,CAACmC,CAAD,KAAO,KAAKU,GAAL,CAASV,CAAT,IAAc,CAAd,IAAmB,KAAKU,GAAL,CAAST,CAAT,IAAc,CAAxC,CAAJ,EAAgD;AAC/CD,UAAAA,CAAC,GAAG,KAAKU,GAAL,CAASV,CAAT,GAAasE,EAAjB;;AACA,cAAI,KAAKrC,KAAL,IAAc,QAAlB,EAA4B;AAC3BhC,YAAAA,CAAC,GAAG,KAAKS,GAAL,CAAST,CAAT,GAAaqE,EAAjB;AACA;AACD;AACD;;AAED,WAAKC,KAAL,GAAa,IAAIC,WAAJ,EAAb;;AAEA,UAAI,KAAKtE,QAAL,IAAiB,MAArB,EAA6B;AAC5B,YAAI,KAAK6D,WAAT,EAAsB,KAAKU,WAAL,CAAiBzE,CAAjB,EAAoBC,CAApB,EAAtB,KACK,KAAKwE,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuBzE,CAAvB,EAA0BC,CAA1B;AACL,OAHD,MAGO;AACN,aAAKD,CAAL,GAASA,CAAC,KAAK,KAAKnC,QAAL,GAAgB,CAAhB,GAAoB,CAApB,GAAwB,EAA7B,CAAV;AACA,aAAKoC,CAAL,GAASA,CAAC,IAAI,KAAKD,CAAnB;AACA,YAAIA,CAAC,KAAKW,SAAN,IAAmBV,CAAC,KAAKU,SAA7B,EAAwC,KAAKqB,MAAL,GAAc,QAAd,CAAxC,KACK,KAAKA,MAAL,GAAc,KAAd;AACL;;AAED,WAAK0C,MAAL,GAAc,IAAIC,KAAJ,EAAd;AAEAxB,MAAAA,MAAM,CAACC,cAAP,CAAsB,KAAKsB,MAA3B,EAAmC,GAAnC,EAAwC;AACvCrB,QAAAA,GADuC,iBACjC;AACL,iBAAO,KAAKuB,EAAZ;AACA,SAHsC;AAIvCpB,QAAAA,GAJuC,eAInCnF,GAJmC,EAI9B;AACR,cAAIA,GAAG,IAAI,KAAKuG,EAAhB,EAAoB;AACpB,cAAIC,OAAO,GAAGxG,GAAG,GAAG,KAAKuG,EAAzB;AACAhC,UAAAA,KAAK,CAACkC,EAAN,IAAYD,OAAZ;AACAjC,UAAAA,KAAK,CAACmC,GAAN,IAAaF,OAAb;;AACAjC,UAAAA,KAAK,CAACoC,eAAN,CAAsB;AAAElH,YAAAA,CAAC,EAAE+G,OAAL;AAAc9G,YAAAA,CAAC,EAAE;AAAjB,WAAtB;;AACA,eAAK6G,EAAL,GAAUvG,GAAV;AACA,eAAK4G,IAAL,GAAY,CAAC,KAAKL,EAAL,GAAU,KAAKM,EAAhB,IAAsB,GAAlC;AACA;AAZsC,OAAxC;AAeA/B,MAAAA,MAAM,CAACC,cAAP,CAAsB,KAAKsB,MAA3B,EAAmC,GAAnC,EAAwC;AACvCrB,QAAAA,GADuC,iBACjC;AACL,iBAAO,KAAK6B,EAAZ;AACA,SAHsC;AAIvC1B,QAAAA,GAJuC,eAInCnF,GAJmC,EAI9B;AACR,cAAIA,GAAG,IAAI,KAAK6G,EAAhB,EAAoB;AACpB,cAAIC,OAAO,GAAG9G,GAAG,GAAG,KAAK6G,EAAzB;;AACA,cAAItC,KAAK,CAACwC,EAAV,EAAc;AACb,iBAAKA,EAAL,IAAWD,OAAX;AACA,iBAAKE,GAAL,IAAYF,OAAZ;AACA;;AACDvC,UAAAA,KAAK,CAACoC,eAAN,CAAsB;AAAElH,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAEoH;AAAX,WAAtB;;AACA,eAAKD,EAAL,GAAU7G,GAAV;AACA,eAAK4G,IAAL,GAAY,CAAC,KAAKL,EAAL,GAAU,KAAKM,EAAhB,IAAsB,GAAlC;AACA;AAdsC,OAAxC;AAiBA;AACH;AACA;AACA;AACA;AACA;;AACG,WAAKI,OAAL,GAAe;AAAExH,QAAAA,CAAC,EAADA,CAAF;AAAKC,QAAAA,CAAC,EAADA;AAAL,OAAf;AAEA,WAAKwH,KAAL,GAAa;AAAEzH,QAAAA,CAAC,EAADA,CAAF;AAAKC,QAAAA,CAAC,EAADA;AAAL,OAAb;AACA,WAAKyH,QAAL,GAAgB,CAAhB;AACA,WAAKC,IAAL,GAAY,CAAZ;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AACG,WAAKC,KAAL,GAAa,KAAb;AAEA,WAAKC,MAAL,GAAc,EAAd;AAEA,UAAIC,GAAG,GAAGnF,KAAK,CAACoF,GAAN,CAAU/H,CAAV,IAAe,CAAzB;AACA,UAAIgI,GAAG,GAAGrF,KAAK,CAACoF,GAAN,CAAU9H,CAAV,IAAe,CAAzB;AACA,UAAI,OAAO6H,GAAP,IAAc,UAAlB,EAA8BA,GAAG,GAAGA,GAAG,CAACnF,KAAK,CAACI,MAAN,GAAe,CAAhB,CAAT;AAC9B,UAAI,OAAOiF,GAAP,IAAc,UAAlB,EAA8BA,GAAG,GAAGA,GAAG,CAACrF,KAAK,CAACI,MAAN,GAAe,CAAhB,CAAT;AAC9B,WAAKgF,GAAL,CAAS/H,CAAT,GAAa8H,GAAb;AACA,WAAKC,GAAL,CAAS9H,CAAT,GAAa+H,GAAb;;AApXiC,iDAsXhBzG,WAtXgB;AAAA;;AAAA;AAsXjC,4DAA8B;AAAA,cAArB0G,IAAqB;AAC7B,cAAIA,IAAI,IAAI,UAAR,IAAsBA,IAAI,IAAI,GAA9B,IAAqCA,IAAI,IAAI,GAAjD,EAAsD;AACtD,cAAI1H,GAAG,GAAGoC,KAAK,CAACsF,IAAD,CAAf;AACA,cAAI1H,GAAG,KAAKsC,SAAZ,EAAuB;AACvB,cAAI,OAAOtC,GAAP,IAAc,UAAlB,EAA8BA,GAAG,GAAGA,GAAG,CAACoC,KAAK,CAACI,MAAN,GAAe,CAAhB,CAAT;;AAC9B,cAAI,QAAOxC,GAAP,KAAc,QAAlB,EAA4B;AAC3B,iBAAK0H,IAAL,IAAa5C,MAAM,CAAC6C,MAAP,CAAc,EAAd,EAAkB3H,GAAlB,CAAb;AACA,WAFD,MAEO;AACN,iBAAK0H,IAAL,IAAa1H,GAAb;AACA;AACD,SAhYgC,CAkYjC;AACA;;AAnYiC;AAAA;AAAA;AAAA;AAAA;;AAAA,kDAoYnB,KAAKiD,MApYc;AAAA;;AAAA;AAoYjC,+DAA2B;AAAA,cAAlB2E,CAAkB;AAC1B,cAAIC,MAAM,GAAG,EAAb;AACA,cAAIC,KAAK,GAAGhD,MAAM,CAACiD,IAAP,CAAYH,CAAZ,CAAZ;;AACA,oCAAiBE,KAAjB,4BAAwB;AAAnB,gBAAIJ,KAAI,aAAR;AACJ,gBAAI,CAACjG,KAAK,CAACiG,KAAD,CAAN,IAAgBA,KAAI,CAAC,CAAD,CAAJ,IAAW,GAA/B,EAAoC;AACpCG,YAAAA,MAAM,CAACH,KAAD,CAAN,GAAe,IAAf;AACA,WANyB,CAQ1B;;;AACA,cAAIM,OAAO,GAAG,CACb,UADa,EAEb,OAFa,EAGb,GAHa,EAIb,QAJa,EAKb,QALa,EAMb,WANa,EAOb,YAPa,EAQb,WARa,EASb,aATa,EAUb,UAVa,EAWb,WAXa,EAYb,cAZa,EAab,aAba,EAcb,cAda,EAeb,WAfa,EAgBb,YAhBa,EAiBb,UAjBa,EAkBb,QAlBa,EAmBb,aAnBa,EAoBb,OApBa,EAqBb,UArBa,EAsBb,KAtBa,EAuBb,QAvBa,EAwBb,OAxBa,CAAd;;AA0BA,uCAAcA,OAAd,gCAAuB;AAAlB,gBAAIC,CAAC,gBAAL;AACJ,mBAAOJ,MAAM,CAACI,CAAD,CAAb;AACA;;AAED,eAAK,IAAIP,MAAT,IAAiBG,MAAjB,EAAyB;AACxB,gBAAI7H,IAAG,GAAG4H,CAAC,CAACF,MAAD,CAAX;AACA,gBAAI1H,IAAG,KAAKsC,SAAZ,EAAuB;;AACvB,gBAAI,OAAOtC,IAAP,IAAc,UAAlB,EAA8B;AAC7B,kBAAIK,eAAe,CAACL,IAAD,CAAnB,EAA0BA,IAAG,GAAGA,IAAG,EAAT;AAC1B;;AACD,gBAAI,QAAOA,IAAP,KAAc,QAAlB,EAA4B;AAC3B,mBAAK0H,MAAL,IAAa5C,MAAM,CAAC6C,MAAP,CAAc,EAAd,EAAkB3H,IAAlB,CAAb;AACA,aAFD,MAEO;AACN,mBAAK0H,MAAL,IAAa1H,IAAb;AACA;AACD;AACD;AAED;AACH;AACA;AACA;AACA;;AA7boC;AAAA;AAAA;AAAA;AAAA;;AA8bjC,WAAKkI,YAAL;AAEA,0BAAKC,KAAL,0DAAKA,KAAL,GAAe,KAAKrG,CAAL,CAAOqG,KAAP,CAAa,KAAKrG,CAAL,CAAOsG,MAAP,CAAc,EAAd,EAAkB,GAAlB,CAAb,EAAqC,KAAKtG,CAAL,CAAOsG,MAAP,CAAc,EAAd,EAAkB,GAAlB,CAArC,EAA6D,KAAKtG,CAAL,CAAOsG,MAAP,CAAc,EAAd,EAAkB,GAAlB,CAA7D,CAAf;AAEA,8BAAKC,SAAL,kEAAKA,SAAL,GAAmB,KAAKvG,CAAL,CAAOqG,KAAP,CAAa,CAAb,CAAnB;AACA,6BAAKG,QAAL,gEAAKA,QAAL,GAAkB,KAAK9I,QAAL,IAAiB,CAAjB,GAAsB,KAAKsC,CAAL,CAAOyG,MAAP,GAAgB,KAAKzG,CAAL,CAAOwG,QAAP,EAAhB,GAAoC,EAA1D,GAAgE,GAAlF;AAEA,UAAIE,kBAAkB,GAAG,KAAzB;;AArciC,kDAscnB,KAAKvF,MAtcc;AAAA;;AAAA;AAscjC,+DAA2B;AAAA,cAAlB2E,EAAkB;;AAC1B,cAAIA,EAAC,CAACa,YAAN,EAAoB;AACnBD,YAAAA,kBAAkB,GAAG,IAArB;AACA;AACA;AACD;AA3cgC;AAAA;AAAA;AAAA;AAAA;;AA4cjC,UAAIA,kBAAkB,IAAI,CAAC,KAAKC,YAAhC,EAA8C,KAAKC,cAAL;AAE9C,WAAKC,oBAAL,GAA4BhH,CAAC,KAAKW,SAAN,IAAmBV,CAAC,KAAKU,SAArD;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA1oB0D;AAAA;AAAA,aA2oBxD,qBAAYsG,OAAZ,EAAqBC,OAArB,EAA8BlH,CAA9B,EAAiCC,CAAjC,EAAoC;AAAA;;AACnC,YAAIM,IAAI,8BAAOC,SAAP,CAAR;AACA,YAAI2G,IAAJ,EAAUlF,KAAV;;AAEA,YAAI1B,IAAI,CAACM,MAAL,GAAc,CAAlB,EAAqB;AACpBoG,UAAAA,OAAO,GAAG,CAAV;AACAC,UAAAA,OAAO,GAAG,CAAV;AACAlH,UAAAA,CAAC,GAAGO,IAAI,CAAC,CAAD,CAAR;AACAN,UAAAA,CAAC,GAAGM,IAAI,CAAC,CAAD,CAAR;AACA,eAAKwD,WAAL,GAAmB,IAAnB;AACA;;AAED,oBAAAkD,OAAO,UAAP,qCAAAA,OAAO,GAAK,CAAZ;AACA,oBAAAC,OAAO,UAAP,qCAAAA,OAAO,GAAK,CAAZ;AACA,eAAAlH,CAAC,UAAD,2BAAAA,CAAC,GAAK,KAAK8E,EAAX;;AACA,YAAI,CAAC,KAAKxB,IAAN,IAAc,KAAKrB,KAAnB,IAA4B,KAAKA,KAAL,IAAc,QAA9C,EAAwD;AAAA;;AACvD,iBAAAhC,CAAC,UAAD,2BAAAA,CAAC,GAAK,KAAKmF,EAAX;AACA,SAjBkC,CAmBnC;AACA;;;AACA,YAAIjE,KAAK,CAACC,OAAN,CAAcpB,CAAd,KAAoB,OAAOC,CAAP,IAAY,QAApC,EAA8C;AAC7C,cAAI,CAACH,KAAK,CAACE,CAAD,CAAV,EAAeA,CAAC,GAAGqB,MAAM,CAACrB,CAAD,CAAV;;AACf,cAAI,OAAOA,CAAP,IAAY,QAAZ,IAAwBmB,KAAK,CAACC,OAAN,CAAcpB,CAAC,CAAC,CAAD,CAAf,CAA5B,EAAiD;AAChD,iBAAKkB,UAAL,GAAkB,OAAlB;AACA;;AACD,cAAI,OAAOjB,CAAP,IAAY,QAAhB,EAA0B;AACzBkH,YAAAA,IAAI,GAAGjI,iBAAiB,CAACe,CAAD,EAAID,CAAJ,CAAxB;AACAC,YAAAA,CAAC,GAAGU,SAAJ;AACA,WAHD,MAGO;AACNwG,YAAAA,IAAI,GAAGnH,CAAP;AACA;AACD,SAXD,MAWO;AAAA;;AACN,cAAIA,CAAC,KAAKW,SAAN,IAAmBV,CAAC,KAAKU,SAA7B,EAAwC,UAAAsB,KAAK,UAAL,iCAAAA,KAAK,GAAK,QAAV;AACxC,qBAAAA,KAAK,UAAL,mCAAAA,KAAK,GAAK,KAAV;AACA;;AAED,YAAIA,KAAK,IAAI,KAAT,IAAkBA,KAAK,IAAI,QAA/B,EAAyC;AAAA;;AACxC,iBAAAjC,CAAC,UAAD,2BAAAA,CAAC,GAAK,KAAKnC,QAAL,GAAgB,CAAhB,GAAoB,CAApB,GAAwB,EAA9B;AACA,iBAAAoC,CAAC,UAAD,2BAAAA,CAAC,GAAKD,CAAN;AACA;;AAED,YAAImG,KAAK,GAAG,EAAZ;AAEA,YAAIiB,UAAJ,CA5CmC,CA8CnC;AACA;AACA;;AACA,YAAInF,KAAK,IAAI,KAAT,IAAkBA,KAAK,IAAI,QAA/B,EAAyC;AACxCmF,UAAAA,UAAU,GAAGxJ,OAAO,CAAC;AAAEE,YAAAA,CAAC,EAAEkC,CAAC,GAAG,IAAT;AAAejC,YAAAA,CAAC,EAAEkC,CAAC,GAAG;AAAtB,WAAD,EAA+B,KAAKpC,QAApC,CAApB;AACA;;AAED,YAAIwJ,CAAJ;;AACA,YAAIpF,KAAK,IAAI,KAAb,EAAoB;AACnBoF,UAAAA,CAAC,GAAGxK,EAAE,CAACyK,GAAH,CAAOF,UAAU,CAACtJ,CAAX,GAAe,CAAtB,EAAyBsJ,UAAU,CAACrJ,CAAX,GAAe,CAAxC,EAA2CH,OAAO,CAAC;AAAEE,YAAAA,CAAC,EAAEmJ,OAAL;AAAclJ,YAAAA,CAAC,EAAEmJ;AAAjB,WAAD,EAA6B,KAAKrJ,QAAlC,CAAlD,EAA+F,CAA/F,CAAJ;AACA,SAFD,MAEO,IAAIoE,KAAK,IAAI,QAAb,EAAuB;AAC7BoF,UAAAA,CAAC,GAAGxK,EAAE,CAAC0K,MAAH,CAAU3J,OAAO,CAAC;AAAEE,YAAAA,CAAC,EAAEmJ,OAAL;AAAclJ,YAAAA,CAAC,EAAEmJ;AAAjB,WAAD,EAA6B,KAAKrJ,QAAlC,CAAjB,EAA8DuJ,UAAU,CAACtJ,CAAX,GAAe,CAA7E,CAAJ;AACA,SAFM,MAEA,IAAIqJ,IAAJ,EAAU;AAAA,cASPK,SATO,GAShB,SAASA,SAAT,GAAqB;AACpB,gBAAIC,IAAI,CAAC3J,CAAL,GAAS4J,GAAG,CAAC5J,CAAjB,EAAoB4J,GAAG,CAAC5J,CAAJ,GAAQ2J,IAAI,CAAC3J,CAAb;AACpB,gBAAI2J,IAAI,CAAC1J,CAAL,GAAS2J,GAAG,CAAC3J,CAAjB,EAAoB2J,GAAG,CAAC3J,CAAJ,GAAQ0J,IAAI,CAAC1J,CAAb;AACpB,gBAAI0J,IAAI,CAAC3J,CAAL,GAAS6J,GAAG,CAAC7J,CAAjB,EAAoB6J,GAAG,CAAC7J,CAAJ,GAAQ2J,IAAI,CAAC3J,CAAb;AACpB,gBAAI2J,IAAI,CAAC1J,CAAL,GAAS4J,GAAG,CAAC5J,CAAjB,EAAoB4J,GAAG,CAAC5J,CAAJ,GAAQ0J,IAAI,CAAC1J,CAAb;AACpB,WAde;;AAChB,cAAI6J,IAAI,GAAG,CAAC;AAAE9J,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE;AAAX,WAAD,CAAX;AACA,cAAI0J,IAAI,GAAG;AAAE3J,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE;AAAX,WAAX;AACA,cAAI2J,GAAG,GAAG;AAAE5J,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE;AAAX,WAAV;AACA,cAAI4J,GAAG,GAAG;AAAE7J,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE;AAAX,WAAV,CAJgB,CAMhB;;AACA,cAAI8J,YAAY,GAAG1G,KAAK,CAACC,OAAN,CAAc+F,IAAI,CAAC,CAAD,CAAlB,CAAnB;AASA,cAAIrJ,CAAJ,EAAOC,CAAP;;AACA,cAAI8J,YAAJ,EAAkB;AACjB,gBAAI,KAAK9D,WAAT,EAAsB;AACrBjG,cAAAA,CAAC,GAAGqJ,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAJ;AACApJ,cAAAA,CAAC,GAAGoJ,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAJ,CAFqB,CAGrB;;AACA,kBAAI,CAAC,KAAK7D,IAAV,EAAgB;AACf,qBAAKxF,CAAL,GAASA,CAAT;AACA,qBAAKC,CAAL,GAASA,CAAT;AACA,eAHD,MAGO;AACND,gBAAAA,CAAC,GAAG,KAAKA,CAAL,GAAS,KAAKgK,eAAL,CAAqBhK,CAAlC;AACAC,gBAAAA,CAAC,GAAG,KAAKA,CAAL,GAAS,KAAK+J,eAAL,CAAqB/J,CAAlC;AACA6J,gBAAAA,IAAI,CAACG,GAAL;AACA;AACD;;AACD,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,IAAI,CAACtG,MAAzB,EAAiCmH,CAAC,EAAlC,EAAsC;AACrC,kBAAI,KAAKjE,WAAT,EAAsB;AACrB,oBAAIiE,CAAC,IAAI,CAAL,IAAU,CAAC,KAAK1E,IAApB,EAA0B,SADL,CAErB;;AACAmE,gBAAAA,IAAI,CAAC3J,CAAL,GAASqJ,IAAI,CAACa,CAAD,CAAJ,CAAQ,CAAR,IAAalK,CAAtB;AACA2J,gBAAAA,IAAI,CAAC1J,CAAL,GAASoJ,IAAI,CAACa,CAAD,CAAJ,CAAQ,CAAR,IAAajK,CAAtB;AACApB,gBAAAA,GAAG,CAACqL,CAAD,EAAIP,IAAI,CAAC3J,CAAT,EAAY2J,IAAI,CAAC1J,CAAjB,CAAH;AACA,eAND,MAMO;AACN0J,gBAAAA,IAAI,CAAC3J,CAAL,IAAUqJ,IAAI,CAACa,CAAD,CAAJ,CAAQ,CAAR,CAAV;AACAP,gBAAAA,IAAI,CAAC1J,CAAL,IAAUoJ,IAAI,CAACa,CAAD,CAAJ,CAAQ,CAAR,CAAV;AACA;;AACDJ,cAAAA,IAAI,CAACpG,IAAL,CAAU;AAAE1D,gBAAAA,CAAC,EAAE2J,IAAI,CAAC3J,CAAV;AAAaC,gBAAAA,CAAC,EAAE0J,IAAI,CAAC1J;AAArB,eAAV;AAEAyJ,cAAAA,SAAS;AACT;AACD,WA7BD,MA6BO;AACN,gBAAIS,GAAG,GAAG,CAAV;AACA,gBAAId,IAAI,CAACtG,MAAL,GAAc,CAAlB,EAAqBoH,GAAG,GAAGd,IAAI,CAACA,IAAI,CAACtG,MAAL,GAAc,CAAf,CAAV;AACrB,gBAAIqH,GAAG,GAAGD,GAAG,GAAG,CAAN,GAAU,CAAV,GAAc,CAAC,CAAzB;AACAA,YAAAA,GAAG,GAAG3J,IAAI,CAACC,GAAL,CAAS0J,GAAT,CAAN;AACA,gBAAIE,GAAG,GAAG,CAAV;;AACA,iBAAK,IAAIH,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGC,GAApB,EAAyBD,GAAC,EAA1B,EAA8B;AAC7B,mBAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,IAAI,CAACtG,MAAL,GAAc,CAAlC,EAAqCuH,CAAC,IAAI,CAA1C,EAA6C;AAC5C,oBAAIC,GAAG,GAAGlB,IAAI,CAACiB,CAAD,CAAd;AACAD,gBAAAA,GAAG,IAAIhB,IAAI,CAACiB,CAAC,GAAG,CAAL,CAAX;AACAX,gBAAAA,IAAI,CAAC3J,CAAL,IAAUuK,GAAG,GAAG,KAAKlI,CAAL,CAAOmI,GAAP,CAAWH,GAAX,CAAhB;AACAV,gBAAAA,IAAI,CAAC1J,CAAL,IAAUsK,GAAG,GAAG,KAAKlI,CAAL,CAAOoI,GAAP,CAAWJ,GAAX,CAAhB;AACAP,gBAAAA,IAAI,CAACpG,IAAL,CAAU;AAAE1D,kBAAAA,CAAC,EAAE2J,IAAI,CAAC3J,CAAV;AAAaC,kBAAAA,CAAC,EAAE0J,IAAI,CAAC1J;AAArB,iBAAV;AAEAyJ,gBAAAA,SAAS;AACT;;AACDW,cAAAA,GAAG,IAAID,GAAP;AACA;AACD;;AAED,cACC5J,IAAI,CAACC,GAAL,CAASD,IAAI,CAACC,GAAL,CAASqJ,IAAI,CAAC,CAAD,CAAJ,CAAQ9J,CAAjB,IAAsBQ,IAAI,CAACC,GAAL,CAASqJ,IAAI,CAACA,IAAI,CAAC/G,MAAL,GAAc,CAAf,CAAJ,CAAsB/C,CAA/B,CAA/B,KAAqEjB,EAAE,CAACC,QAAH,CAAY2B,UAAjF,IACAH,IAAI,CAACC,GAAL,CAASD,IAAI,CAACC,GAAL,CAASqJ,IAAI,CAAC,CAAD,CAAJ,CAAQ7J,CAAjB,IAAsBO,IAAI,CAACC,GAAL,CAASqJ,IAAI,CAACA,IAAI,CAAC/G,MAAL,GAAc,CAAf,CAAJ,CAAsB9C,CAA/B,CAA/B,KAAqElB,EAAE,CAACC,QAAH,CAAY2B,UAFlF,EAGE;AACDwD,YAAAA,KAAK,GAAG,SAAR;AACA,iBAAKf,UAAL,GAAkB,QAAlB;AACA,WAND,MAMO;AACNe,YAAAA,KAAK,GAAG,OAAR;AACA;;AAEDjC,UAAAA,CAAC,GAAG2H,GAAG,CAAC7J,CAAJ,GAAQ4J,GAAG,CAAC5J,CAAhB;AACA,eAAKiH,GAAL,GAAW/E,CAAC,GAAG,GAAf;AACAC,UAAAA,CAAC,GAAG0H,GAAG,CAAC5J,CAAJ,GAAQ2J,GAAG,CAAC3J,CAAhB;AACA,eAAKsH,GAAL,GAAWpF,CAAC,GAAG,GAAf;AAEA,cAAIuI,QAAQ,GAAG,KAAf;;AACA,cAAIvG,KAAK,IAAI,SAAT,IAAsB,KAAKwG,aAAL,CAAmBb,IAAI,CAAC3I,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAnB,CAA1B,EAAiE;AAChEuJ,YAAAA,QAAQ,GAAG,IAAX;AACA;;AAED,cAAI,KAAKtH,UAAL,IAAmB,OAAvB,EAAgC;AAC/B,iBAAK,IAAI8G,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGJ,IAAI,CAAC/G,MAAzB,EAAiCmH,GAAC,EAAlC,EAAsC;AACrCJ,cAAAA,IAAI,CAACI,GAAD,CAAJ,GAAUpK,OAAO,CAACgK,IAAI,CAACI,GAAD,CAAL,EAAU,KAAKnK,QAAf,CAAjB;AACA;AACD,WAJD,MAIO;AACN;AACA,gBAAI6K,OAAO,GAAG,CAAd;AACA,gBAAIC,OAAO,GAAG,CAAd,CAHM,CAIN;AACA;;AACA,gBAAIC,IAAI,GAAG,CAAX;AACA,gBAAIC,IAAI,GAAG,CAAX;AAEA,gBAAIC,EAAE,GAAGlB,IAAI,CAAC/G,MAAd,CATM,CAUN;;AACA,gBAAIoB,KAAK,IAAI,SAAT,IAAsBuG,QAA1B,EAAoCM,EAAE;;AACtC,iBAAK,IAAId,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGc,EAApB,EAAwBd,GAAC,EAAzB,EAA6B;AAC5BY,cAAAA,IAAI,IAAIhB,IAAI,CAACI,GAAD,CAAJ,CAAQlK,CAAhB;AACA+K,cAAAA,IAAI,IAAIjB,IAAI,CAACI,GAAD,CAAJ,CAAQjK,CAAhB;AACA;;AACD2K,YAAAA,OAAO,GAAGE,IAAI,GAAGE,EAAjB;AACAH,YAAAA,OAAO,GAAGE,IAAI,GAAGC,EAAjB;;AAEA,gBAAI,CAAC,KAAKxF,IAAV,EAAgB;AACf,mBAAKwE,eAAL,GAAuB;AAAEhK,gBAAAA,CAAC,EAAE4K,OAAL;AAAc3K,gBAAAA,CAAC,EAAE4K;AAAjB,eAAvB;AACA,aArBK,CAuBN;AACA;AACA;AACA;;;AAEA,gBAAI,KAAK5E,WAAL,IAAoB8D,YAAxB,EAAsC;AACrC,kBAAI,CAAC,KAAKvE,IAAV,EAAgB;AACf;AACA;AACA,qBAAKxF,CAAL,IAAU4K,OAAV;AACA,qBAAK3K,CAAL,IAAU4K,OAAV;AACA,eALD,MAKO;AACND,gBAAAA,OAAO,GAAG,KAAKZ,eAAL,CAAqBhK,CAA/B;AACA6K,gBAAAA,OAAO,GAAG,KAAKb,eAAL,CAAqB/J,CAA/B;AACA;AACD;;AAED,iBAAK,IAAIiK,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGJ,IAAI,CAAC/G,MAAzB,EAAiCmH,GAAC,EAAlC,EAAsC;AACrC,kBAAIe,GAAG,GAAGnB,IAAI,CAACI,GAAD,CAAd;AACAJ,cAAAA,IAAI,CAACI,GAAD,CAAJ,GAAUpK,OAAO,CAAC;AAAEE,gBAAAA,CAAC,EAAEiL,GAAG,CAACjL,CAAJ,GAAQmJ,OAAR,GAAkByB,OAAvB;AAAgC3K,gBAAAA,CAAC,EAAEgL,GAAG,CAAChL,CAAJ,GAAQmJ,OAAR,GAAkByB;AAArD,eAAD,EAAiE,KAAK9K,QAAtE,CAAjB;AACA;AACD;;AAED,cAAI,CAAC2K,QAAD,IAAaZ,IAAI,CAAC/G,MAAL,GAAc,CAAd,GAAkBhE,EAAE,CAACC,QAAH,CAAYkM,kBAA3C,IAAiE,KAAKhH,MAAL,IAAe,OAApF,EAA6F;AAC5FC,YAAAA,KAAK,GAAG,OAAR;AACA;;AAED,cAAIA,KAAK,IAAI,SAAb,EAAwB;AACvBoF,YAAAA,CAAC,GAAGxK,EAAE,CAACoM,OAAH,CAAWrB,IAAX,CAAJ;AACA,WAFD,MAEO,IAAI3F,KAAK,IAAI,OAAb,EAAsB;AAC5BoF,YAAAA,CAAC,GAAGxK,EAAE,CAACqM,KAAH,CAAStB,IAAT,EAAe,KAAf,CAAJ;AACAzB,YAAAA,KAAK,CAACgD,OAAN,GAAgB,CAAhB;AACAhD,YAAAA,KAAK,CAACiD,WAAN,GAAoB,CAApB;AACA;AACD;;AACDjD,QAAAA,KAAK,CAAClE,KAAN,GAAcoF,CAAd;AACA,0BAAAlB,KAAK,CAACgD,OAAN,2DAAAhD,KAAK,CAACgD,OAAN,GAAkB,KAAKA,OAAL,IAAgB,CAAlC;AACA,2BAAAhD,KAAK,CAACkD,QAAN,6DAAAlD,KAAK,CAACkD,QAAN,GAAmB,KAAKA,QAAL,IAAiB,GAApC;AACA,8BAAAlD,KAAK,CAACiD,WAAN,mEAAAjD,KAAK,CAACiD,WAAN,GAAsB,KAAKE,UAAL,IAAmB,GAAzC;;AAEA,YAAI,CAAC,KAAKhG,IAAV,EAAgB;AACf,eAAKA,IAAL,GAAY,KAAKnD,CAAL,CAAOE,KAAP,CAAakJ,UAAb,CAAwB;AACnCC,YAAAA,QAAQ,EAAE5L,OAAO,CAAC;AAAEE,cAAAA,CAAC,EAAE,KAAKA,CAAV;AAAaC,cAAAA,CAAC,EAAE,KAAKA;AAArB,aAAD,EAA2B,KAAKF,QAAhC,CADkB;AAEnC4L,YAAAA,IAAI,EAAE,KAAKvJ;AAFwB,WAAxB,CAAZ;AAIA,eAAKoD,IAAL,CAAUoG,MAAV,GAAmB,IAAnB;AACA;;AACD,YAAI,CAAC,KAAK1H,MAAV,EAAkB;AACjB,eAAKA,MAAL,GAAcC,KAAd;AACA;;AACD,aAAKqB,IAAL,CAAUqG,aAAV,CAAwBxD,KAAxB;AAEA,aAAKrB,EAAL,GAAU9E,CAAV;AACA,aAAK+E,GAAL,GAAW/E,CAAC,GAAG,GAAf;;AAEA,YAAIiC,KAAK,IAAI,QAAb,EAAuB;AACtB,eAAK2H,SAAL,GAAiB5J,CAAjB;AACA,SAFD,MAEO;AACN,eAAKoF,EAAL,GAAUnF,CAAV;AACA,eAAKoF,GAAL,GAAWpF,CAAC,GAAG,GAAf;AACA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;AA13B0D;AAAA;AAAA,aA23BxD,4BAAmB;AAClB,aAAKmC,SAAL,GAAiB,EAAjB;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKC,SAAL,GAAiB,EAAjB;;AACA,aAAKuH,eAAL,CAAqB,KAArB;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA14B0D;AAAA;AAAA,aA24BxD,kBAASC,OAAT,EAAkBL,IAAlB,EAAwBtD,KAAxB,EAA+B;AAAA;;AAC9B,YAAI4D,OAAO,GAAG,IAAd;AACA,mBAAA5D,KAAK,UAAL,mCAAAA,KAAK,GAAK,EAAV;AACA;AACH;AACA;AACA;AACA;AACA;AACA;;AACG,YAAIA,KAAK,CAAC6D,UAAV,EAAsB7D,KAAK,CAAC8D,WAAN,GAAoB,IAApB,CAVQ,CAY9B;;AACA9D,QAAAA,KAAK,GAAGhD,MAAM,CAAC6C,MAAP,CAAcG,KAAd,EAAqB;AAC5B+D,UAAAA,KAAK,EAAEH,OAAO,CAACzG,IADa;AAE5B6G,UAAAA,KAAK,EAAEL,OAAO,CAACxG,IAFa;AAG5BzC,UAAAA,MAAM,EAAEsF,KAAK,CAACtF,MAAN,IAAgBF,SAAhB,GAA4B1C,QAAQ,CAACkI,KAAK,CAACtF,MAAP,CAApC,GAAqD,IAHjC;AAI5BuJ,UAAAA,SAAS,EAAEjE,KAAK,CAACiE,SAAN,IAAmBzJ,SAAnB,GAA+B1C,QAAQ,CAACkI,KAAK,CAACiE,SAAP,CAAvC,GAA2D,IAJ1C;AAK5BC,UAAAA,OAAO,EAAElE,KAAK,CAACkE,OAAN,IAAiB1J,SAAjB,GAA6B1C,QAAQ,CAACkI,KAAK,CAACkE,OAAP,CAArC,GAAuD,IALpC;AAM5BC,UAAAA,OAAO,EAAEnE,KAAK,CAACmE,OAAN,IAAiB3J,SAAjB,GAA6B1C,QAAQ,CAACkI,KAAK,CAACmE,OAAP,CAArC,GAAuD,IANpC;AAO5BC,UAAAA,aAAa,EAAEpE,KAAK,CAACoE,aAAN,GAAsBtM,QAAQ,CAACkI,KAAK,CAACoE,aAAP,CAA9B,GAAsD,IAAI1N,EAAE,CAACmB,IAAP,CAAY,CAAZ,EAAe,CAAf,CAPzC;AAQ5BwM,UAAAA,aAAa,EAAErE,KAAK,CAACqE,aAAN,GAAsBvM,QAAQ,CAACkI,KAAK,CAACqE,aAAP,CAA9B,GAAsD,IAAI3N,EAAE,CAACmB,IAAP,CAAY,CAAZ,EAAe,CAAf,CARzC;AAS5ByM,UAAAA,gBAAgB,EAAEtE,KAAK,CAACsE,gBAAN,GAAyBxM,QAAQ,CAACkI,KAAK,CAACsE,gBAAP,CAAjC,GAA4D,CATlD;AAU5BC,UAAAA,gBAAgB,EAAEvE,KAAK,CAACuE,gBAAN,GAAyBzM,QAAQ,CAACkI,KAAK,CAACuE,gBAAP,CAAjC,GAA4D,CAVlD;AAW5BC,UAAAA,YAAY,EAAExE,KAAK,CAACwE,YAAN,GAAqB/M,OAAO,CAACuI,KAAK,CAACwE,YAAP,CAA5B,GAAmD,IAAI9N,EAAE,CAACmB,IAAP,CAAY,CAAZ,EAAe,CAAf;AAXrC,SAArB,CAAR;;AAaA,YAAImI,KAAK,CAACyE,OAAV,EAAmB;AAClBzE,UAAAA,KAAK,CAAC0E,YAAN,GAAqBjN,OAAO,CAACuI,KAAK,CAACyE,OAAP,CAA5B;AACA,SAFD,MAEO,IAAIzE,KAAK,CAAC0E,YAAV,EAAwB;AAC9B1E,UAAAA,KAAK,CAAC0E,YAAN,GAAqBjN,OAAO,CAACuI,KAAK,CAAC0E,YAAP,CAA5B;AACA,SAFM,MAEA;AACN1E,UAAAA,KAAK,CAAC0E,YAAN,GAAqB,IAAIhO,EAAE,CAACmB,IAAP,CAAY,CAAZ,EAAe,CAAf,CAArB;AACA;;AACD,YAAImI,KAAK,CAAC2E,OAAV,EAAmB;AAClB3E,UAAAA,KAAK,CAAC4E,YAAN,GAAqBnN,OAAO,CAACuI,KAAK,CAAC2E,OAAP,CAA5B;AACA,SAFD,MAEO,IAAI3E,KAAK,CAAC4E,YAAV,EAAwB;AAC9B5E,UAAAA,KAAK,CAAC4E,YAAN,GAAqBnN,OAAO,CAACuI,KAAK,CAAC4E,YAAP,CAA5B;AACA,SAFM,MAEA;AACN5E,UAAAA,KAAK,CAAC4E,YAAN,GAAqB,IAAIlO,EAAE,CAACmB,IAAP,CAAY,CAAZ,EAAe,CAAf,CAArB;AACA,SAvC6B,CAwC9B;AACA;;;AAEA,iBAAAyL,IAAI,UAAJ,+BAAAA,IAAI,GAAK,UAAT;AACA,YAAIrB,CAAJ;;AACA,YAAIqB,IAAI,IAAI,UAAZ,EAAwB;AACvBrB,UAAAA,CAAC,GAAGvL,EAAE,CAACmO,aAAH,CAAiB7E,KAAjB,CAAJ;AACA,SAFD,MAEO,IAAIsD,IAAI,IAAI,OAAZ,EAAqB,CAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAVM,MAUA,IAAIA,IAAI,IAAI,QAAZ,EAAsB;AAC5BrB,UAAAA,CAAC,GAAGvL,EAAE,CAACoO,WAAH,CAAe9E,KAAf,CAAJ;AACA,SAFM,MAEA,IAAIsD,IAAI,IAAI,OAAZ,EAAqB;AAC3BrB,UAAAA,CAAC,GAAGvL,EAAE,CAACqO,UAAH,CAAc/E,KAAd,CAAJ;AACA,SAFM,MAEA,IAAIsD,IAAI,IAAI,MAAZ,EAAoB;AAC1BrB,UAAAA,CAAC,GAAGvL,EAAE,CAACsO,SAAH,CAAahF,KAAb,CAAJ;AACA,SAFM,MAEA,IAAIsD,IAAI,IAAI,MAAZ,EAAoB;AAC1BrB,UAAAA,CAAC,GAAGvL,EAAE,CAACuO,SAAH,CAAajF,KAAb,CAAJ;AACA,SAFM,MAEA,IAAIsD,IAAI,IAAI,UAAZ,EAAwB;AAC9BrB,UAAAA,CAAC,GAAGvL,EAAE,CAACwO,aAAH,CAAiBlF,KAAjB,EAAwB4D,OAAO,CAACzG,IAAhC,EAAsCwG,OAAO,CAACxG,IAA9C,EAAoDyG,OAAO,CAACzG,IAAR,CAAagI,cAAb,EAApD,CAAJ;AACA,SAFM,MAEA,IAAI7B,IAAI,IAAI,MAAZ,EAAoB;AAC1BrB,UAAAA,CAAC,GAAGvL,EAAE,CAAC0O,SAAH,CAAapF,KAAb,CAAJ;AACA,SAFM,MAEA,IAAIsD,IAAI,IAAI,UAAZ,EAAwB;AAC9BrB,UAAAA,CAAC,GAAGvL,EAAE,CAAC2O,aAAH,CAAiBrF,KAAjB,CAAJ;AACA,SAFM,MAEA,IAAIsD,IAAI,IAAI,OAAZ,EAAqB;AAC3BrB,UAAAA,CAAC,GAAGvL,EAAE,CAAC4O,UAAH,CAActF,KAAd,CAAJ;AACA,SAFM,MAEA,IAAIsD,IAAI,IAAI,WAAZ,EAAyB;AAC/BrB,UAAAA,CAAC,GAAGvL,EAAE,CAAC6O,cAAH,CAAkBvF,KAAlB,CAAJ;AACA,SAFM,MAEA,IAAIsD,IAAI,IAAI,OAAZ,EAAqB;AAC3B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;;AACD,eAAO,KAAKtJ,CAAL,CAAOE,KAAP,CAAasL,WAAb,CAAyBvD,CAAzB,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;;AAz+B0D;AAAA;AAAA,aA0+BxD,0BAAiB;AAChB,aAAK7F,QAAL,GAAgB,EAAhB;AACA,aAAKC,SAAL,GAAiB,EAAjB;AACA,aAAKC,YAAL,GAAoB,EAApB;AACA,aAAKC,WAAL,GAAmB,EAAnB;;AACA,aAAKmH,eAAL,CAAqB,IAArB;AACA,OAh/BuD,CAk/BxD;;AAl/BwD;AAAA;AAAA,aAm/BxD,yBAAgB+B,QAAhB,EAA0B;AACzB,YAAIC,OAAJ;;AACA,aAAK,IAAIC,GAAG,GAAG,KAAKC,WAApB,EAAiCD,GAAjC,EAAsCA,GAAG,GAAGA,GAAG,CAACE,OAAJ,EAA5C,EAA2D;AAC1D,cAAIF,GAAG,CAACG,UAAJ,IAAkBL,QAAtB,EAAgC;AAC/B,gBAAIM,IAAI,GAAGJ,GAAG,CAACK,MAAf;AACAL,YAAAA,GAAG,CAACM,cAAJ,CAAmB,KAAKjM,CAAL,CAAOE,KAAP,CAAagM,YAAhC;;AACA,gBAAI,CAACR,OAAL,EAAc;AACb,mBAAKvI,IAAL,CAAUgJ,aAAV,GAA0BJ,IAA1B;AACA,aAFD,MAEO;AACNL,cAAAA,OAAO,CAACM,MAAR,GAAiBD,IAAjB;AACA;AACD,WARD,MAQO;AACNL,YAAAA,OAAO,GAAGC,GAAV;AACA;AACD;AACD;AAED;AACF;AACA;AACA;;AAvgC0D;AAAA;AAAA,aAwgCxD,2BAAkB;AACjB,YAAIxI,IAAI,GAAG,EAAX;AACA,YAAI6C,KAAK,aAAO9G,WAAP,CAAT;AACA,YAAIgH,OAAO,GAAG,CACb,GADa,EAEb,GAFa,EAGb,OAHa,EAIb,QAJa,EAKb,OALa,EAMb,GANa,EAOb,UAPa,EAQb,SARa,EASb,QATa,EAUb,WAVa,EAWb,UAXa,EAYb,SAZa,EAab,WAba,CAAd;;AAeA,sCAAgBA,OAAhB,iCAAyB;AAApB,cAAIkG,GAAG,iBAAP;AACJ,cAAIvE,CAAC,GAAG7B,KAAK,CAACqG,OAAN,CAAcD,GAAd,CAAR;AACA,cAAIvE,CAAC,IAAI,CAAT,EAAY7B,KAAK,CAACsG,MAAN,CAAazE,CAAb,EAAgB,CAAhB;AACZ;;AArBgB,oDAsBA7B,KAtBA;AAAA;;AAAA;AAsBjB,iEAAwB;AAAA,gBAAfJ,IAAe;AACvBzC,YAAAA,IAAI,CAACyC,IAAD,CAAJ,GAAa,KAAKA,IAAL,CAAb;AACA;AAxBgB;AAAA;AAAA;AAAA;AAAA;;AAyBjB,eAAOzC,IAAP;AACA,OAliCuD,CAoiCxD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAzjC0D;AAAA;AAAA,WA0jCxD,eAAoB;AACnB,eAAO,KAAKA,IAAL,CAAUoJ,kBAAV,EAAP;AACA,OA5jCuD;AAAA,WA8jCxD,aAAkBrO,GAAlB,EAAuB;AACtB,aAAKiF,IAAL,CAAUqJ,kBAAV,CAA6BtO,GAA7B;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AAvkC0D;AAAA;AAAA,WAwkCxD,eAAgB;AACf,eAAO,KAAK+F,UAAZ;AACA,OA1kCuD;AAAA,WA2kCxD,aAAc/F,GAAd,EAAmB;AAClB,aAAKuO,SAAL,CAAevO,GAAf;AACA;AA7kCuD;AAAA;AAAA,WA+kCxD,eAAU;AACT,eAAO,KAAK+F,UAAZ;AACA,OAjlCuD;AAAA,WAklCxD,aAAQ/F,GAAR,EAAa;AACZ,aAAKuO,SAAL,CAAevO,GAAf;AACA;AAplCuD;AAAA;AAAA,WAslCxD,eAAW;AACV,eAAO,KAAKoD,UAAZ;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAhmC0D;AAAA;AAAA,WAimCxD,eAAiB;AAChB,YAAI,CAAC,KAAKoL,OAAV,EAAmB;AACnB,eAAO,KAAKA,OAAL,CAAaC,cAAb,EAAP;AACA,OApmCuD;AAAA,WAqmCxD,aAAezO,GAAf,EAAoB;AACnB,aAAK,IAAIyN,GAAG,GAAG,KAAKC,WAApB,EAAiCD,GAAjC,EAAsCA,GAAG,GAAGA,GAAG,CAACE,OAAJ,EAA5C,EAA2D;AAC1DF,UAAAA,GAAG,CAACiB,cAAJ,CAAmB1O,GAAnB;AACA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;AAhnC0D;AAAA;AAAA,WAinCxD,eAAmB;AAClB,eAAOH,SAAS,CAAC,KAAKoF,IAAL,CAAUgI,cAAV,EAAD,EAA6B,KAAKzN,QAAlC,CAAhB;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9nC0D;AAAA;AAAA,WA+nCxD,eAAe;AACd,eAAO,KAAKmP,SAAZ;AACA,OAjoCuD;AAAA,WAkoCxD,aAAa3O,GAAb,EAAkB;AACjBA,QAAAA,GAAG,GAAGA,GAAG,CAAC4O,WAAJ,EAAN;AACA,YAAIC,CAAC,GAAG7O,GAAG,CAAC,CAAD,CAAX;AACA,YAAI6O,CAAC,IAAI,GAAT,EAAc7O,GAAG,GAAG,SAAN;AACd,YAAI6O,CAAC,IAAI,GAAT,EAAc7O,GAAG,GAAG,QAAN;AACd,YAAI6O,CAAC,IAAI,GAAT,EAAc7O,GAAG,GAAG,WAAN;AACd,YAAI6O,CAAC,IAAI,GAAT,EAAc7O,GAAG,GAAG,MAAN;;AAEd,YAAI,KAAK2O,SAAL,KAAmBrM,SAAvB,EAAkC;AACjC,eAAKqM,SAAL,GAAiB3O,GAAjB;AACA;AACA;;AACD,YAAIA,GAAG,IAAI,KAAK2O,SAAhB,EAA2B;AAE3B,YAAIG,WAAW,GAAG,KAAKH,SAAvB;AAEA,aAAKA,SAAL,GAAiB3O,GAAjB;AACA,YAAI8O,WAAW,KAAKxM,SAApB,EAA+B,KAAKyM,MAAL;AAC/B;AAppCuD;AAAA;AAAA,aAspCxD,kBAAS;AACR,YAAIC,SAAJ;;AACA,YAAI,KAAKL,SAAL,IAAkB,MAAtB,EAA8B;AAC7BK,UAAAA,SAAS,GAAG,KAAKC,eAAL,EAAZ;AACA;;AAED,YAAI1N,CAAJ;;AACA,YAAI,KAAKoC,MAAL,IAAe,OAAf,IAA0B,KAAKA,MAAL,IAAe,SAA7C,EAAwD;AACvDpC,UAAAA,CAAC,GAAG,KAAK2N,YAAL,CAAkB,IAAlB,CAAJ;AACA,eAAKxJ,WAAL,GAAmB,IAAnB;AACA,SAVO,CAYR;;;AACA,YAAI,KAAKT,IAAT,EAAe;AACd,eAAKnD,CAAL,CAAOE,KAAP,CAAamN,WAAb,CAAyB,KAAKlK,IAA9B;AACA,eAAKA,IAAL,GAAY3C,SAAZ;AACA,SAhBO,CAkBR;;;AACA,YAAI,KAAKqM,SAAL,IAAkB,MAAtB,EAA8B;AAC7B,cAAIpN,CAAJ,EAAO;AACN,iBAAK6E,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB7E,CAAvB;AACA,WAFD,MAEO;AACN,iBAAK6E,WAAL;AACA;;AACD,cAAI,KAAKqC,YAAT,EAAuB;AACtB,iBAAKC,cAAL;AACA;;AACD,eAAK,IAAIhB,IAAT,IAAiBsH,SAAjB,EAA4B;AAC3B,gBAAIA,SAAS,CAACtH,IAAD,CAAT,KAAoBpF,SAAxB,EAAmC;AAClC,mBAAKoF,IAAL,IAAasH,SAAS,CAACtH,IAAD,CAAtB;AACA;AACD;AACD;AACD;AAxrCuD;AAAA;AAAA,aA0rCxD,qBAAY1H,GAAZ,EAAiB;AAAA;;AAChB,YAAIA,GAAG,YAAYlC,EAAE,CAACsR,KAAtB,EAA6B;AAC5B,iBAAOpP,GAAP;AACA,SAFD,MAEO,IAAI,QAAOA,GAAP,KAAc,QAAlB,EAA4B;AAClC,cAAI,OAAOA,GAAP,IAAc,QAAd,IAA0BA,GAAG,CAACwC,MAAJ,IAAc,CAA5C,EAA+C;AAC9C,mBAAO,KAAKV,CAAL,CAAOuN,QAAP,CAAgBrP,GAAhB,CAAP;AACA,WAFD,MAEO;AACN,mBAAO,KAAK8B,CAAL,CAAOqG,KAAP,CAAanI,GAAb,CAAP;AACA;AACD;;AACD,eAAO,gBAAK8B,CAAL,EAAOqG,KAAP,mCAAgBnI,GAAG,CAACsP,MAApB,EAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AA7sC0D;AAAA;AAAA,WA8sCxD,eAAY;AACX,eAAO,KAAKC,MAAZ;AACA,OAhtCuD;AAAA,WAitCxD,aAAUvP,GAAV,EAAe;AACd,aAAKuP,MAAL,GAAc,KAAKC,WAAL,CAAiBxP,GAAjB,CAAd;AACA;AACD;AACF;AACA;;AAttC0D;AAAA;AAAA,WAutCxD,eAAiB;AAChB,eAAO,KAAKuP,MAAZ;AACA,OAztCuD;AAAA,WA0tCxD,aAAevP,GAAf,EAAoB;AACnB,aAAKmI,KAAL,GAAanI,GAAb;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AApuC0D;AAAA;AAAA,WAquCxD,eAAW;AACV,eAAO,KAAKuP,MAAZ;AACA,OAvuCuD;AAAA,WAwuCxD,aAASvP,GAAT,EAAc;AACb,aAAKuP,MAAL,GAAc,KAAKC,WAAL,CAAiBxP,GAAjB,CAAd;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAlvC0D;AAAA;AAAA,WAmvCxD,eAAgB;AACf,eAAO,KAAKuP,MAAZ;AACA,OArvCuD;AAAA,WAsvCxD,aAAcvP,GAAd,EAAmB;AAClB,aAAKuP,MAAL,GAAc,KAAKC,WAAL,CAAiBxP,GAAjB,CAAd;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AA/vC0D;AAAA;AAAA,WAgwCxD,eAAa;AACZ,eAAO,KAAKyP,OAAZ;AACA,OAlwCuD;AAAA,WAmwCxD,aAAWzP,GAAX,EAAgB;AACf,aAAKyP,OAAL,GAAe,KAAKD,WAAL,CAAiBxP,GAAjB,CAAf;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AA7wC0D;AAAA;AAAA,WA8wCxD,eAAkB;AACjB,eAAO,KAAKyP,OAAZ;AACA,OAhxCuD;AAAA,WAixCxD,aAAgBzP,GAAhB,EAAqB;AACpB,aAAKyP,OAAL,GAAe,KAAKD,WAAL,CAAiBxP,GAAjB,CAAf;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AA3xC0D;AAAA;AAAA,WA4xCxD,eAAgB;AACf,eAAO,KAAK0P,UAAZ;AACA,OA9xCuD;AAAA,WA+xCxD,aAAc1P,GAAd,EAAmB;AAClB,aAAK0P,UAAL,GAAkB,KAAKF,WAAL,CAAiBxP,GAAjB,CAAlB;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AAxyC0D;AAAA;AAAA,WAyyCxD,eAAc;AACb,YAAI,CAAC,KAAKwO,OAAV,EAAmB;AACnB,eAAO,KAAKA,OAAL,CAAamB,UAAb,EAAP;AACA,OA5yCuD;AAAA,WA6yCxD,aAAY3P,GAAZ,EAAiB;AAChB,aAAK,IAAIyN,GAAG,GAAG,KAAKC,WAApB,EAAiCD,GAAjC,EAAsCA,GAAG,GAAGA,GAAG,CAACE,OAAJ,EAA5C,EAA2D;AAC1DF,UAAAA,GAAG,CAACmC,UAAJ,CAAe5P,GAAf;AACA;AACD;AAED;AACF;AACA;AACA;AACA;;AAvzC0D;AAAA;AAAA,WAwzCxD,eAAY;AACXzB,QAAAA,OAAO,CAACsR,IAAR,CAAa,sDAAb;AACA,eAAO,KAAKtK,KAAZ;AACA,OA3zCuD;AAAA,WA4zCxD,aAAUvF,GAAV,EAAe;AACdzB,QAAAA,OAAO,CAACsR,IAAR,CAAa,sDAAb;AACA,aAAKtK,KAAL,GAAavF,GAAb;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAx0C0D;AAAA;AAAA,WAy0CxD,eAAgB;AACf,YAAI,KAAKiF,IAAL,KAAc,KAAKuC,GAAL,CAAS/H,CAAT,KAAe,CAAf,IAAoB,KAAK+H,GAAL,CAAS9H,CAAT,KAAe,CAAjD,CAAJ,EAAyD;AACxD,iBAAO,KAAKoC,CAAL,CAAOgO,KAAP,CAAa,KAAKtI,GAAL,CAAS9H,CAAtB,EAAyB,KAAK8H,GAAL,CAAS/H,CAAlC,CAAP;AACA;;AACD,YAAI,CAAC,KAAKsQ,UAAV,EAAsB,OAAO,KAAKC,QAAZ;AACtB,eAAO,KAAKD,UAAZ;AACA,OA/0CuD;AAAA,WAg1CxD,aAAc/P,GAAd,EAAmB;AAClB,YAAI,OAAOA,GAAP,IAAc,QAAlB,EAA4B;AAC3B,eAAKiQ,QAAL,GAAgBjQ,GAAhB;AAEA,cAAIkQ,GAAG,GAAGlQ,GAAG,CAAC4O,WAAJ,GAAkBuB,UAAlB,CAA6B,QAA7B,EAAuC,EAAvC,CAAV;AACA,cAAIC,IAAI,GAAG;AACVC,YAAAA,EAAE,EAAE,CAAC,EADK;AAEVC,YAAAA,IAAI,EAAE,EAFI;AAGVC,YAAAA,IAAI,EAAE,GAHI;AAIVC,YAAAA,KAAK,EAAE,CAJG;AAKVC,YAAAA,OAAO,EAAE,CAAC,EALA;AAMVC,YAAAA,OAAO,EAAE,CAAC,EANA;AAOVC,YAAAA,MAAM,EAAE,CAAC,GAPC;AAQVC,YAAAA,MAAM,EAAE,CAAC,GARC;AASVC,YAAAA,SAAS,EAAE,EATD;AAUVC,YAAAA,SAAS,EAAE,EAVD;AAWVC,YAAAA,QAAQ,EAAE,GAXA;AAYVC,YAAAA,QAAQ,EAAE,GAZA;AAaVC,YAAAA,OAAO,EAAE,KAAKjB,QAbJ;AAcVkB,YAAAA,QAAQ,EAAE,KAAKlB,QAAL,GAAgB;AAdhB,WAAX;AAgBAhQ,UAAAA,GAAG,GAAGoQ,IAAI,CAACF,GAAD,CAAV;AACA;;AAED,aAAKH,UAAL,GAAkB/P,GAAlB;AACA,YAAImR,KAAK,GAAG,KAAKA,KAAjB;AACA,aAAK3J,GAAL,CAAS/H,CAAT,GAAa,KAAKqC,CAAL,CAAOmI,GAAP,CAAWjK,GAAX,IAAkBmR,KAA/B;AACA,aAAK3J,GAAL,CAAS9H,CAAT,GAAa,KAAKoC,CAAL,CAAOoI,GAAP,CAAWlK,GAAX,IAAkBmR,KAA/B;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAp3C0D;AAAA;AAAA,WAq3CxD,eAAW;AACV,YAAI,KAAKlM,IAAT,EAAe,OAAO,KAAKA,IAAL,CAAUmM,gBAAV,EAAP,CAAf,KACK,OAAOC,QAAP;AACL,OAx3CuD;AAAA,WAy3CxD,aAASrR,GAAT,EAAc;AACb,YAAI,KAAKiF,IAAT,EAAe,KAAKA,IAAL,CAAUqM,gBAAV,CAA2BtR,GAA3B;AACf;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAj5C0D;AAAA;AAAA,WAk5CxD,eAAW;AACV,eAAO,KAAKuR,QAAZ;AACA,OAp5CuD;AAAA,WAs5CxD,aAASvR,GAAT,EAAc;AACb,aAAKwR,KAAL,GAAaxR,GAAb;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAh6C0D;AAAA;AAAA,WAi6CxD,eAAc;AACb,YAAI,CAAC,KAAKiF,IAAV,EAAgB,OAAO3C,SAAP;AAChB,eAAO,KAAK2C,IAAL,CAAUwM,SAAV,EAAP;AACA,OAp6CuD;AAAA,WAq6CxD,aAAYzR,GAAZ,EAAiB;AAChB,YAAIA,GAAJ,EAAS,KAAK6B,QAAL,GAAgB,SAAhB;AACT;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AA/6C0D;AAAA;AAAA,WAg7CxD,eAAmB;AAClB,YAAI,CAAC,KAAKoD,IAAV,EAAgB,OAAO3C,SAAP;AAChB,eAAO,KAAK2C,IAAL,CAAUyM,eAAV,EAAP;AACA,OAn7CuD;AAAA,WAo7CxD,aAAiB1R,GAAjB,EAAsB;AACrB,YAAI,KAAKiF,IAAT,EAAe,KAAKA,IAAL,CAAU0M,gBAAV,CAA2B3R,GAA3B;AACf;AAED;AACF;AACA;AACA;;AA37C0D;AAAA;AAAA,WA47CxD,eAAc;AACb,eAAO,KAAK0N,WAAZ;AACA;AACD;AACF;AACA;AACA;;AAl8C0D;AAAA;AAAA,WAm8CxD,eAAkB;AACjB,YAAI,CAAC,KAAKzI,IAAV,EAAgB,OAAO,IAAP;AAChB,eAAO,KAAKA,IAAL,CAAU2M,cAAV,EAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AA/8C0D;AAAA;AAAA,WAg9CxD,eAAe;AACd,YAAI,CAAC,KAAKpD,OAAV,EAAmB;AACnB,eAAO,KAAKA,OAAL,CAAaqD,WAAb,EAAP;AACA,OAn9CuD;AAAA,WAo9CxD,aAAa7R,GAAb,EAAkB;AACjB,aAAK,IAAIyN,GAAG,GAAG,KAAKC,WAApB,EAAiCD,GAAjC,EAAsCA,GAAG,GAAGA,GAAG,CAACE,OAAJ,EAA5C,EAA2D;AAC1DF,UAAAA,GAAG,CAACqE,WAAJ,CAAgB9R,GAAhB;AACA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAp+C0D;AAAA;AAAA,WAq+CxD,eAAc;AACb,eAAO,KAAKiQ,QAAZ;AACA,OAv+CuD;AAAA,WAw+CxD,aAAYjQ,GAAZ,EAAiB;AAChB,aAAK+R,SAAL,GAAiB/R,GAAjB;AACA;AAED;AACF;AACA;AACA;AACA;;AAh/C0D;AAAA;AAAA,WAi/CxD,eAAgB;AACfzB,QAAAA,OAAO,CAACsR,IAAR,CAAa,2DAAb;AACA,eAAO,KAAK5K,IAAL,CAAU+M,QAAV,EAAP;AACA,OAp/CuD;AAAA,WAq/CxD,aAAchS,GAAd,EAAmB;AAClBzB,QAAAA,OAAO,CAACsR,IAAR,CAAa,2DAAb;AACA,YAAI7P,GAAJ,EAAS,KAAKiF,IAAL,CAAUgN,SAAV;AACT,OAx/CuD,CAy/CxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACA;AACA;AACA;;AArgD0D;AAAA;AAAA,WAsgDxD,eAAU;AACT,eAAO,KAAKlM,UAAL,CAAgBmM,UAAvB;AACA,OAxgDuD;AAAA,WAygDxD,aAAQlS,GAAR,EAAa;AACZ,aAAKuO,SAAL,CAAevO,GAAf;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AAlhD0D;AAAA;AAAA,WAmhDxD,eAAY;AACX,eAAO,KAAK+F,UAAL,CAAgBmM,UAAvB;AACA,OArhDuD;AAAA,WAshDxD,aAAUlS,GAAV,EAAe;AACd,aAAKuO,SAAL,CAAevO,GAAf;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAhiD0D;AAAA;AAAA,WAiiDxD,eAAe;AACd,eAAO,KAAKwH,GAAL,CAAS/H,CAAT,IAAc,CAAd,IAAmB,KAAK+H,GAAL,CAAS9H,CAAT,IAAc,CAAxC;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AA5iD0D;AAAA;AAAA,WA6iDxD,eAAkB;AACjB,YAAI,CAAC,KAAKuF,IAAV,EAAgB,OAAO3C,SAAP;AAChB,eAAO,KAAK2C,IAAL,CAAUkN,QAAV,EAAP;AACA,OAhjDuD;AAAA,WAijDxD,aAAgBnS,GAAhB,EAAqB;AACpB,YAAI,KAAKiF,IAAT,EAAe,KAAKA,IAAL,CAAUmN,SAAV,CAAoBpS,GAApB;AACf,OAnjDuD,CAqjDxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AAlkD0D;AAAA;AAAA,WAmkDxD,eAAgB;AACf,YAAI,CAAC,KAAKiF,IAAV,EAAgB,OAAO3C,SAAP;AAChB,eAAO,KAAK2C,IAAL,CAAUoN,WAAV,EAAP;AACA,OAtkDuD;AAAA,WAukDxD,aAAcrS,GAAd,EAAmB;AAClB,YAAIA,GAAJ,EAAS,KAAK6B,QAAL,GAAgB,WAAhB;AACT;AACD;AACF;AACA;AACA;AACA;AACA;;AA/kD0D;AAAA;AAAA,WAglDxD,eAAW;AACV,YAAI,CAAC,KAAKoD,IAAV,EAAgB,OAAO3C,SAAP;AAChB,eAAO,KAAK2C,IAAL,CAAUqN,OAAV,EAAP;AACA,OAnlDuD;AAAA,WAolDxD,aAAStS,GAAT,EAAc;AACb,YAAI,CAAC,KAAKiF,IAAV,EAAgB;AAChB,YAAIvE,CAAC,GAAG,KAAK6R,QAAb;AACA7R,QAAAA,CAAC,CAAC8R,IAAF,GAASxS,GAAT;AACA,aAAKiF,IAAL,CAAUwN,WAAV,CAAsB/R,CAAtB;AACA;AAzlDuD;AAAA;AAAA,WA2lDxD,eAAe;AACd,YAAMA,CAAC,GAAG;AAAEgS,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,MAAM,EAAE,IAAInU,EAAE,CAACmB,IAAP,CAAY,CAAZ,EAAe,CAAf,CAAhB;AAAmC6S,UAAAA,IAAI,EAAE;AAAzC,SAAV;AACA,aAAKvN,IAAL,CAAU2N,WAAV,CAAsBlS,CAAtB;AACAA,QAAAA,CAAC,CAACiS,MAAF,GAAW9S,SAAS,CAACa,CAAC,CAACiS,MAAH,EAAW,KAAKnT,QAAhB,CAApB;AACA,eAAOkB,CAAP;AACA,OAhmDuD,CAimDxD;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACF;AACA;AACA;AACA;AACA;;AA/mD0D;AAAA;AAAA,WAgnDxD,eAAuB;AACtB,eAAO,KAAKuG,OAAZ;AACA,OAlnDuD;AAAA,WAmnDxD,aAAqBjH,GAArB,EAA0B;AACzB,aAAKiH,OAAL,GAAejH,GAAf;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AA7nD0D;AAAA;AAAA,WA8nDxD,eAAe;AACd,YAAI,CAAC,KAAKiF,IAAV,EAAgB,OAAO,KAAK4N,MAAL,IAAe,CAAtB;;AAChB,YAAI,KAAK/Q,CAAL,CAAOgR,UAAP,KAAsBhV,EAAE,CAACC,SAAH,CAAauB,OAAvC,EAAgD;AAC/C,iBAAOxB,EAAE,CAACC,SAAH,CAAagV,OAAb,CAAqB,KAAK9N,IAAL,CAAU+N,QAAV,EAArB,CAAP;AACA;;AACD,eAAO,KAAK/N,IAAL,CAAU+N,QAAV,EAAP;AACA,OApoDuD;AAAA,WAqoDxD,aAAahT,GAAb,EAAkB;AACjB,YAAI,KAAKiF,IAAT,EAAe;AACd,cAAI,KAAKnD,CAAL,CAAOgR,UAAP,KAAsBhV,EAAE,CAACC,SAAH,CAAauB,OAAvC,EAAgD;AAC/C,iBAAK2F,IAAL,CAAUgO,QAAV,CAAmBnV,EAAE,CAACC,SAAH,CAAamV,OAAb,CAAqBlT,GAArB,CAAnB;AACA,WAFD,MAEO;AACN,iBAAKiF,IAAL,CAAUgO,QAAV,CAAmBjT,GAAnB;AACA;AACD,SAND,MAMO;AACN,eAAK6S,MAAL,GAAc7S,GAAd;AACA;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;AAtpD0D;AAAA;AAAA,WAupDxD,eAAmB;AAClB,YAAI,CAAC,KAAKiF,IAAV,EAAgB,OAAO3C,SAAP;AAChB,eAAO,KAAK2C,IAAL,CAAUkO,iBAAV,EAAP;AACA,OA1pDuD;AAAA,WA2pDxD,aAAiBnT,GAAjB,EAAsB;AACrB,YAAI,KAAKiF,IAAT,EAAe,KAAKA,IAAL,CAAUmO,iBAAV,CAA4BpT,GAA5B;AACf;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;AApqD0D;AAAA;AAAA,WAqqDxD,eAAoB;AACnB,YAAI,KAAKiF,IAAT,EAAe,OAAO,KAAKA,IAAL,CAAUoO,kBAAV,EAAP;AACf,eAAO,KAAKC,cAAL,IAAuB,CAA9B;AACA,OAxqDuD;AAAA,WAyqDxD,aAAkBtT,GAAlB,EAAuB;AACtB,YAAI,KAAKiF,IAAT,EAAe,KAAKA,IAAL,CAAUsO,kBAAV,CAA6BvT,GAA7B,EAAf,KACK,KAAKsT,cAAL,GAAsBtT,GAAtB;AACL;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA3rD0D;AAAA;AAAA,WA4rDxD,eAAY;AACX,eAAO,KAAKqG,MAAZ;AACA,OA9rDuD;AAAA,WA+rDxD,aAAUrG,GAAV,EAAe;AACd,YAAIA,GAAG,IAAI,CAAX,EAAcA,GAAG,GAAG,IAAN;;AACd,YAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC5BA,UAAAA,GAAG,GAAG;AAAEP,YAAAA,CAAC,EAAEO,GAAL;AAAUN,YAAAA,CAAC,EAAEM;AAAb,WAAN;AACA;;AACD,YAAIA,GAAG,CAACP,CAAJ,IAAS,KAAK4G,MAAL,CAAYE,EAArB,IAA2BvG,GAAG,CAACN,CAAJ,IAAS,KAAK2G,MAAL,CAAYQ,EAApD,EAAwD;AAExD,YAAI2M,OAAO,GAAG;AACb/T,UAAAA,CAAC,EAAEO,GAAG,CAACP,CAAJ,GAAQ,KAAK4G,MAAL,CAAYE,EADV;AAEb7G,UAAAA,CAAC,EAAEM,GAAG,CAACN,CAAJ,GAAQ,KAAK2G,MAAL,CAAYQ;AAFV,SAAd;AAKA,aAAKJ,EAAL,IAAW+M,OAAO,CAAC/T,CAAnB;AACA,aAAKiH,GAAL,IAAY8M,OAAO,CAAC/T,CAApB;;AACA,YAAI,KAAKsH,EAAT,EAAa;AACZ,eAAKA,EAAL,IAAWyM,OAAO,CAAC9T,CAAnB;AACA,eAAKsH,GAAL,IAAYwM,OAAO,CAAC9T,CAApB;AACA;;AACD,aAAKiH,eAAL,CAAqB6M,OAArB;;AAEA,aAAKnN,MAAL,CAAYE,EAAZ,GAAiBvG,GAAG,CAACP,CAArB;AACA,aAAK4G,MAAL,CAAYQ,EAAZ,GAAiB7G,GAAG,CAACN,CAArB;AACA,aAAK2G,MAAL,CAAYO,IAAZ,GAAmB5G,GAAG,CAACP,CAAvB;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAluD0D;AAAA;AAAA,WAmuDxD,eAAe;AACd,YAAI,KAAKwF,IAAT,EAAe,OAAO,CAAC,KAAKA,IAAL,CAAUwO,OAAV,EAAR;AACf,eAAOnR,SAAP;AACA,OAtuDuD;AAAA,WAwuDxD,aAAatC,GAAb,EAAkB;AACjB,YAAI,KAAKiF,IAAT,EAAe,KAAKA,IAAL,CAAUyO,QAAV,CAAmB,CAAC1T,GAApB;AACf;AAED;AACF;AACA;;AA9uD0D;AAAA;AAAA,aA+uDxD,oBAAW;AACVzB,QAAAA,OAAO,CAACsR,IAAR,CAAa,oDAAb;AACA,eAAO,KAAKsB,KAAZ;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AA1vD0D;AAAA;AAAA,WA2vDxD,eAAY;AACX,eAAO,KAAKrP,CAAL,CAAO8C,YAAP,CAAoB,KAAK4C,GAAL,CAAS/H,CAA7B,EAAgC,KAAK+H,GAAL,CAAS9H,CAAzC,EAA4CiU,GAA5C,EAAP;AACA,OA7vDuD;AAAA,WA8vDxD,aAAU3T,GAAV,EAAe;AACd,YAAI4T,KAAK,GAAG,KAAK7B,SAAjB;AACA,aAAKvK,GAAL,CAAS/H,CAAT,GAAa,KAAKqC,CAAL,CAAOmI,GAAP,CAAW2J,KAAX,IAAoB5T,GAAjC;AACA,aAAKwH,GAAL,CAAS9H,CAAT,GAAa,KAAKoC,CAAL,CAAOoI,GAAP,CAAW0J,KAAX,IAAoB5T,GAAjC;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AA1wD0D;AAAA;AAAA,WA2wDxD,eAAa;AACZ,YAAI,CAAC,KAAKiF,IAAV,EAAgB,OAAO3C,SAAP;AAChB,eAAO,KAAK2C,IAAL,CAAU+M,QAAV,EAAP;AACA,OA9wDuD;AAAA,WA+wDxD,aAAWhS,GAAX,EAAgB;AACf,YAAIA,GAAJ,EAAS,KAAK6B,QAAL,GAAgB,QAAhB;AACT;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAzxD0D;AAAA;AAAA,WA0xDxD,eAAe;AACd,eAAO,KAAKqN,YAAL,EAAP;AACA;AA5xDuD;AAAA;AAAA,aA8xDxD,sBAAa2E,cAAb,EAA6B;AAC5B,YAAIC,CAAC,GAAG,KAAKtF,OAAb;;AACA,eAAOsF,CAAC,CAAChG,MAAT;AAAiBgG,UAAAA,CAAC,GAAGA,CAAC,CAAChG,MAAN;AAAjB;;AACA,YAAI9E,CAAC,GAAG8K,CAAC,CAACC,QAAF,EAAR;;AACA,YAAIxS,CAAC,sBAAOyH,CAAC,CAACgL,UAAT,CAAL;;AACA,YAAIhL,CAAC,CAACiL,MAAF,IAAY,SAAhB,EAA2B1S,CAAC,CAAC2S,OAAF,CAAU3S,CAAC,CAAC4S,EAAF,CAAK,CAAC,CAAN,CAAV;AAC3B,YAAI1U,CAAC,GAAG,KAAKA,CAAb;AACA,YAAIC,CAAC,GAAG,KAAKA,CAAb;;AACA,aAAK,IAAIiK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpI,CAAC,CAACiB,MAAtB,EAA8BmH,CAAC,EAA/B,EAAmC;AAClC,cAAIyK,GAAG,GAAG,CAACrU,QAAQ,CAAEwB,CAAC,CAACoI,CAAD,CAAD,CAAKlK,CAAL,GAAS,KAAKD,QAAf,GAA2Bb,OAA3B,GAAqCc,CAAtC,CAAT,EAAmDM,QAAQ,CAAEwB,CAAC,CAACoI,CAAD,CAAD,CAAKjK,CAAL,GAAS,KAAKF,QAAf,GAA2Bb,OAA3B,GAAqCe,CAAtC,CAA3D,CAAV;AACApB,UAAAA,GAAG,CAAC8V,GAAD,CAAH;AACA,cAAIP,cAAJ,EAAoBtS,CAAC,CAACoI,CAAD,CAAD,GAAOyK,GAAP,CAApB,KACK7S,CAAC,CAACoI,CAAD,CAAD,GAAOtL,KAAK,CAACuG,YAAN,CAAmBwP,GAAG,CAAC,CAAD,CAAtB,EAA2BA,GAAG,CAAC,CAAD,CAA9B,CAAP;AACL;;AACD,eAAO7S,CAAP;AACA,OA7yDuD,CA+yDxD;;AAEA;AACF;AACA;AACA;AACA;;AArzD0D;AAAA;AAAA,WAszDxD,eAAQ;AACP,YAAI,CAAC,KAAK0D,IAAV,EAAgB,OAAO,KAAKT,IAAL,CAAU/E,CAAjB;AAChB,YAAIA,CAAC,GAAI,KAAKwF,IAAL,CAAUoP,WAAV,GAAwB5U,CAAxB,GAA4B,KAAKD,QAAlC,GAA8Cb,OAAtD;AACA,eAAOoB,QAAQ,CAACN,CAAD,CAAf;AACA,OA1zDuD;AAAA,WA2zDxD,aAAMO,GAAN,EAAW;AACV,YAAI,KAAKiF,IAAT,EAAe;AACd,cAAIqP,GAAG,GAAG,IAAI9V,EAAE,CAACmB,IAAP,CAAaK,GAAG,GAAG,KAAKR,QAAZ,GAAwBb,OAApC,EAA6C,KAAKsG,IAAL,CAAUoP,WAAV,GAAwB3U,CAArE,CAAV;AACA,eAAKuF,IAAL,CAAUsP,WAAV,CAAsBD,GAAtB;AACA;;AACD,aAAK9P,IAAL,CAAU/E,CAAV,GAAcO,GAAd;AACA;AACD;AACF;AACA;AACA;AACA;;AAt0D0D;AAAA;AAAA,WAu0DxD,eAAQ;AACP,YAAI,CAAC,KAAKiF,IAAV,EAAgB,OAAO,KAAKT,IAAL,CAAU9E,CAAjB;AAChB,YAAIA,CAAC,GAAI,KAAKuF,IAAL,CAAUoP,WAAV,GAAwB3U,CAAxB,GAA4B,KAAKF,QAAlC,GAA8Cb,OAAtD;AACA,eAAOoB,QAAQ,CAACL,CAAD,CAAf;AACA,OA30DuD;AAAA,WA40DxD,aAAMM,GAAN,EAAW;AACV,YAAI,KAAKiF,IAAT,EAAe;AACd,cAAIqP,GAAG,GAAG,IAAI9V,EAAE,CAACmB,IAAP,CAAY,KAAKsF,IAAL,CAAUoP,WAAV,GAAwB5U,CAApC,EAAwCO,GAAG,GAAG,KAAKR,QAAZ,GAAwBb,OAA/D,CAAV;AACA,eAAKsG,IAAL,CAAUsP,WAAV,CAAsBD,GAAtB;AACA;;AACD,aAAK9P,IAAL,CAAU9E,CAAV,GAAcM,GAAd;AACA;AACD;AACF;AACA;AACA;AACA;AACA;;AAx1D0D;AAAA;AAAA,WAgoExD,eAAU;AACT,eAAO,KAAKyE,SAAZ;AACA,OAloEuD;AAAA,WAooExD,aAAQzE,GAAR,EAAa;AACZ,aAAKP,CAAL,GAASO,GAAG,CAACP,CAAb;AACA,aAAKC,CAAL,GAASM,GAAG,CAACN,CAAb;AACA;AAvoEuD;AAAA;AAAA;AA61DxD;AACF;AACA;AACA;AACA;AACE,qBAAQ;AACP,eAAO,KAAK+G,EAAZ;AACA,OAp2DuD;AAAA,WAq2DxD,aAAMzG,GAAN,EAAW;AACV,YAAIA,GAAG,GAAG,CAAV,EAAaA,GAAG,GAAG,IAAN;AACb,YAAIA,GAAG,IAAI,KAAKyG,EAAhB,EAAoB;AACpB,aAAKkC,oBAAL,GAA4B,KAA5B;AACA,YAAInC,OAAO,GAAGxG,GAAG,GAAG,KAAKyG,EAAzB;AACA,aAAKA,EAAL,GAAUzG,GAAV;AACA,aAAK0G,GAAL,GAAW1G,GAAG,GAAG,GAAjB;;AACA,aAAK2G,eAAL,CAAqB;AAAElH,UAAAA,CAAC,EAAE+G,OAAL;AAAc9G,UAAAA,CAAC,EAAE;AAAjB,SAArB;AACA;AACD;AACF;AACA;AACA;AACA;;AAl3D0D;AAAA;AAAA,WAm3DxD,eAAS;AACR,eAAO,KAAKgH,GAAZ;AACA,OAr3DuD;AAAA,WAs3DxD,aAAO1G,GAAP,EAAY;AACX,cAAM,IAAI4C,aAAJ,CAAkB,WAAlB,CAAN;AACA;AACD;AACF;AACA;AACA;AACA;;AA73D0D;AAAA;AAAA,WA83DxD,eAAY;AACX,eAAO,KAAKjB,CAAZ;AACA,OAh4DuD;AAAA,WAi4DxD,aAAU3B,GAAV,EAAe;AACd,aAAK2B,CAAL,GAAS3B,GAAT;AACA;AACD;AACF;AACA;AACA;AACA;;AAx4D0D;AAAA;AAAA,WAy4DxD,eAAgB;AACf,eAAO,KAAKwU,EAAZ;AACA,OA34DuD;AAAA,WA44DxD,aAAcxU,GAAd,EAAmB;AAClB,cAAM,IAAI4C,aAAJ,CAAkB,WAAlB,CAAN;AACA;AACD;AACF;AACA;AACA;AACA;;AAn5D0D;AAAA;AAAA,WAo5DxD,eAAQ;AACP,YAAI,KAAKgB,KAAL,IAAc,QAAlB,EAA4B,OAAO,KAAK6C,EAAZ;AAC5B,eAAO,KAAKM,EAAZ;AACA,OAv5DuD;AAAA,WAw5DxD,aAAM/G,GAAN,EAAW;AACV,YAAIA,GAAG,GAAG,CAAV,EAAaA,GAAG,GAAG,IAAN;;AACb,YAAI,KAAK4D,KAAL,IAAc,QAAlB,EAA4B;AAC3B,eAAKjC,CAAL,GAAS3B,GAAT;AACA;AACA;;AACD,YAAIA,GAAG,IAAI,KAAK+G,EAAhB,EAAoB;AACpB,aAAK4B,oBAAL,GAA4B,KAA5B;AACA,YAAI7B,OAAO,GAAG9G,GAAG,GAAG,KAAK+G,EAAzB;AACA,aAAKA,EAAL,GAAU/G,GAAV;AACA,aAAKgH,GAAL,GAAWhH,GAAG,GAAG,GAAjB;;AACA,aAAK2G,eAAL,CAAqB;AAAElH,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,CAAC,EAAEoH;AAAX,SAArB;AACA;AACD;AACF;AACA;AACA;AACA;;AAz6D0D;AAAA;AAAA,WA06DxD,eAAS;AACR,eAAO,KAAKE,GAAL,IAAY,KAAKN,GAAxB;AACA,OA56DuD;AAAA,WA66DxD,aAAO1G,GAAP,EAAY;AACX,cAAM,IAAI4C,aAAJ,CAAkB,WAAlB,CAAN;AACA;AACD;AACF;AACA;AACA;AACA;;AAp7D0D;AAAA;AAAA,WAq7DxD,eAAa;AACZ,eAAO,KAAKhB,CAAZ;AACA,OAv7DuD;AAAA,WAw7DxD,aAAW5B,GAAX,EAAgB;AACf,aAAK4B,CAAL,GAAS5B,GAAT;AACA;AACD;AACF;AACA;AACA;AACA;;AA/7D0D;AAAA;AAAA,WAg8DxD,eAAiB;AAChB,eAAO,KAAKyU,EAAZ;AACA,OAl8DuD;AAAA,WAm8DxD,aAAezU,GAAf,EAAoB;AACnB,cAAM,IAAI4C,aAAJ,CAAkB,WAAlB,CAAN;AACA;AACD;AACF;AACA;AACA;AACA;;AA18D0D;AAAA;AAAA,WA28DxD,eAAQ;AAAA;;AACP,gCAAK2I,SAAL,kEAAKA,SAAL,GAAmB,KAAK5J,CAAxB;AACA,eAAO,KAAK4J,SAAZ;AACA,OA98DuD;AAAA,WA+8DxD,aAAMvL,GAAN,EAAW;AACV,YAAIA,GAAG,GAAG,CAAV,EAAa;AACZ,eAAK0U,MAAL;AACA;AACA;;AACD,YAAIC,WAAW,GAAG,KAAK/Q,KAAL,IAAc,QAAhC;;AACA,YAAI,CAAC+Q,WAAL,EAAkB;AACjB,cAAI,KAAKpJ,SAAL,IAAkBvL,GAAtB,EAA2B;AAC3B,eAAKuL,SAAL,GAAiBvL,GAAjB;AACA,SAHD,MAGO;AACN,cAAIgP,SAAJ;;AACA,cAAI,KAAKL,SAAL,IAAkB,MAAtB,EAA8B;AAC7BK,YAAAA,SAAS,GAAG,KAAKC,eAAL,EAAZ;AACA;;AACD,eAAK2F,cAAL;;AACA,eAAKC,gBAAL;;AACA,eAAK9N,EAAL,GAAUzE,SAAV;AACA,eAAKqB,MAAL,GAAcrB,SAAd;;AACA,cAAI,KAAKqM,SAAL,IAAkB,MAAtB,EAA8B;AAC7B,iBAAKvI,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuBpG,GAAvB;;AACA,iBAAK,IAAI0H,IAAT,IAAiBsH,SAAjB,EAA4B;AAC3B,kBAAIA,SAAS,CAACtH,IAAD,CAAT,KAAoBpF,SAAxB,EAAmC;AAClC,qBAAKoF,IAAL,IAAasH,SAAS,CAACtH,IAAD,CAAtB;AACA;AACD;AACD;;AACD,eAAK/D,MAAL,GAAc,QAAd;AACA;;AACD,YAAImR,MAAM,GAAG9U,GAAG,GAAG,KAAKyG,EAAxB;AACA,aAAKA,EAAL,GAAUzG,GAAV;AACA,aAAK0G,GAAL,GAAW1G,GAAG,GAAG,GAAjB;AACA,aAAK+G,EAAL,GAAU/G,GAAV;AACA,aAAKgH,GAAL,GAAW,KAAKN,GAAhB;AACA,YAAIiO,WAAJ,EAAiB;;AACjB,aAAKhO,eAAL,CAAqB;AAAElH,UAAAA,CAAC,EAAEqV,MAAL;AAAapV,UAAAA,CAAC,EAAEoV;AAAhB,SAArB;AACA;AACD;AACF;AACA;AACA;AACA;;AAv/D0D;AAAA;AAAA,WAw/DxD,eAAe;AACd,eAAO,KAAK7M,CAAZ;AACA,OA1/DuD;AAAA,WA2/DxD,aAAajI,GAAb,EAAkB;AACjB,aAAKiI,CAAL,GAASjI,GAAT;AACA;AAED;AACF;AACA;AACA;AACA;;AAngE0D;AAAA;AAAA,WAogExD,eAAQ;AACP,eAAO,KAAK0G,GAAZ;AACA,OAtgEuD;AAAA,WAugExD,aAAM1G,GAAN,EAAW;AACV,aAAKiI,CAAL,GAASjI,GAAG,GAAG,CAAf;AACA;AAED;AACF;AACA;AACA;AACA;;AA/gE0D;AAAA;AAAA,WAghExD,eAAa;AACZ,eAAO,KAAK0G,GAAZ;AACA,OAlhEuD;AAAA,WAmhExD,aAAW1G,GAAX,EAAgB;AACf,aAAKiI,CAAL,GAASjI,GAAG,GAAG,CAAf;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AA5hE0D;AAAA;AAAA,aA6hExD,yBAAgBwT,OAAhB,EAAyB;AACxB,YAAI,CAAC,KAAKvO,IAAV,EAAgB;;AAEhB,YAAI,KAAKrB,KAAL,IAAc,QAAlB,EAA4B;AAC3B,cAAI6J,GAAG,GAAG,KAAKe,OAAf;AACA,cAAIuG,EAAE,GAAGtH,GAAG,CAACuH,OAAb;AACAD,UAAAA,EAAE,CAACE,QAAH,IAAezB,OAAO,CAAC/T,CAAvB;AACA,SAJD,MAIO;AACN,eAAK,IAAIgO,KAAG,GAAG,KAAKC,WAApB,EAAiCD,KAAjC,EAAsCA,KAAG,GAAGA,KAAG,CAACE,OAAJ,EAA5C,EAA2D;AAC1D,gBAAIF,KAAG,CAACG,UAAR,EAAoB;AACpB,gBAAImH,GAAE,GAAGtH,KAAG,CAACuH,OAAb;;AAF0D,wDAGzCD,GAAE,CAACf,UAHsC;AAAA;;AAAA;AAG1D,qEAAgC;AAAA,oBAAvB5K,IAAuB;AAC/BA,gBAAAA,IAAI,CAAC3J,CAAL,IAAU+T,OAAO,CAAC/T,CAAlB;AACA2J,gBAAAA,IAAI,CAAC1J,CAAL,IAAU8T,OAAO,CAAC9T,CAAlB;AACA;AANyD;AAAA;AAAA;AAAA;AAAA;AAO1D;AACD;;AACD,YAAI,KAAKmC,QAAL,IAAiB,QAArB,EAA+B,KAAKoD,IAAL,CAAUiQ,mBAAV;AAC/B;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAvjE0D;AAAA;AAAA,aAwjExD,uBAAc3L,IAAd,EAAoB;AACnB4L,QAAAA,KAAK,EAAE,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAClC,cAAIA,CAAC,IAAI,CAAT,EAAY7L,IAAI,GAAGA,IAAI,CAAC8L,OAAL,EAAP;;AACZ,eAAK,IAAI1L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAAC/G,MAAzB,EAAiC,EAAEmH,CAAnC,EAAsC;AACrC,gBAAM2L,EAAE,GAAG3L,CAAX;AACA,gBAAM4L,EAAE,GAAG5L,CAAC,GAAGJ,IAAI,CAAC/G,MAAL,GAAc,CAAlB,GAAsB8S,EAAE,GAAG,CAA3B,GAA+B,CAA1C;AACA,gBAAMxT,CAAC,GAAGyH,IAAI,CAAC+L,EAAD,CAAd;AACA,gBAAME,CAAC,GAAGhX,EAAE,CAACmB,IAAH,CAAQ8V,GAAR,CAAYlM,IAAI,CAACgM,EAAD,CAAhB,EAAsBzT,CAAtB,CAAV;;AAEA,iBAAK,IAAIiI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAAC/G,MAAzB,EAAiC,EAAEuH,CAAnC,EAAsC;AACrC,kBAAIA,CAAC,IAAIuL,EAAL,IAAWvL,CAAC,IAAIwL,EAApB,EAAwB;AACvB;AACA;;AAED,kBAAMhU,CAAC,GAAG/C,EAAE,CAACmB,IAAH,CAAQ8V,GAAR,CAAYlM,IAAI,CAACQ,CAAD,CAAhB,EAAqBjI,CAArB,CAAV;AACA,kBAAM+M,CAAC,GAAGrQ,EAAE,CAACmB,IAAH,CAAQ+V,KAAR,CAAcF,CAAd,EAAiBjU,CAAjB,CAAV;;AACA,kBAAIsN,CAAC,GAAG,GAAR,EAAa;AACZ,oBAAIuG,CAAC,IAAI,CAAT,EAAY,SAASD,KAAT,CAAZ,KACK,OAAO,KAAP;AACL;AACD;AACD;;AACD;AACA;;AAED,eAAO,IAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AA1lE0D;AAAA;AAAA,WA2lExD,eAAY;AACX,eAAO,KAAKxR,MAAZ;AACA,OA7lEuD;AAAA,WA+lExD,aAAU3D,GAAV,EAAe;AACd,YAAIA,GAAG,IAAI,KAAK2D,MAAhB,EAAwB;AAExB,YAAIgS,WAAW,GAAG,CAAC,KAAD,EAAQ,QAAR,EAAkB,OAAlB,EAA2B,SAA3B,CAAlB;;AACA,YAAIA,WAAW,CAACxH,OAAZ,CAAoBnO,GAApB,KAA4B,CAAC,CAAjC,EAAoC;AACnC,gBAAM,IAAI5B,KAAJ,CACL,0BAA0B4B,GAA1B,GAAgC,iCAAhC,GAAoE2V,WAAW,CAACC,IAAZ,CAAiB,MAAjB,CAApE,GAA+F,GAD1F,CAAN;AAGA;;AAED,YAAI5V,GAAG,IAAI,QAAX,EAAqB;AACpB,eAAKiI,CAAL,GAAS,KAAKtG,CAAd;AACA,SAFD,MAEO;AACN,eAAKgC,MAAL,GAAc3D,GAAd;;AACA,eAAK+O,MAAL;AACA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAvnE0D;AAAA;AAAA,WAwnExD,eAAa;AACZ,eAAO,KAAK8G,OAAZ;AACA,OA1nEuD;AAAA,WA4nExD,aAAW7V,GAAX,EAAgB;AACf,aAAK8V,aAAL,GAAqB9V,GAArB;AACA;AA9nEuD;AAAA;AAAA,WAyoExD,eAAe;AACd,eAAO,KAAKyE,SAAZ;AACA,OA3oEuD;AAAA,WA6oExD,aAAazE,GAAb,EAAkB;AACjB,aAAKsU,GAAL,GAAWtU,GAAX;AACA;AA/oEuD;AAAA;AAAA,WAipExD,eAAU;AACT,eAAO,KAAK2E,SAAZ;AACA,OAnpEuD;AAAA,WAqpExD,aAAQ3E,GAAR,EAAa;AACZ,aAAKwH,GAAL,CAAS/H,CAAT,GAAaO,GAAG,CAACP,CAAjB;AACA,aAAK+H,GAAL,CAAS9H,CAAT,GAAaM,GAAG,CAACN,CAAjB;AACA;AAxpEuD;AAAA;AAAA,WA8pExD,eAAe;AACd,eAAO,KAAKiF,SAAZ;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AAvqE0D;AAAA,WA0pExD,aAAa3E,GAAb,EAAkB;AACjB,aAAKwH,GAAL,GAAWxH,GAAX;AACA;AA5pEuD;AAAA;AAAA,aAwqExD,mBAAU;AACT,YAAI,KAAK+V,SAAT,EAAoB,KAAKA,SAAL,CAAeC,MAAf;;AAEpB,YAAI,CAAC,KAAK/Q,IAAV,EAAgB;AACf,eAAK+K,QAAL,IAAiB,KAAKsD,cAAtB;AACA,eAAK7T,CAAL,IAAU,KAAK+H,GAAL,CAAS/H,CAAnB;AACA,eAAKC,CAAL,IAAU,KAAK8H,GAAL,CAAS9H,CAAnB;AACA;;AAED,aAAK,IAAIgI,IAAT,IAAiB,KAAKxB,KAAtB,EAA6B;AAC5B,cAAI,KAAKA,KAAL,CAAWwB,IAAX,KAAoB,CAAC,CAAzB,EAA4B,KAAKxB,KAAL,CAAWwB,IAAX,IAAmB,CAAnB;AAC5B;;AAED,YAAIlG,CAAC,GAAG,IAAR;;AACA,aAAK,IAAIyU,KAAT,IAAkBhV,UAAlB,EAA8B;AAAA,sDACX,KAAKgV,KAAL,CADW;AAAA;;AAAA;AAC7B,mEAA+B;AAAA,kBAAtBC,KAAsB;AAC9B,kBAAIC,WAAW,SAAf;AACA,kBAAIC,CAAC,GAAGF,KAAK,CAAC,CAAD,CAAb;AACA,kBAAIpC,CAAC,GAAGoC,KAAK,CAAC,CAAD,CAAL,GAAW,CAAnB;AACA,mBAAKD,KAAL,EAAY9Q,GAAZ,CAAgBiR,CAAhB,EAAmBtC,CAAnB;;AACA,kBAAIA,CAAC,IAAI,CAAT,EAAY;AACX,qBAAKmC,KAAL,EAAYI,MAAZ,CAAmBD,CAAnB;AACA;AACA,eAHD,MAGO,IAAItC,CAAC,IAAI,CAAC,CAAV,EAAa;AACnBqC,gBAAAA,WAAW,GAAGlV,UAAU,CAACgV,KAAD,CAAV,CAAkB,CAAlB,CAAd;AACA,eAFM,MAEA,IAAInC,CAAC,IAAI,CAAT,EAAY;AAClBqC,gBAAAA,WAAW,GAAGlV,UAAU,CAACgV,KAAD,CAAV,CAAkB,CAAlB,CAAd;AACA,eAFM,MAEA;AACNE,gBAAAA,WAAW,GAAGlV,UAAU,CAACgV,KAAD,CAAV,CAAkB,CAAlB,CAAd;AACA;;AACD,kBAAIG,CAAC,YAAY7T,KAAjB,EAAwB;;AAExB,kBAAI+T,EAAE,GAAGC,cAAc,CAACJ,WAAD,EAAc3U,CAAd,EAAiB4U,CAAjB,CAAvB;;AACA,kBAAI,OAAOE,EAAP,IAAa,UAAjB,EAA6BA,EAAE,CAAC9U,CAAD,EAAI4U,CAAJ,EAAOtC,CAAP,CAAF;AAC7B;AApB4B;AAAA;AAAA;AAAA;AAAA;AAqB7B;;AAED,YAAI,KAAKgC,aAAT,EAAwB,KAAKA,aAAL;AACxB;AAED;AACF;AACA;AACA;AACA;;AAptE0D;AAAA;AAAA,aAqtExD,iBAAQ;AACP,YAAI,KAAK5N,YAAT,EAAuB,KAAKpG,CAAL,CAAOoG,YAAP,CAAoB,KAAKA,YAAzB;;AACvB,YAAI,KAAK6N,SAAL,IAAkB,CAAC,KAAK1O,KAA5B,EAAmC;AAClC,eAAK0O,SAAL,CAAeS,IAAf,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,KAAKnQ,MAAL,CAAY5G,CAAzC,EAA4C,KAAK4G,MAAL,CAAY3G,CAAxD;AACA,SAFD,MAEO,IAAI,KAAK8O,OAAL,IAAgB,IAApB,EAA0B;AAChC,cAAI,KAAK7K,MAAL,IAAe,OAAnB,EAA4B,KAAK7B,CAAL,CAAO2U,MAAP,CAAc,KAAKA,MAAL,IAAe,KAAKtO,KAAlC,EAA5B,KACK,IAAI,KAAKsH,OAAT,EAAkB,KAAK3N,CAAL,CAAO2U,MAAP,CAAc,KAAKhH,OAAnB;;AACvB,eAAK,IAAIhC,GAAG,GAAG,KAAKC,WAApB,EAAiCD,GAAjC,EAAsCA,GAAG,GAAGA,GAAG,CAACE,OAAJ,EAA5C,EAA2D;AAC1D,iBAAK+I,YAAL,CAAkBjJ,GAAlB;AACA;AACD,SANM,MAMA;AACN,eAAK3L,CAAL,CAAO2U,MAAP,CAAc,KAAKhH,OAAL,IAAgB,GAA9B;;AACA,cAAI,KAAK9L,MAAL,IAAe,KAAnB,EAA0B;AACzB,iBAAK7B,CAAL,CAAO6U,IAAP,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAKhV,CAAL,GAAS,KAAKnC,QAAhC,EAA0C,KAAKoC,CAAL,GAAS,KAAKpC,QAAxD;AACA,WAFD,MAEO,IAAI,KAAKmE,MAAL,IAAe,QAAnB,EAA6B;AACnC,iBAAK7B,CAAL,CAAO8U,MAAP,CAAc,CAAd,EAAiB,CAAjB,EAAoB,KAAK3O,CAAL,GAAS,KAAKzI,QAAlC;AACA;AACD;;AACD,YAAI,KAAKqX,IAAL,KAAcvU,SAAlB,EAA6B;AAC5B,eAAKR,CAAL,CAAOgV,SAAP,CAAiB,KAAKhV,CAAL,CAAOiV,MAAxB,EAAgC,KAAKjV,CAAL,CAAOiV,MAAvC;AACA,eAAKjV,CAAL,CAAOkV,IAAP,CAAY,KAAK3O,SAAjB;AACA,eAAKvG,CAAL,CAAOwG,QAAP,CAAgB,KAAKA,QAAL,GAAgB,KAAK9I,QAArC;AACA,eAAKsC,CAAL,CAAO+U,IAAP,CAAY,KAAKA,IAAjB,EAAuB,CAAvB,EAA0B,CAA1B;AACA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;AApvE0D;AAAA;AAAA,aAqvExD,oBAAW;AACV,YAAIpX,CAAC,GAAG,KAAKqC,CAAL,CAAO2D,KAAP,GAAe,GAAf,GAAqB,KAAK3D,CAAL,CAAOE,KAAP,CAAaiV,MAAb,CAAoBxX,CAAzC,GAA6C,KAAKA,CAAL,GAAS,KAAKD,QAAnE;AACA,YAAIE,CAAC,GAAG,KAAKoC,CAAL,CAAO6D,MAAP,GAAgB,GAAhB,GAAsB,KAAK7D,CAAL,CAAOE,KAAP,CAAaiV,MAAb,CAAoBvX,CAA1C,GAA8C,KAAKA,CAAL,GAAS,KAAKF,QAApE,CAFU,CAIV;AACA;;AACA,YACC,KAAKoE,KAAL,IAAc,OAAd,IACA,KAAK9B,CAAL,CAAOoV,MAAP,CAAcC,MADd,KAEC1X,CAAC,GAAG,KAAKkC,CAAT,GAAa,KAAKG,CAAL,CAAOoV,MAAP,CAAcE,KAAd,CAAoB/N,GAApB,CAAwB5J,CAArC,IACAA,CAAC,GAAG,KAAKkC,CAAT,GAAa,KAAKG,CAAL,CAAOoV,MAAP,CAAcE,KAAd,CAAoB9N,GAApB,CAAwB7J,CADrC,IAEAC,CAAC,GAAG,KAAKkC,CAAT,GAAa,KAAKE,CAAL,CAAOoV,MAAP,CAAcE,KAAd,CAAoB/N,GAApB,CAAwB3J,CAFrC,IAGAA,CAAC,GAAG,KAAKkC,CAAT,GAAa,KAAKE,CAAL,CAAOoV,MAAP,CAAcE,KAAd,CAAoB9N,GAApB,CAAwB5J,CALtC,CADD,EAOE;AACD;AACA;;AACDD,QAAAA,CAAC,GAAGM,QAAQ,CAACN,CAAD,CAAZ;AACAA,QAAAA,CAAC,IAAK,KAAKkC,CAAL,GAAS,KAAKnC,QAAf,GAA2B,CAA3B,GAA+B,GAA/B,GAAqC,CAA1C;AACAE,QAAAA,CAAC,GAAGK,QAAQ,CAACL,CAAD,CAAZ;AACAA,QAAAA,CAAC,IAAK,KAAKkC,CAAL,GAAS,KAAKpC,QAAf,GAA2B,CAA3B,GAA+B,GAA/B,GAAqC,CAA1C,CAnBU,CAqBV;AACA;;AAEA,aAAKsC,CAAL,CAAOqB,IAAP;AACA,aAAKrB,CAAL,CAAOuV,SAAP,CAAiBvZ,EAAE,CAACC,SAAH,CAAagZ,MAA9B;AACA,aAAKjV,CAAL,CAAOwV,QAAP,CAAgBxZ,EAAE,CAACC,SAAH,CAAagZ,MAA7B;AACA,aAAKjV,CAAL,CAAOyV,WAAP,CAAmBzZ,EAAE,CAACC,SAAH,CAAagZ,MAAhC;AAEA,aAAKjV,CAAL,CAAO0V,SAAP,CAAiB/X,CAAjB,EAAoBC,CAApB;AACA,YAAI,KAAKsQ,QAAT,EAAmB,KAAKlO,CAAL,CAAO2V,MAAP,CAAc,KAAKzH,QAAnB;AACnB,aAAKlO,CAAL,CAAO4V,KAAP,CAAa,KAAKrS,OAAL,CAAa5F,CAA1B,EAA6B,KAAK4F,OAAL,CAAa3F,CAA1C;AAEA,aAAKoC,CAAL,CAAOkV,IAAP,CAAY,KAAK7O,KAAjB;;AAEA,aAAKqJ,KAAL;;AAEA,aAAK1P,CAAL,CAAO4H,GAAP;AACA,aAAK5H,CAAL,CAAOlD,MAAP,CAAcG,eAAd,GAAgC,KAAhC;AAEA,aAAK4Y,sBAAL,GAA8B,KAAK7V,CAAL,CAAOoV,MAAP,CAAcC,MAA5C;AACA;AAED;AACF;AACA;AACA;AACA;;AApyE0D;AAAA;AAAA,aAqyExD,sBAAa1J,GAAb,EAAkB;AACjB,YAAMsH,EAAE,GAAGtH,GAAG,CAACuH,OAAf;;AACA,YAAID,EAAE,CAACd,MAAH,IAAa,SAAb,IAA0Bc,EAAE,CAACd,MAAH,IAAa,OAA3C,EAAoD;AACnD,cAAIc,EAAE,CAACd,MAAH,IAAa,OAAjB,EAA0B;AACzB,iBAAKnS,CAAL,CAAOqB,IAAP;AACA,iBAAKrB,CAAL,CAAO8V,MAAP;AACA;;AACD,cAAIrW,CAAC,GAAGwT,EAAE,CAACf,UAAX;AACA,eAAKlS,CAAL,CAAO+V,UAAP;;AACA,eAAK,IAAIlO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpI,CAAC,CAACiB,MAAtB,EAA8BmH,CAAC,EAA/B,EAAmC;AAClC,iBAAK7H,CAAL,CAAOgW,MAAP,CAAcvW,CAAC,CAACoI,CAAD,CAAD,CAAKlK,CAAL,GAASd,OAAvB,EAAgC4C,CAAC,CAACoI,CAAD,CAAD,CAAKjK,CAAL,GAASf,OAAzC;AACA;;AACD,cAAIoW,EAAE,CAACd,MAAH,IAAa,OAAjB,EAA0B,KAAKnS,CAAL,CAAOiW,QAAP,CAAgBja,EAAE,CAACC,SAAH,CAAaia,KAA7B,EAA1B,KACK;AACJ,iBAAKlW,CAAL,CAAOiW,QAAP;AACA,iBAAKjW,CAAL,CAAO4H,GAAP;AACA;AACD,SAfD,MAeO,IAAIqL,EAAE,CAACd,MAAH,IAAa,QAAjB,EAA2B;AACjC,cAAMhM,CAAC,GAAG8M,EAAE,CAACE,QAAH,GAAc,CAAd,GAAkBtW,OAA5B;AACA,eAAKmD,CAAL,CAAOmW,OAAP,CAAelD,EAAE,CAACmD,GAAH,CAAOzY,CAAP,GAAWd,OAA1B,EAAmCoW,EAAE,CAACmD,GAAH,CAAOxY,CAAP,GAAWf,OAA9C,EAAuDsJ,CAAvD,EAA0DA,CAA1D;AACA,SAHM,MAGA,IAAI8M,EAAE,CAACd,MAAH,IAAa,MAAjB,EAAyB;AAC/B,eAAKnS,CAAL,CAAOqW,IAAP,CACCpD,EAAE,CAACqD,SAAH,CAAa3Y,CAAb,GAAiBd,OADlB,EAECoW,EAAE,CAACqD,SAAH,CAAa1Y,CAAb,GAAiBf,OAFlB,EAGCoW,EAAE,CAACsD,SAAH,CAAa5Y,CAAb,GAAiBd,OAHlB,EAICoW,EAAE,CAACsD,SAAH,CAAa3Y,CAAb,GAAiBf,OAJlB;AAMA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAz0E0D;AAAA;AAAA,aA00ExD,oBAAW2Z,WAAX,EAAwBC,WAAxB,EAAqC;AACpC,YAAI,CAAC,KAAKtT,IAAV,EAAgB;;AAChB,YAAInC,KAAK,CAACC,OAAN,CAAcuV,WAAd,CAAJ,EAAgC;AAC/BA,UAAAA,WAAW,GAAG,IAAI9Z,EAAE,CAACmB,IAAP,CAAY2Y,WAAW,CAAC,CAAD,CAAvB,EAA4BA,WAAW,CAAC,CAAD,CAAvC,CAAd;AACA,SAFD,MAEO;AACNA,UAAAA,WAAW,GAAG,IAAI9Z,EAAE,CAACmB,IAAP,CAAY2Y,WAAW,CAAC7Y,CAAZ,IAAiB,CAA7B,EAAgC6Y,WAAW,CAAC5Y,CAAZ,IAAiB,CAAjD,CAAd;AACA;;AACD,YAAI6Y,WAAJ,EAAiB;AAChB,cAAIzV,KAAK,CAACC,OAAN,CAAcwV,WAAd,CAAJ,EAAgC;AAC/BA,YAAAA,WAAW,GAAG,IAAI/Z,EAAE,CAACmB,IAAP,CAAY4Y,WAAW,CAAC,CAAD,CAAvB,EAA4BA,WAAW,CAAC,CAAD,CAAvC,CAAd;AACA,WAFD,MAEO;AACNA,YAAAA,WAAW,GAAG,IAAI/Z,EAAE,CAACmB,IAAP,CAAY4Y,WAAW,CAAC9Y,CAAZ,IAAiB,CAA7B,EAAgC8Y,WAAW,CAAC7Y,CAAZ,IAAiB,CAAjD,CAAd;AACA;;AACD,eAAKuF,IAAL,CAAUuT,UAAV,CAAqBF,WAAW,CAACG,GAAZ,CAAgB,KAAKxT,IAAL,CAAUyT,MAA1B,CAArB,EAAwDH,WAAxD,EAAqE,KAArE;AACA,SAPD,MAOO;AACN,eAAKtT,IAAL,CAAU0T,kBAAV,CAA6BL,WAAW,CAACG,GAAZ,CAAgB,KAAKxT,IAAL,CAAUyT,MAA1B,CAA7B,EAAgE,KAAhE;AACA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAr2E0D;AAAA;AAAA,aAs2ExD,qBAAY1Y,GAAZ,EAAiB;AAChB,aAAKiF,IAAL,CAAU2T,WAAV,CAAsB5Y,GAAtB,EAA2B,IAA3B;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAv3E0D;AAAA;AAAA,aAw3ExD,qBAAYP,CAAZ,EAAeC,CAAf,EAAkB;AACjBnB,QAAAA,OAAO,CAACsR,IAAR,CAAa,sDAAb;;AACA,YAAI,QAAOpQ,CAAP,KAAY,QAAhB,EAA0B;AACzBC,UAAAA,CAAC,GAAGD,CAAC,CAACC,CAAN;AACAD,UAAAA,CAAC,GAAGA,CAAC,CAACA,CAAN;AACA;;AACD,aAAK+H,GAAL,CAAS/H,CAAT,GAAaA,CAAb;AACA,aAAK+H,GAAL,CAAS9H,CAAT,GAAaA,CAAb;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA94E0D;AAAA;AAAA,aA+4ExD,kBAASyR,KAAT,EAAgBY,SAAhB,EAA2B;AAC1BxT,QAAAA,OAAO,CAACsR,IAAR,CAAa,mFAAb;AACA,YAAIkC,SAAJ,EAAe,KAAKA,SAAL,GAAiBA,SAAjB;AACf,aAAKZ,KAAL,GAAaA,KAAb;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA75E0D;AAAA;AAAA,aA85ExD,kBAASA,KAAT,EAAgByC,KAAhB,EAAuB;AAAA;;AACtB,kBAAAA,KAAK,UAAL,iCAAAA,KAAK,GAAK,KAAK7B,SAAf;AAEA,aAAKvK,GAAL,CAAS/H,CAAT,IAAc,KAAKqC,CAAL,CAAOmI,GAAP,CAAW2J,KAAX,IAAoBzC,KAAlC;AACA,aAAK3J,GAAL,CAAS9H,CAAT,IAAc,KAAKoC,CAAL,CAAOoI,GAAP,CAAW0J,KAAX,IAAoBzC,KAAlC;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AA56E0D;AAAA;AAAA,aA66ExD,qBAAY1R,CAAZ,EAAeC,CAAf,EAAkBmZ,QAAlB,EAA4B;AAAA;;AAC3B,YAAI,OAAOpZ,CAAP,IAAY,QAAhB,EAA0B;AACzB,cAAIqZ,GAAG,GAAGrZ,CAAV;AACA,cAAIqZ,GAAG,IAAI,KAAKhX,CAAL,CAAOoE,KAAd,IAAuB,CAAC,KAAKpE,CAAL,CAAOoE,KAAP,CAAaiR,MAAzC,EAAiD;;AACjD,cAAI2B,GAAG,CAACrZ,CAAJ,KAAU6C,SAAV,IAAuBwW,GAAG,CAACpZ,CAAJ,KAAU4C,SAArC,EAAgD;AAC/C/D,YAAAA,OAAO,CAACwa,KAAR,CACC,6GADD;AAGA;AACA;;AACDF,UAAAA,QAAQ,GAAGnZ,CAAX;AACAA,UAAAA,CAAC,GAAGoZ,GAAG,CAACpZ,CAAR;AACAD,UAAAA,CAAC,GAAGqZ,GAAG,CAACrZ,CAAR;AACA;;AACD,YAAIA,CAAC,KAAK6C,SAAN,IAAmB5C,CAAC,KAAK4C,SAA7B,EAAwC;AACxC,qBAAAuW,QAAQ,UAAR,uCAAAA,QAAQ,GAAK,GAAb,CAf2B,CAiB3B;;AACA,YAAIpZ,CAAC,KAAK6C,SAAN,IAAmB7C,CAAC,KAAK,IAA7B,EAAmC;AAClC;AACA,eAAK+H,GAAL,CAAS/H,CAAT,GAAa,CAACA,CAAC,GAAG,KAAKA,CAAV,IAAeoZ,QAAf,GAA0B,KAAKrZ,QAA5C;AACA;;AACD,YAAIE,CAAC,KAAK4C,SAAN,IAAmB5C,CAAC,KAAK,IAA7B,EAAmC;AAClC;AACA,eAAK8H,GAAL,CAAS9H,CAAT,GAAa,CAACA,CAAC,GAAG,KAAKA,CAAV,IAAemZ,QAAf,GAA0B,KAAKrZ,QAA5C;AACA,SAzB0B,CA0B3B;;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAj9E0D;AAAA;AAAA,aAk9ExD,kBAASC,CAAT,EAAYC,CAAZ,EAAesZ,KAAf,EAAsB;AACrB,aAAKC,WAAL,aAAoB9W,SAApB;AACA,aAAKqF,GAAL,CAAS/H,CAAT,IAAc,CAAC,CAAf;AACA,aAAK+H,GAAL,CAAS9H,CAAT,IAAc,CAAC,CAAf;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAz+E0D;AAAA;AAAA,aA0+ExD,cAAKwZ,QAAL,EAAenH,SAAf,EAA0BZ,KAA1B,EAAiC;AAAA;;AAChC,YAAIgI,WAAW,GAAG1X,KAAK,CAACU,SAAS,CAAC,CAAD,CAAV,CAAvB;;AACA,YAAIgX,WAAJ,EAAiB;AAChBpH,UAAAA,SAAS,GAAG5P,SAAS,CAAC,CAAD,CAArB;AACAgP,UAAAA,KAAK,GAAGhP,SAAS,CAAC,CAAD,CAAjB;AACA+W,UAAAA,QAAQ,GAAG/W,SAAS,CAAC,CAAD,CAApB;;AACA,cAAI+W,QAAQ,KAAK5W,SAAjB,EAA4B;AAC3B/D,YAAAA,OAAO,CAACsR,IAAR;AAGA;AACD,SATD,MASO;AACNsJ,UAAAA,WAAW,GAAG1X,KAAK,CAACsQ,SAAD,CAAnB;AACA;;AACD,YAAIA,SAAS,KAAKzP,SAAlB,EAA6B,KAAKyP,SAAL,GAAiBA,SAAjB;AAC7B,qBAAAmH,QAAQ,UAAR,uCAAAA,QAAQ,GAAK,CAAb;AACA,YAAIzZ,CAAC,GAAG,KAAKA,CAAL,GAAS,KAAKqC,CAAL,CAAOmI,GAAP,CAAW,KAAK8H,SAAhB,IAA6BmH,QAA9C;AACA,YAAIxZ,CAAC,GAAG,KAAKA,CAAL,GAAS,KAAKoC,CAAL,CAAOoI,GAAP,CAAW,KAAK6H,SAAhB,IAA6BmH,QAA9C;;AACA,YAAIC,WAAJ,EAAiB;AAChB1Z,UAAAA,CAAC,GAAGQ,IAAI,CAACE,KAAL,CAAWV,CAAX,CAAJ;AACAC,UAAAA,CAAC,GAAGO,IAAI,CAACE,KAAL,CAAWT,CAAX,CAAJ;AACA;;AACD,eAAO,KAAK0Z,MAAL,CAAY3Z,CAAZ,EAAeC,CAAf,EAAkByR,KAAlB,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA3gF0D;AAAA;AAAA,aA4gFxD,gBAAO1R,CAAP,EAAUC,CAAV,EAAayR,KAAb,EAAoB;AAAA;AAAA;AAAA;AAAA;;AACnB,YAAI,OAAO1R,CAAP,IAAY,WAAhB,EAA6B;AAC5BlB,UAAAA,OAAO,CAACwa,KAAR,CAAc,kEAAd;AACA;AACA;;AACD,YAAI,OAAOtZ,CAAP,IAAY,QAAhB,EAA0B;AACzB,cAAIqZ,GAAG,GAAGrZ,CAAV;AACA,cAAIqZ,GAAG,IAAI,KAAKhX,CAAL,CAAOoE,KAAd,IAAuB,CAAC,KAAKpE,CAAL,CAAOoE,KAAP,CAAaiR,MAAzC,EAAiD;;AACjD,cAAI2B,GAAG,CAACrZ,CAAJ,KAAU6C,SAAV,IAAuBwW,GAAG,CAACpZ,CAAJ,KAAU4C,SAArC,EAAgD;AAC/C/D,YAAAA,OAAO,CAACwa,KAAR,CACC,+FADD;AAGA;AACA;;AACD5H,UAAAA,KAAK,GAAGzR,CAAR;AACAA,UAAAA,CAAC,GAAGoZ,GAAG,CAACpZ,CAAR;AACAD,UAAAA,CAAC,GAAGqZ,GAAG,CAACrZ,CAAR;AACA;;AACD,aAAKyH,KAAL,CAAWzH,CAAX,GAAe,KAAKA,CAApB;AACA,aAAKyH,KAAL,CAAWxH,CAAX,GAAe,KAAKA,CAApB;AAEA,YAAIqS,SAAS,GAAG,IAAhB;AAEA,YAAItS,CAAC,IAAI,KAAKA,CAAd,EAAiBA,CAAC,GAAG,KAAJ,CAAjB,KACK;AACJ,eAAKyH,KAAL,CAAWzH,CAAX,GAAeA,CAAf;AACAA,UAAAA,CAAC,GAAG,IAAJ;AACA;AACD,YAAIC,CAAC,IAAI,KAAKA,CAAd,EAAiBA,CAAC,GAAG,KAAJ,CAAjB,KACK;AACJ,eAAKwH,KAAL,CAAWxH,CAAX,GAAeA,CAAf;AACAA,UAAAA,CAAC,GAAG,IAAJ;AACA;AAED,aAAKyH,QAAL;AACA,YAAI,CAAC1H,CAAD,IAAM,CAACC,CAAX,EAAc,OAAO,IAAP;AAEd,YAAI,KAAKyR,KAAT,EAAgB,UAAAA,KAAK,UAAL,iCAAAA,KAAK,GAAK,KAAKA,KAAf;AAChB,YAAI,KAAK3R,QAAL,GAAgB,CAApB,EAAuB,WAAA2R,KAAK,UAAL,mCAAAA,KAAK,GAAK,GAAV;AACvB,mBAAAA,KAAK,UAAL,mCAAAA,KAAK,GAAK,CAAV;;AACA,YAAIA,KAAK,IAAI,CAAb,EAAgB;AACf5S,UAAAA,OAAO,CAACsR,IAAR,CAAa,gDAAb;AACA;AACA;;AAED,YAAIrO,CAAC,GAAG,KAAK0F,KAAL,CAAWxH,CAAX,GAAe,KAAKA,CAA5B;AACA,YAAI0W,CAAC,GAAG,KAAKlP,KAAL,CAAWzH,CAAX,GAAe,KAAKA,CAA5B;AACA,YAAIoP,CAAC,GAAG5O,IAAI,CAACoZ,IAAL,CAAU7X,CAAC,GAAGA,CAAJ,GAAQ4U,CAAC,GAAGA,CAAtB,CAAR;AAEA,YAAIkD,OAAO,GAAGnI,KAAK,GAAGtC,CAAtB;AAEA,aAAKrH,GAAL,CAAS/H,CAAT,GAAa2W,CAAC,GAAGkD,OAAjB;AACA,aAAK9R,GAAL,CAAS9H,CAAT,GAAa8B,CAAC,GAAG8X,OAAjB,CApDmB,CAsDnB;AACA;;AACA,YAAIC,MAAM,GAAGtZ,IAAI,CAACuZ,KAAL,CAAW3K,CAAC,GAAGsC,KAAf,IAAwB,CAArC,CAxDmB,CA0DnB;;AACA,YAAIsI,MAAM,GAAGtI,KAAK,GAAG,IAArB;AAEA,YAAIuI,OAAO,GAAG,KAAKvS,QAAnB;AAEA,eAAO,wDAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACHwS,kBAAAA,KADG,GACKF,MAAM,GAAGA,MADd;AAEHG,kBAAAA,KAFG,GAEKH,MAAM,GAAGA,MAFd;;AAAA;AAAA,wBAIFC,OAAO,IAAI,MAAI,CAACvS,QAJd;AAAA;AAAA;AAAA;;AAAA,mDAI+B,KAJ/B;;AAAA;AAAA;AAAA,yBAMArJ,EAAE,CAACC,SAAH,CAAa8b,KAAb,EANA;;AAAA;AAAA,wBASFN,MAAM,GAAG,CATP;AAAA;AAAA;AAAA;;AAULA,kBAAAA,MAAM;AAVD;;AAAA;AAcN;AACAI,kBAAAA,KAAK,GAAG1Z,IAAI,CAACC,GAAL,CAAS,MAAI,CAACT,CAAL,GAAS,MAAI,CAACyH,KAAL,CAAWzH,CAA7B,CAAR;AACAma,kBAAAA,KAAK,GAAG3Z,IAAI,CAACC,GAAL,CAAS,MAAI,CAACR,CAAL,GAAS,MAAI,CAACwH,KAAL,CAAWxH,CAA7B,CAAR;;AAhBM;AAAA,sBAiBGD,CAAC,IAAIka,KAAK,GAAGF,MAAd,IAA0B/Z,CAAC,IAAIka,KAAK,GAAGH,MAjBzC;AAAA;AAAA;AAAA;;AAAA;AAkBP;AACA,sBAAIE,KAAK,GAAGF,MAAZ,EAAoB,MAAI,CAACha,CAAL,GAAS,MAAI,CAACyH,KAAL,CAAWzH,CAApB;AACpB,sBAAIma,KAAK,GAAGH,MAAZ,EAAoB,MAAI,CAAC/Z,CAAL,GAAS,MAAI,CAACwH,KAAL,CAAWxH,CAApB;AACpB,kBAAA,MAAI,CAAC8H,GAAL,CAAS/H,CAAT,GAAa,CAAb;AACA,kBAAA,MAAI,CAAC+H,GAAL,CAAS9H,CAAT,GAAa,CAAb;AAtBO,mDAuBA,IAvBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD,IAAP;AAyBA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhnF0D;AAAA;AAAA,aAinFxD,yBAAgBoa,SAAhB,EAA2Bra,CAA3B,EAA8BC,CAA9B,EAAiC;AAChCnB,QAAAA,OAAO,CAACsR,IAAR,CAAa,sEAAb;AACA,YAAI+D,KAAK,GAAG,KAAK9R,CAAL,CAAOgO,KAAP,CAAapQ,CAAC,GAAG,KAAKA,CAAtB,EAAyBD,CAAC,GAAG,KAAKA,CAAlC,CAAZ;AACA,aAAK+H,GAAL,CAAS/H,CAAT,IAAc,KAAKqC,CAAL,CAAOmI,GAAP,CAAW2J,KAAX,IAAoBkG,SAAlC;AACA,aAAKtS,GAAL,CAAS9H,CAAT,IAAc,KAAKoC,CAAL,CAAOoI,GAAP,CAAW0J,KAAX,IAAoBkG,SAAlC;AACA;AAtnFuD;AAAA;AAAA,aAwnFxD,cAAKC,CAAL,EAAQC,IAAR,EAAc;AAAA;;AACb,YAAID,CAAC,CAACE,QAAF,IAAcF,CAAC,CAACta,CAAF,IAAOsa,CAAC,CAAC7S,KAAF,CAAQzH,CAA7B,IAAkCsa,CAAC,CAACra,CAAF,IAAOqa,CAAC,CAAC7S,KAAF,CAAQxH,CAAjD,IAAsD,CAAC,KAAKua,QAAhE,EAA0E;AAC1E,iBAAAD,IAAI,UAAJ,+BAAAA,IAAI,GAAK,KAAK,KAAKxa,QAAL,GAAgB,GAA9B;;AACA,YAAIS,IAAI,CAACC,GAAL,CAAS,KAAKT,CAAd,IAAmB,CAAnB,IAAwBua,IAAxB,IAAgC/Z,IAAI,CAACC,GAAL,CAAS,KAAKR,CAAd,IAAmB,CAAnB,IAAwBsa,IAA5D,EAAkE;AACjE;AACA;;AACD,aAAKxS,GAAL,CAAS/H,CAAT,GAAa,CAAb;AACA,aAAK+H,GAAL,CAAS9H,CAAT,GAAa,CAAb;AACA,aAAKD,CAAL,GAASQ,IAAI,CAACE,KAAL,CAAW,KAAKV,CAAhB,CAAT;AACA,aAAKC,CAAL,GAASO,IAAI,CAACE,KAAL,CAAW,KAAKT,CAAhB,CAAT;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AA1oF0D;AAAA;AAAA,aA2oFxD,uBAAcD,CAAd,EAAiBC,CAAjB,EAAoBmZ,QAApB,EAA8BqB,MAA9B,EAAsC;AAAA;;AACrC,YAAI,OAAOza,CAAP,IAAY,QAAhB,EAA0B;AACzBya,UAAAA,MAAM,GAAGrB,QAAT;AACAA,UAAAA,QAAQ,GAAGnZ,CAAX;AACAA,UAAAA,CAAC,GAAGwa,MAAJ;AACA;;AACD,YAAItG,KAAK,GAAG,KAAKuG,OAAL,CAAa1a,CAAb,EAAgBC,CAAhB,EAAmBwa,MAAnB,CAAZ;AACA,sBAAArB,QAAQ,UAAR,yCAAAA,QAAQ,GAAK,GAAb;AACA,aAAKuB,aAAL,GAAqBxG,KAAK,GAAGiF,QAA7B;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA/pF0D;AAAA;AAAA,aAgqFxD,iBAAQpZ,CAAR,EAAWC,CAAX,EAAcwa,MAAd,EAAsB;AAAA;;AACrB,YAAI,OAAOza,CAAP,IAAY,QAAhB,EAA0B;AACzB,cAAIqZ,GAAG,GAAGrZ,CAAV;AACA,cAAIqZ,GAAG,IAAI,KAAKhX,CAAL,CAAOoE,KAAd,IAAuB,CAAC,KAAKpE,CAAL,CAAOoE,KAAP,CAAaiR,MAAzC,EAAiD,OAAO,CAAP;;AACjD,cAAI2B,GAAG,CAACrZ,CAAJ,KAAU6C,SAAV,IAAuBwW,GAAG,CAACpZ,CAAJ,KAAU4C,SAArC,EAAgD;AAC/C/D,YAAAA,OAAO,CAACwa,KAAR,CACC,gGADD;AAGA,mBAAO,CAAP;AACA;;AACDmB,UAAAA,MAAM,GAAGxa,CAAT;AACAA,UAAAA,CAAC,GAAGoZ,GAAG,CAACpZ,CAAR;AACAD,UAAAA,CAAC,GAAGqZ,GAAG,CAACrZ,CAAR;AACA;;AAED,YAAIQ,IAAI,CAACC,GAAL,CAAST,CAAC,GAAG,KAAKA,CAAlB,IAAuB,IAAvB,IAA+BQ,IAAI,CAACC,GAAL,CAASR,CAAC,GAAG,KAAKA,CAAlB,IAAuB,IAA1D,EAAgE;AAC/D,iBAAO,CAAP;AACA;;AAED,mBAAAwa,MAAM,UAAN,mCAAAA,MAAM,GAAK,CAAX;AAEA,YAAIpQ,GAAG,GAAG,KAAKhI,CAAL,CAAOgO,KAAP,CAAapQ,CAAC,GAAG,KAAKA,CAAtB,EAAyBD,CAAC,GAAG,KAAKA,CAAlC,IAAuCya,MAAjD;AACA,YAAIG,KAAK,GAAGvQ,GAAG,GAAI,KAAKkG,QAAL,GAAgB,GAAnC;AACA,YAAIsK,KAAK,GAAG,MAAMra,IAAI,CAACC,GAAL,CAASma,KAAT,CAAlB;AACAC,QAAAA,KAAK,IAAID,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgB,CAAC,CAA1B;AACA,eAAOpa,IAAI,CAACC,GAAL,CAASma,KAAT,IAAkBpa,IAAI,CAACC,GAAL,CAASoa,KAAT,CAAlB,GAAoCD,KAApC,GAA4CC,KAAnD;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArsF0D;AAAA;AAAA,aAssFxD,kBAAS7a,CAAT,EAAYC,CAAZ,EAAeyR,KAAf,EAAsB+I,MAAtB,EAA8B;AAC7B,YAAI,OAAOza,CAAP,IAAY,QAAhB,EAA0B;AACzBya,UAAAA,MAAM,GAAG/I,KAAT;AACAA,UAAAA,KAAK,GAAGzR,CAAR;AACAA,UAAAA,CAAC,GAAGwa,MAAJ;AACA;;AAED,YAAItG,KAAK,GAAG,KAAKuG,OAAL,CAAa1a,CAAb,EAAgBC,CAAhB,EAAmBwa,MAAnB,CAAZ;AAEA,eAAO,KAAKzC,MAAL,CAAY7D,KAAZ,EAAmBzC,KAAnB,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAztF0D;AAAA;AAAA,aA0tFxD,gBAAOyC,KAAP,EAAczC,KAAd,EAAqB;AAAA;AAAA;AAAA;;AACpB,YAAI1P,KAAK,CAACmS,KAAD,CAAT,EAAkB,MAAM,IAAIhR,aAAJ,EAAN;AAClB,YAAIgR,KAAK,IAAI,CAAb,EAAgB;AAChB,YAAI2G,IAAI,GAAGta,IAAI,CAACC,GAAL,CAAS0T,KAAT,CAAX;AACA,mBAAAzC,KAAK,UAAL,mCAAAA,KAAK,GAAK,CAAV;AACA,YAAIA,KAAK,GAAGoJ,IAAZ,EAAkBpJ,KAAK,GAAGoJ,IAAR;AAElB,YAAIzQ,GAAG,GAAG,KAAKkG,QAAL,GAAgB4D,KAA1B;AACA,YAAI4G,EAAE,GAAG5G,KAAK,GAAG,CAAjB;AACA,aAAKwG,aAAL,GAAqBjJ,KAAK,IAAIqJ,EAAE,GAAG,CAAH,GAAO,CAAC,CAAd,CAA1B;AAEA,YAAIjB,MAAM,GAAGtZ,IAAI,CAACwa,IAAL,CAAUF,IAAI,GAAGpJ,KAAjB,CAAb;AACA,iCAAKuJ,UAAL,oEAAKA,UAAL,GAAoB,CAApB;AACA,aAAKA,UAAL;AACA,YAAIA,UAAU,GAAG,KAAKA,UAAtB;AAEA,eAAO,wDAAC;AAAA;AAAA;AAAA;AAAA;AAAA,wBACHnB,MAAM,GAAG,CADN;AAAA;AAAA;AAAA;;AAAA;AAAA,wBAECA,MAAM,GAAG,CAFV;AAAA;AAAA;AAAA;;AAAA,wBAGD,MAAI,CAACmB,UAAL,IAAmBA,UAHlB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,yBAIC5c,EAAE,CAACC,SAAH,CAAa8b,KAAb,EAJD;;AAAA;AAKLN,kBAAAA,MAAM;AALD;AAAA;;AAAA;AAAA,wBAQCtZ,IAAI,CAACC,GAAL,CAAS,MAAI,CAACka,aAAd,IAA+Bna,IAAI,CAACC,GAAL,CAAS4J,GAAG,GAAG,MAAI,CAACkG,QAApB,CARhC;AAAA;AAAA;AAAA;;AAAA;AAAA,yBASClS,EAAE,CAACC,SAAH,CAAa8b,KAAb,EATD;;AAAA;AAAA;AAAA;;AAAA;AAAA,wBAWF5Z,IAAI,CAACC,GAAL,CAAS4J,GAAG,GAAG,MAAI,CAACkG,QAApB,IAAgC,IAX9B;AAAA;AAAA;AAAA;;AAYL,kBAAA,MAAI,CAACoK,aAAL,GAAqBtQ,GAAG,GAAG,MAAI,CAACkG,QAAhC;AAZK;AAAA,yBAaClS,EAAE,CAACC,SAAH,CAAa8b,KAAb,EAbD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,yBAgBA/b,EAAE,CAACC,SAAH,CAAa8b,KAAb,EAhBA;;AAAA;AAkBP,kBAAA,MAAI,CAACO,aAAL,GAAqB,CAArB;AACA,kBAAA,MAAI,CAACpK,QAAL,GAAgBlG,GAAhB;;AAnBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAD,IAAP;AAqBA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1wF0D;AAAA;AAAA;AAAA,kFA2wFxD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAmB6Q,IAAnB;AAAmBA,oBAAAA,IAAnB;AAAA;;AACC,sBAAIA,IAAI,CAACnY,MAAL,IAAe,CAAf,IAAoBM,KAAK,CAACC,OAAN,CAAc4X,IAAI,CAAC,CAAD,CAAlB,CAAxB,EAAgD;AAC/CA,oBAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAX;AACA;;AAEGpX,kBAAAA,IALL,GAKY,SAAPA,IAAO,CAACqX,IAAD,EAAOC,KAAP,EAAcC,GAAd,EAAsB;AAChC,2BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC/B,sBAAA,MAAI,CAAClV,UAAL,CAAgB8U,IAAhB;;AACA,0BAAIC,KAAK,GAAG,CAAZ,EAAeA,KAAK,GAAG,MAAI,CAAC9U,UAAL,CAAgBvD,MAAhB,GAAyBqY,KAAjC;AACf,0BAAIA,KAAJ,EAAW,MAAI,CAAC9U,UAAL,CAAgBkV,KAAhB,GAAwBJ,KAAxB;AAEX,0BAAIC,GAAG,KAAKxY,SAAZ,EAAuB,MAAI,CAACyD,UAAL,CAAgBmV,SAAhB,CAA0BJ,GAA1B,EAAvB,KACK,IAAI,MAAI,CAACG,KAAL,IAAc,MAAI,CAACE,SAAvB,EAAkCH,OAAO;;AAE9C,sBAAA,MAAI,CAACjV,UAAL,CAAgBqV,UAAhB,GAA6B,YAAM;AAClCJ,wBAAAA,OAAO;AACP,uBAFD;AAGA,qBAXM,CAAP;AAYA,mBAlBF;;AAoBC,uBAASrR,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGgR,IAAI,CAACnY,MAAzB,EAAiCmH,CAAC,EAAlC,EAAsC;AACjCtH,oBAAAA,GADiC,GAC3BsY,IAAI,CAAChR,CAAD,CADuB;;AAErC,wBACCtH,GAAG,YAAYK,eAAf,IACAL,GAAG,YAAYvE,EAAE,CAAC6E,KADlB,IAEC,OAAON,GAAP,IAAc,QAAd,IAA0BA,GAAG,CAACG,MAAJ,IAAc,CAAxC,IAA6CH,GAAG,CAACgZ,QAAJ,CAAa,GAAb,CAH/C,EAIE;AACDV,sBAAAA,IAAI,CAAChR,CAAD,CAAJ,GAAU,KAAK9D,MAAL,CAAYxD,GAAZ,CAAV;AACAA,sBAAAA,GAAG,GAAGsY,IAAI,CAAChR,CAAD,CAAV;AACA;;AACD,wBAAI,OAAOtH,GAAP,IAAc,QAAlB,EAA4B;AAC3BsY,sBAAAA,IAAI,CAAChR,CAAD,CAAJ,GAAU;AAAEiR,wBAAAA,IAAI,EAAEvY;AAAR,uBAAV;AACAA,sBAAAA,GAAG,GAAGsY,IAAI,CAAChR,CAAD,CAAV;AACA;;AACD,wBAAItH,GAAG,CAACuY,IAAJ,CAAS,CAAT,KAAe,GAAnB,EAAwB;AACvBvY,sBAAAA,GAAG,CAACuY,IAAJ,GAAWvY,GAAG,CAACuY,IAAJ,CAASha,KAAT,CAAe,CAAf,CAAX;AACAyB,sBAAAA,GAAG,CAACwY,KAAJ,GAAY,CAAC,CAAb;AACAxY,sBAAAA,GAAG,CAACyY,GAAJ,GAAU,CAAV;AACA;AACD,mBAvCF,CAyCC;;;AAESnR,kBAAAA,GA3CV,GA2Cc,CA3Cd;;AAAA;AAAA,wBA2CiBA,GAAC,GAAGgR,IAAI,CAACnY,MA3C1B;AAAA;AAAA;AAAA;;AA4CMH,kBAAAA,KA5CN,GA4CYsY,IAAI,CAAChR,GAAD,CA5ChB,EA6CE;AACA;AACA;AACA;;AACMiR,kBAAAA,IAjDR,GAiD6BvY,KAjD7B,CAiDQuY,IAjDR,EAiDcC,KAjDd,GAiD6BxY,KAjD7B,CAiDcwY,KAjDd,EAiDqBC,GAjDrB,GAiD6BzY,KAjD7B,CAiDqByY,GAjDrB;AAAA;AAAA,yBAkDQvX,IAAI,CAACqX,IAAD,EAAOC,KAAP,EAAcC,GAAd,CAlDZ;;AAAA;AA2CkCnR,kBAAAA,GAAC,EA3CnC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA3wFwD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAi0FxD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA10F0D;AAAA;AAAA,aA20FxD,2BAAkB;AACjB,eAAO,KAAK4E,SAAL,aAAkBpM,SAAlB,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAz1F0D;AAAA;AAAA,aA01FxD,oBAAWmZ,KAAX,EAAkB;AACjB,YAAIjZ,GAAG,GAAG,KAAKe,UAAL,CAAgBkY,KAAhB,CAAV;;AACA,YAAI,CAACjZ,GAAL,EAAU;AACT,eAAK,IAAIsH,CAAC,GAAG,KAAK1G,MAAL,CAAYT,MAAZ,GAAqB,CAAlC,EAAqCmH,CAAC,IAAI,CAA1C,EAA6CA,CAAC,EAA9C,EAAkD;AACjD,gBAAI/B,CAAC,GAAG,KAAK3E,MAAL,CAAY0G,CAAZ,CAAR;AACAtH,YAAAA,GAAG,GAAGuF,CAAC,CAACxE,UAAF,CAAakY,KAAb,CAAN;;AACA,gBAAIjZ,GAAJ,EAAS;AACRA,cAAAA,GAAG,GAAGA,GAAG,CAAC2D,KAAJ,EAAN;AACA;AACA;AACD;AACD;;AACD,YAAI,CAAC3D,GAAL,EAAU;AACT,eAAKP,CAAL,CAAOyZ,MAAP;AACA,gBAAM,IAAI3Y,aAAJ,CAAkB,wBAAlB,EAA4C,CAAC0Y,KAAD,CAA5C,CAAN;AACA;;AACD,aAAKvV,UAAL,GAAkB1D,GAAlB;AACA,aAAK0T,SAAL,CAAe6E,IAAf,GAAsBU,KAAtB,CAjBiB,CAkBjB;;AACA,YAAI,KAAKjY,mBAAL,IAA6B,KAAKA,mBAAL,KAA6B,KAA7B,IAAsC,KAAKvB,CAAL,CAAOE,KAAP,CAAaqB,mBAApF,EAA0G;AACzG,eAAK0S,SAAL,CAAekF,KAAf,GAAuB,CAAvB;AACA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;AAv3F0D;AAAA;AAAA,aAw3FxD,kBAAS;AACR,YAAI,KAAKhW,IAAT,EAAe,KAAKnD,CAAL,CAAOE,KAAP,CAAamN,WAAb,CAAyB,KAAKlK,IAA9B;AACf,aAAKA,IAAL,GAAY,IAAZ;AACA,aAAK3B,OAAL,GAAe,IAAf,CAHQ,CAKR;;AACA,eAAO,KAAKL,MAAL,CAAYT,MAAZ,GAAqB,CAA5B,EAA+B;AAC9B,eAAKS,MAAL,CAAY,CAAZ,EAAeyR,MAAf,CAAsB,IAAtB;AACA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;AAx4F0D;AAAA;AAAA,aAy4FxD,oBAAW;AACV,eAAO,MAAM,KAAK3S,KAAlB;AACA;AA34FuD;AAAA;AAAA,aA64FxD,wBAAeyZ,MAAf,EAAuBC,QAAvB,EAAiC;AAChC,YAAI,CAACD,MAAL,EAAa;AACZ,gBAAM,IAAI5Y,aAAJ,CAAkB,gBAAlB,EAAoC,CAApC,CAAN;AACA;;AACD,YAAI,EAAE4Y,MAAM,YAAY9Z,MAApB,KAA+B,EAAE8Z,MAAM,YAAYjZ,KAApB,CAAnC,EAA+D;AAC9D,gBAAM,IAAIK,aAAJ,CAAkB,gBAAlB,EAAoC,CAApC,EAAuC,CAAC4Y,MAAD,CAAvC,CAAN;AACA;;AACD,YAAIC,QAAQ,IAAI,OAAOA,QAAP,IAAmB,UAAnC,EAA+C;AAC9C,gBAAM,IAAI7Y,aAAJ,CAAkB,gBAAlB,EAAoC,CAApC,EAAuC,CAAC6Y,QAAD,CAAvC,CAAN;AACA;AACD;AAv5FuD;AAAA;AAAA,aAy5FxD,iBAAQD,MAAR,EAAgBC,QAAhB,EAA0B;AACzB,eAAO,KAAKC,QAAL,CAAcF,MAAd,EAAsBC,QAAtB,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAv6F0D;AAAA;AAAA,aAw6FxD,kBAASD,MAAT,EAAiBC,QAAjB,EAA2B;AAC1B,aAAKE,cAAL,CAAoBH,MAApB,EAA4BC,QAA5B;;AACA,aAAK1X,SAAL,CAAeyX,MAAf,IAAyBC,QAAQ,IAAI,IAArC;AACA,eAAO,KAAKva,WAAL,CAAiB8D,GAAjB,CAAqBwW,MAArB,KAAgC,CAAvC;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAv7F0D;AAAA;AAAA,aAw7FxD,mBAAUA,MAAV,EAAkBC,QAAlB,EAA4B;AAC3B,aAAKE,cAAL,CAAoBH,MAApB,EAA4BC,QAA5B;;AACA,aAAKzX,UAAL,CAAgBwX,MAAhB,IAA0BC,QAAQ,IAAI,IAAtC;;AACA,YAAIzb,GAAG,GAAG,KAAKkB,WAAL,CAAiB8D,GAAjB,CAAqBwW,MAArB,CAAV;;AACA,eAAOxb,GAAG,GAAG,CAAN,GAAUA,GAAV,GAAgB,CAAvB;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAv8F0D;AAAA;AAAA,aAw8FxD,kBAASwb,MAAT,EAAiBC,QAAjB,EAA2B;AAC1B,aAAKE,cAAL,CAAoBH,MAApB,EAA4BC,QAA5B;;AACA,aAAKxX,SAAL,CAAeuX,MAAf,IAAyBC,QAAQ,IAAI,IAArC;AACA,eAAO,KAAKva,WAAL,CAAiB8D,GAAjB,CAAqBwW,MAArB,KAAgC,CAAC,CAAxC;AACA;AA58FuD;AAAA;AAAA,aA88FxD,wBAAeA,MAAf,EAAuBC,QAAvB,EAAiC;AAChC,YAAI,CAACD,MAAL,EAAa;AACZ,gBAAM,IAAI5Y,aAAJ,CAAkB,gBAAlB,EAAoC,CAApC,CAAN;AACA;;AACD,YAAI,EAAE4Y,MAAM,YAAY9Z,MAApB,KAA+B,EAAE8Z,MAAM,YAAYjZ,KAApB,CAAnC,EAA+D;AAC9D,gBAAM,IAAIK,aAAJ,CAAkB,gBAAlB,EAAoC,CAApC,EAAuC,CAAC4Y,MAAD,CAAvC,CAAN;AACA;;AACD,YAAIC,QAAQ,IAAI,OAAOA,QAAP,IAAmB,UAAnC,EAA+C;AAC9C,gBAAM,IAAI7Y,aAAJ,CAAkB,gBAAlB,EAAoC,CAApC,EAAuC,CAAC6Y,QAAD,CAAvC,CAAN;AACA;;AACD,YAAI,CAAC,KAAKhT,YAAV,EAAwB,KAAKC,cAAL;;AACxB,YAAI8S,MAAM,YAAY9Z,MAAtB,EAA8B;AAC7B,cAAI,CAAC8Z,MAAM,CAAC/S,YAAZ,EAA0B+S,MAAM,CAAC9S,cAAP;AAC1B,SAFD,MAEO,IAAI8S,MAAM,YAAYjZ,KAAtB,EAA6B;AACnC,cAAI,CAACiZ,MAAM,CAAC/S,YAAZ,EAA0B;AAAA,wDACX+S,MADW;AAAA;;AAAA;AACzB,qEAAsB;AAAA,oBAAbxS,CAAa;AACrB,oBAAI,CAACA,CAAC,CAACP,YAAP,EAAqBO,CAAC,CAACN,cAAF;AACrB;AAHwB;AAAA;AAAA;AAAA;AAAA;;AAIzB8S,YAAAA,MAAM,CAAC/S,YAAP,GAAsB,IAAtB;AACA;AACD;;AACD,aAAKvE,QAAL,CAAcsX,MAAd,IAAwB,IAAxB;AACA;AAp+FuD;AAAA;AAAA,aAs+FxD,iBAAQA,MAAR,EAAgBC,QAAhB,EAA0B;AACzB,eAAO,KAAKG,QAAL,CAAcJ,MAAd,EAAsBC,QAAtB,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAp/F0D;AAAA;AAAA,aAq/FxD,kBAASD,MAAT,EAAiBC,QAAjB,EAA2B;AAC1B,aAAKI,cAAL,CAAoBL,MAApB,EAA4BC,QAA5B;;AACA,aAAKtX,SAAL,CAAeqX,MAAf,IAAyBC,QAAQ,IAAI,IAArC;AACA,eAAO,KAAKta,YAAL,CAAkB6D,GAAlB,CAAsBwW,MAAtB,KAAiC,CAAxC;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApgG0D;AAAA;AAAA,aAqgGxD,qBAAYA,MAAZ,EAAoBC,QAApB,EAA8B;AAC7B,aAAKI,cAAL,CAAoBL,MAApB,EAA4BC,QAA5B;;AACA,aAAKrX,YAAL,CAAkBoX,MAAlB,IAA4BC,QAAQ,IAAI,IAAxC;;AACA,YAAIzb,GAAG,GAAG,KAAKmB,YAAL,CAAkB6D,GAAlB,CAAsBwW,MAAtB,CAAV;;AACA,eAAOxb,GAAG,GAAG,CAAN,GAAUA,GAAV,GAAgB,CAAvB;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAphG0D;AAAA;AAAA,aAqhGxD,oBAAWwb,MAAX,EAAmBC,QAAnB,EAA6B;AAC5B,aAAKI,cAAL,CAAoBL,MAApB,EAA4BC,QAA5B;;AACA,aAAKpX,WAAL,CAAiBmX,MAAjB,IAA2BC,QAAQ,IAAI,IAAvC;AACA,eAAO,KAAKta,YAAL,CAAkB6D,GAAlB,CAAsBwW,MAAtB,KAAiC,CAAC,CAAzC;AACA;AAzhGuD;AAAA;AAAA,aA2hGxD,0BAAiB;AAChB,YAAI5X,KAAJ;;AACA,aAAK,IAAI6J,GAAG,GAAG,KAAKC,WAApB,EAAiCD,GAAjC,EAAsCA,GAAG,GAAGA,GAAG,CAACE,OAAJ,EAA5C,EAA2D;AAC1D/J,UAAAA,KAAK,GAAG6J,GAAG,CAACuH,OAAZ;AACA,eAAK/P,IAAL,CAAUqG,aAAV,CAAwB;AACvB1H,YAAAA,KAAK,EAAEA,KADgB;AAEvB2J,YAAAA,QAAQ,EAAE;AAFa,WAAxB;AAIA;;AACD,aAAK9E,YAAL,GAAoB,IAApB;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AA5iG0D;AAAA;AAAA,aA6iGxD,6BAAoB;AACnBlK,QAAAA,OAAO,CAACsR,IAAR,CAAa,4EAAb;AACA,eAAO,KAAKkG,SAAL,CAAe6E,IAAtB;AACA;AAhjGuD;;AAAA;AAAA;;AAmjGzD,OAAKkB,MAAL,GAAc,UAAUC,IAAV,EAAgB;AAAA;;AAC7B,QAAI1d,KAAK,CAAC6E,UAAN,CAAiB1D,QAAjB,GAA4B,CAAhC,EAAmC;AAClC,YAAM,IAAIpB,KAAJ,oEAAN;AACA;;AACD,aAAA2d,IAAI,UAAJ,+BAAAA,IAAI,GAAK,EAAT;AACA,QAAIrb,CAAC,GAAG,IAAIgB,MAAJ,CAAWqa,IAAX,EAAiBA,IAAjB,EAAuB,CAC9B,CAACA,IAAD,EAAOA,IAAI,GAAG,GAAd,CAD8B,EAE9B,CAAC,CAACA,IAAF,EAAQA,IAAI,GAAG,GAAf,CAF8B,EAG9B,CAAC,CAAD,EAAI,CAACA,IAAD,GAAQ,GAAZ,CAH8B,CAAvB,CAAR;AAKArb,IAAAA,CAAC,CAACyH,KAAF,GAAU,OAAV;AACAzH,IAAAA,CAAC,CAACsb,eAAF,GAAoB,IAApB;AACAtb,IAAAA,CAAC,CAACub,QAAF,GAAa;AAAExc,MAAAA,CAAC,EAAEiB,CAAC,CAACjB,CAAP;AAAUC,MAAAA,CAAC,EAAEgB,CAAC,CAAChB;AAAf,KAAb;AACA,QAAIwc,KAAK,GAAGxb,CAAC,CAACyb,IAAd;AACAzb,IAAAA,CAAC,CAACyb,IAAF,wEAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AACR,mBAAKF,QAAL,CAAcxc,CAAd,GAAkB,KAAKA,CAAvB;AACA,mBAAKwc,QAAL,CAAcvc,CAAd,GAAkB,KAAKA,CAAvB;AAFQ;AAAA,qBAGFwc,KAAK,CAACrX,IAAN,OAAAqX,KAAK,GAAM,IAAN,6CAHH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAT;AAKA,WAAOxb,CAAP;AACA,GApBD;AAsBA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAlmG0D,MAmmGnDgC,eAnmGmD;AAAA;;AAAA;;AAomGxD,+BAAc;AAAA;;AAAA;;AAAA;;AACb;AACA,aAAKZ,CAAL,GAASzD,KAAT;AACA,UAAI6D,IAAI,8BAAOC,SAAP,CAAR;AAEA;AACH;AACA;AACA;AACA;AACA;;AACG,aAAKyY,IAAL,GAAY,SAAZ;AAEA,UAAIwB,MAAJ;;AAEA,UAAIla,IAAI,CAAC,CAAD,CAAJ,YAAmBR,MAAnB,IAA6BQ,IAAI,CAAC,CAAD,CAAJ,YAAmBK,KAApD,EAA2D;AAC1D6Z,QAAAA,MAAM,GAAGla,IAAI,CAAC,CAAD,CAAb;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACtB,KAAL,CAAW,CAAX,CAAP;AACA;;AACD,iBAAAwb,MAAM,UAAN,mCAAAA,MAAM,GAAK,OAAKta,CAAL,CAAOoB,UAAlB;;AAEA,UAAI,OAAOhB,IAAI,CAAC,CAAD,CAAX,IAAkB,QAAlB,KAA+BA,IAAI,CAAC,CAAD,CAAJ,CAAQM,MAAR,IAAkB,CAAlB,IAAuB,CAACN,IAAI,CAAC,CAAD,CAAJ,CAAQmZ,QAAR,CAAiB,GAAjB,CAAvD,CAAJ,EAAmF;AAClF,eAAKT,IAAL,GAAY1Y,IAAI,CAAC,CAAD,CAAhB;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACtB,KAAL,CAAW,CAAX,CAAP;AACA;AAED;AACH;AACA;AACA;AACA;AACA;;;AACG,aAAKqa,KAAL,GAAa,CAAb;AAEA,aAAKoB,MAAL,GAAc,CAAd;AAEA,aAAKC,WAAL,GAAmB,CAAC,CAApB;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACG,aAAKC,MAAL,GAAc;AAAE9c,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAAd;AAEA,aAAK8c,WAAL,GAAmB,CAAnB;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;;AACG,aAAKC,OAAL,GAAe,IAAf;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;;AACG,aAAK3Y,OAAL,GAAe,IAAf;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;;AACG,aAAK4Y,OAAL,GAAe,IAAf;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACG,aAAKC,eAAL,GAAuB,KAAvB;AAEA;AACH;AACA;AACA;AACA;AACA;;AACG,aAAKC,YAAL,GAAoB,KAApB;AAEA,aAAK5M,QAAL,GAAgB,CAAhB;AACA,aAAK3J,MAAL,GAAc,IAAIC,KAAJ,EAAd;AAEA,UAAIpE,IAAI,CAACM,MAAL,IAAe,CAAf,IAAoB,OAAON,IAAI,CAAC,CAAD,CAAX,IAAkB,QAA1C,EAAoD;AAEpDka,MAAAA,MAAM,CAACvW,MAAP,iCAxGa,CA0Gb;;AACA,UACC3D,IAAI,CAACM,MAAL,IAAe,CAAf,IACA,OAAON,IAAI,CAAC,CAAD,CAAX,IAAkB,QADlB,KAEC,OAAOA,IAAI,CAAC,CAAD,CAAX,IAAkB,QAAlB,IAA8B,OAAOA,IAAI,CAAC,CAAD,CAAX,IAAkB,QAFjD,CADD,EAIE;AACD,YAAI2a,IAAI,GAAG3a,IAAI,CAAC,CAAD,CAAf;AACA,YAAI4a,EAAJ,EAAQC,IAAR;AACA,YAAI,CAACtb,KAAK,CAACS,IAAI,CAAC,CAAD,CAAL,CAAV,EAAqB6a,IAAI,GAAG/Z,MAAM,CAACd,IAAI,CAAC,CAAD,CAAL,CAAb,CAArB,KACK4a,EAAE,GAAG5a,IAAI,CAAC,CAAD,CAAT,CAJJ,CAMD;AAEA;;AACA,YAAI2a,IAAI,CAACjc,KAAL,CAAW,CAAC,CAAZ,KAAkB,MAAlB,IAA6Bkc,EAAE,IAAIA,EAAE,CAAClc,KAAH,CAAS,CAAC,CAAV,KAAgB,MAAvD,EAAgE;AAC/D,gBAAM,IAAIgC,aAAJ,CAAkB,iBAAlB,EAAqC,CAArC,EAAwC,CAACia,IAAD,CAAxC,CAAN;AACA;;AAED,YAAIG,OAAO,GAAG,CAAd;AACA,YAAIC,OAAO,GAAG,CAAd,CAdC,CAgBD;;AACA,aAAK,IAAItT,CAAC,GAAGkT,IAAI,CAACra,MAAL,GAAc,CAA3B,EAA8BmH,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AAC1C,cAAI,CAAClI,KAAK,CAACob,IAAI,CAACK,MAAL,CAAYvT,CAAZ,CAAD,CAAV,EAA4BqT,OAAO,GAAnC,KACK;AACL;;AAED,YAAIF,EAAJ,EAAQ;AACP,eAAK,IAAInT,GAAC,GAAGmT,EAAE,CAACta,MAAH,GAAY,CAAzB,EAA4BmH,GAAC,IAAI,CAAjC,EAAoCA,GAAC,EAArC,EAAyC;AACxC,gBAAI,CAAClI,KAAK,CAACqb,EAAE,CAACI,MAAH,CAAUvT,GAAV,CAAD,CAAV,EAA0BsT,OAAO,GAAjC,KACK;AACL;AACD;;AAED,YAAIE,OAAO,GAAGN,IAAI,CAACjc,KAAL,CAAW,CAAX,EAAc,CAAC,CAAD,GAAKoc,OAAnB,CAAd;AACA,YAAII,OAAJ;AACA,YAAIN,EAAJ,EAAQM,OAAO,GAAGN,EAAE,CAAClc,KAAH,CAAS,CAAT,EAAY,CAAC,CAAD,GAAKqc,OAAjB,CAAV,CA/BP,CAiCD;AACA;;AACA,YAAIH,EAAE,IAAIK,OAAO,IAAIC,OAArB,EAA8B;AAC7B,iBAAKja,IAAL,CAAU,OAAKrB,CAAL,CAAOub,SAAP,CAAiBR,IAAjB,CAAV;;AACA,iBAAK1Z,IAAL,CAAU,OAAKrB,CAAL,CAAOub,SAAP,CAAiBP,EAAjB,CAAV;AACA,SAHD,MAGO;AAAA;;AACN;AACA;AACA;AACA;AACA;AACA,cAAIQ,IAAI,GAAGC,QAAQ,CAACV,IAAI,CAACjc,KAAL,CAAW,CAAC,CAAD,GAAKoc,OAAhB,EAAyB,CAAC,CAA1B,CAAD,EAA+B,EAA/B,CAAnB;AACA,kBAAAD,IAAI,UAAJ,6BAAAA,IAAI,GAAKQ,QAAQ,CAACT,EAAE,CAAClc,KAAH,CAAS,CAAC,CAAD,GAAKqc,OAAd,EAAuB,CAAC,CAAxB,CAAD,EAA6B,EAA7B,CAAjB,CAPM,CASN;;AACA,cAAIF,IAAI,GAAGO,IAAX,EAAiB;AAChB,gBAAI5c,CAAC,GAAGqc,IAAR;AACAA,YAAAA,IAAI,GAAGO,IAAP;AACAA,YAAAA,IAAI,GAAG5c,CAAP;AACA;;AAED,cAAI8c,QAAJ;;AACA,cAAI,CAACV,EAAD,IAAOE,OAAO,IAAIC,OAAtB,EAA+B;AAC9B;AACA,iBAAK,IAAItT,IAAC,GAAG2T,IAAb,EAAmB3T,IAAC,IAAIoT,IAAxB,EAA8BpT,IAAC,EAA/B,EAAmC;AAClC;AACA;AACA6T,cAAAA,QAAQ,GAAGL,OAAO,GAAG,OAAKrb,CAAL,CAAO2b,EAAP,CAAU9T,IAAV,EAAaqT,OAAb,CAAV,GAAkC,MAA7C;;AACA,qBAAK7Z,IAAL,CAAU,OAAKrB,CAAL,CAAOub,SAAP,CAAiBG,QAAjB,CAAV;AACA;AACD,WARD,CAQE;AARF,eASK;AACJ,iBAAK,IAAI7T,IAAC,GAAG2T,IAAb,EAAmB3T,IAAC,IAAIoT,IAAxB,EAA8BpT,IAAC,EAA/B,EAAmC;AAClC;AACA6T,cAAAA,QAAQ,GAAGL,OAAO,GAAGxT,IAAV,GAAc,MAAzB;;AACA,qBAAKxG,IAAL,CAAU,OAAKrB,CAAL,CAAOub,SAAP,CAAiBG,QAAjB,CAAV;AACA;AACD;AACD;AACD,OA5ED,CA4EE;AAEF;AA9EA,WA+EK,IAAI,OAAOtb,IAAI,CAACA,IAAI,CAACM,MAAL,GAAc,CAAf,CAAX,IAAgC,QAAhC,IAA4C,EAAEN,IAAI,CAACA,IAAI,CAACM,MAAL,GAAc,CAAf,CAAJ,YAAiC1E,EAAE,CAAC6E,KAAtC,CAAhD,EAA8F;AAAA,YA4BzF+a,oBA5ByF,GA4BlG,SAASA,oBAAT,GAAgC;AAAA;;AAC/B,cAAI5a,KAAK,CAACC,OAAN,CAAc4a,KAAd,KAAwB7a,KAAK,CAACC,OAAN,CAAc4a,KAAK,CAACpE,MAApB,CAA5B,EAAyD;AACxD,gBAAI,OAAOoE,KAAK,CAAC,CAAD,CAAZ,IAAmB,QAAvB,EAAiC;AAChC,kBAAIA,KAAK,CAACnb,MAAN,IAAgB,CAApB,EAAuB;AACtBmb,gBAAAA,KAAK,GAAG;AAAErJ,kBAAAA,GAAG,EAAEqJ,KAAK,CAAC/c,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAP;AAA0Bmb,kBAAAA,IAAI,EAAE4B,KAAK,CAAC/c,KAAN,CAAY,CAAZ;AAAhC,iBAAR;AACA,eAFD,MAEO;AACN+c,gBAAAA,KAAK,GAAG;AAAErJ,kBAAAA,GAAG,EAAEqJ;AAAP,iBAAR;AACA;AACD,aAND,MAMO;AACN,kBAAIpE,OAAM,GAAGoE,KAAb;;AACA,kBAAI7a,KAAK,CAACC,OAAN,CAAc4a,KAAK,CAACpE,MAApB,CAAJ,EAAiC;AAChCA,gBAAAA,OAAM,GAAGoE,KAAK,CAACpE,MAAf;AACA,uBAAOoE,KAAK,CAACpE,MAAb;;AACA,qBAAK,IAAI5P,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG4P,OAAM,CAAC/W,MAA3B,EAAmCmH,IAAC,EAApC,EAAwC;AACvC4P,kBAAAA,OAAM,CAAC5P,IAAD,CAAN,GAAY;AACX2K,oBAAAA,GAAG,EAAEiF,OAAM,CAAC5P,IAAD;AADA,mBAAZ;AAGA7E,kBAAAA,MAAM,CAAC6C,MAAP,CAAc4R,OAAM,CAAC5P,IAAD,CAApB,EAAyBgU,KAAzB;AACA;AACD;;AAXK,0DAYYpE,OAZZ;AAAA;;AAAA;AAYN,uEAA0B;AAAA,sBAAjB0B,KAAiB;AACzB0C,kBAAAA,KAAK,GAAG1C,KAAR;;AACAyC,kBAAAA,oBAAoB;AACpB;AAfK;AAAA;AAAA;AAAA;AAAA;;AAgBN;AACA;AACD;;AAED,uBAAyFC,KAAzF;AAAA,cAAMhc,CAAN,UAAMA,CAAN;AAAA,cAASC,CAAT,UAASA,CAAT;AAAA,cAAY6D,KAAZ,UAAYA,KAAZ;AAAA,cAAmBE,MAAnB,UAAmBA,MAAnB;AAAA,cAA2BiY,SAA3B,UAA2BA,SAA3B;AAAA,cAAsC7B,IAAtC,UAAsCA,IAAtC;AAAA,cAA4CzH,GAA5C,UAA4CA,GAA5C;AAAA,cAAiD6D,IAAjD,UAAiDA,IAAjD;AAAA,cAAuD1Y,CAAvD,UAAuDA,CAAvD;AAAA,cAA0DC,CAA1D,UAA0DA,CAA1D;AAAA,cAA6D6Z,MAA7D,UAA6DA,MAA7D;AAAA,cAAqEM,KAArE,UAAqEA,KAArE;AAAA,cAA4E7J,QAA5E,UAA4EA,QAA5E;AACA,oBAAA+L,IAAI,UAAJ,iCAAAA,IAAI,GAAK6B,SAAT;AACA,cAAI/D,KAAJ,EAAWtV,MAAK,CAACsZ,UAAN,GAAmBhE,KAAnB;AACX,cAAI7J,QAAJ,EAAczL,MAAK,CAACyL,QAAN,GAAiBA,QAAjB;AAEd,iBAAArO,CAAC,UAAD,2BAAAA,CAAC,GAAK8D,KAAN;AACA,iBAAA7D,CAAC,UAAD,2BAAAA,CAAC,GAAK+D,MAAN;AAEA,cAAInG,QAAJ;;AACA,cAAI4c,MAAJ,EAAY;AAAA;;AACX,mBAAAza,CAAC,UAAD,2BAAAA,CAAC,GAAKya,MAAM,CAACza,CAAb;AACA,mBAAAC,CAAC,UAAD,2BAAAA,CAAC,GAAKwa,MAAM,CAACxa,CAAb;AACApC,YAAAA,QAAQ,GAAG4c,MAAM,CAAC5c,QAAlB;AACA;;AAED,iBAAAC,CAAC,UAAD,2BAAAA,CAAC,GAAK,CAAN;AACA,iBAAAC,CAAC,UAAD,2BAAAA,CAAC,GAAK,CAAN;AACA,kBAAA4U,GAAG,UAAH,6BAAAA,GAAG,GAAK6D,IAAR,CA7C+B,CA8C/B;AACA;AACA;AACA;;AACA,cAAI,OAAO7D,GAAP,IAAc,QAAlB,EAA4B;AAC3B5U,YAAAA,CAAC,GAAG4U,GAAJ;AACA,WAFD,MAEO,IAAIA,GAAJ,EAAS;AACf;AACA;AACA;AACA7U,YAAAA,CAAC,GAAG6U,GAAG,CAAC,CAAD,CAAP,CAJe,CAIH;;AACZ5U,YAAAA,CAAC,GAAG4U,GAAG,CAAC,CAAD,CAAP,CALe,CAKH;AACZ;;AAED,cAAI,OAAOyH,IAAP,IAAe,QAAnB,EAA6B;AAC5Bpa,YAAAA,CAAC,GAAGC,CAAC,GAAGma,IAAR;AACA,WAFD,MAEO,IAAIA,IAAJ,EAAU;AAChBpa,YAAAA,CAAC,GAAGoa,IAAI,CAAC,CAAD,CAAR;AACAna,YAAAA,CAAC,GAAGma,IAAI,CAAC,CAAD,CAAR;AACA,WAjE8B,CAmE/B;AACA;;;AACAtc,UAAAA,CAAC,IAAID,QAAL;AACAE,UAAAA,CAAC,IAAIF,QAAL;;AAEA,cAAI,CAACmC,CAAD,IAAM,CAACC,CAAX,EAAc;AACb,gBAAIpC,QAAJ,EAAc;AACbmC,cAAAA,CAAC,GAAGC,CAAC,GAAG,IAAIpC,QAAZ;AACA,aAFD,MAEO,IAAI+E,MAAK,CAACuZ,WAAN,CAAkBrY,KAAlB,GAA0BlB,MAAK,CAACuZ,WAAN,CAAkBnY,MAAhD,EAAwD;AAC9DhE,cAAAA,CAAC,GAAGC,CAAC,GAAG2C,MAAK,CAACuZ,WAAN,CAAkBrY,KAA1B;AACA,aAFM,MAEA;AACN9D,cAAAA,CAAC,GAAGC,CAAC,GAAG2C,MAAK,CAACuZ,WAAN,CAAkBnY,MAA1B;AACA;AACD,WARD,MAQO;AACNhE,YAAAA,CAAC,IAAInC,QAAL;AACAoC,YAAAA,CAAC,IAAIpC,QAAL;AACA;;AAED,cAAIue,UAAU,GAAGxE,MAAM,IAAI,CAA3B,CArF+B,CAuF/B;;AACA,eAAK,IAAI5P,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAGoU,UAApB,EAAgCpU,IAAC,EAAjC,EAAqC;AACpCpF,YAAAA,MAAK,CAACpB,IAAN,CAAW;AAAE1D,cAAAA,CAAC,EAADA,CAAF;AAAKC,cAAAA,CAAC,EAADA,CAAL;AAAQiC,cAAAA,CAAC,EAADA,CAAR;AAAWC,cAAAA,CAAC,EAADA;AAAX,aAAX;;AACAnC,YAAAA,CAAC,IAAIkC,CAAL;;AACA,gBAAIlC,CAAC,IAAI8E,MAAK,CAACuZ,WAAN,CAAkBrY,KAA3B,EAAkC;AACjChG,cAAAA,CAAC,GAAG,CAAJ;AACAC,cAAAA,CAAC,IAAIkC,CAAL;AACA,kBAAIlC,CAAC,IAAI6E,MAAK,CAACuZ,WAAN,CAAkBnY,MAA3B,EAAmCjG,CAAC,GAAG,CAAJ;AACnC;AACD;AACD,SA7HiG;;AAClG,YAAIse,KAAK,GAAG5B,MAAM,CAAC0B,WAAnB;AACA,YAAIH,KAAJ;;AACA,YAAIzb,IAAI,CAAC,CAAD,CAAJ,YAAmBpE,EAAE,CAAC6E,KAAtB,IAA+B,OAAOT,IAAI,CAAC,CAAD,CAAX,IAAkB,QAArD,EAA+D;AAC9D,cAAIA,IAAI,CAACM,MAAL,IAAe,CAAnB,EAAsB;AACrB,kBAAM,IAAII,aAAJ,CAAkB,iBAAlB,EAAqC,CAArC,CAAN;AACA;;AACDob,UAAAA,KAAK,GAAG9b,IAAI,CAAC,CAAD,CAAZ;AACAyb,UAAAA,KAAK,GAAGzb,IAAI,CAAC,CAAD,CAAZ;AACA,SAND,MAMO;AACNyb,UAAAA,KAAK,GAAGzb,IAAI,CAAC,CAAD,CAAZ;AACA;;AAED,YAAIqC,MAAK,iCAAT;;AAEA,YAAIyZ,KAAK,YAAYlgB,EAAE,CAAC6E,KAApB,IAA6Bqb,KAAK,CAACvY,KAAN,IAAe,CAA5C,IAAiDuY,KAAK,CAACrY,MAAN,IAAgB,CAArE,EAAwE;AACvE,iBAAKmY,WAAL,GAAmBE,KAAnB;;AACAN,UAAAA,oBAAoB;AACpB,SAHD,MAGO;AACN,cAAIO,GAAJ;AACA,cAAI,OAAOD,KAAP,IAAgB,QAApB,EAA8BC,GAAG,GAAGD,KAAN,CAA9B,KACKC,GAAG,GAAGD,KAAK,CAACC,GAAZ;AACL,iBAAKH,WAAL,GAAmB,OAAKhc,CAAL,CAAOub,SAAP,CAAiBY,GAAjB,EAAsB,YAAM;AAC9CP,YAAAA,oBAAoB;AACpB,WAFkB,CAAnB,CAJM,CAON;AACA;AAoGD,OA9HI,CA8HH;AA9HG,WA+HA;AACJ;AACA,aAAK,IAAI/T,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAGzH,IAAI,CAACM,MAAzB,EAAiCmH,IAAC,EAAlC,EAAsC;AACrC,cAAIzH,IAAI,CAACyH,IAAD,CAAJ,YAAmB7L,EAAE,CAAC6E,KAA1B,EAAiC,OAAKQ,IAAL,CAAUjB,IAAI,CAACyH,IAAD,CAAd,EAAjC,KACK,OAAKxG,IAAL,CAAU,OAAKrB,CAAL,CAAOub,SAAP,CAAiBnb,IAAI,CAACyH,IAAD,CAArB,CAAV;AACL;AACD;;AA/TY;AAgUb;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA96G0D;AAAA;AAAA,WA+6GxD,eAAiB;AAChB,eAAO,KAAK6S,WAAZ;AACA,OAj7GuD;AAAA,WAk7GxD,aAAexc,GAAf,EAAoB;AACnB,YAAIA,GAAG,IAAI,CAAX,EAAcA,GAAG,GAAG,CAAN;AACd,aAAKwc,WAAL,GAAmBxc,GAAnB;AACA;AACD;AACF;AACA;AACA;AACE;AAEA;AACA;AAEA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA18G0D;AAAA;AAAA,WA28GxD,eAAY;AACX,eAAO,KAAKqG,MAAZ;AACA,OA78GuD;AAAA,WA88GxD,aAAUrG,GAAV,EAAe;AACd,YAAI,OAAOA,GAAP,IAAc,QAAlB,EAA4B;AAC3BA,UAAAA,GAAG,GAAG;AAAEP,YAAAA,CAAC,EAAEO,GAAL;AAAUN,YAAAA,CAAC,EAAEM;AAAb,WAAN;AACA;;AACD,aAAKqG,MAAL,CAAYE,EAAZ,GAAiBvG,GAAG,CAACP,CAArB;AACA,aAAK4G,MAAL,CAAYQ,EAAZ,GAAiB7G,GAAG,CAACN,CAArB;AACA,aAAK2G,MAAL,CAAYO,IAAZ,GAAmB5G,GAAG,CAACP,CAAvB;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AA59G0D;AAAA;AAAA,aA69GxD,iBAAQ;AACP,YAAI4C,GAAG,GAAG,IAAIK,eAAJ,EAAV;AACAL,QAAAA,GAAG,CAACyb,WAAJ,GAAkB,KAAKA,WAAvB;;AACA,aAAK,IAAInU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnH,MAAzB,EAAiCmH,CAAC,EAAlC,EAAsC;AACrCtH,UAAAA,GAAG,CAACc,IAAJ,CAAS,KAAKwG,CAAL,CAAT;AACA;;AACDtH,QAAAA,GAAG,CAACka,MAAJ,CAAW9c,CAAX,GAAe,KAAK8c,MAAL,CAAY9c,CAA3B;AACA4C,QAAAA,GAAG,CAACka,MAAJ,CAAW7c,CAAX,GAAe,KAAK6c,MAAL,CAAY7c,CAA3B;AACA2C,QAAAA,GAAG,CAACwb,UAAJ,GAAiB,KAAKA,UAAtB;AACAxb,QAAAA,GAAG,CAACoa,OAAJ,GAAc,KAAKA,OAAnB;AACApa,QAAAA,GAAG,CAACqa,OAAJ,GAAc,KAAKA,OAAnB;AACAra,QAAAA,GAAG,CAAC2N,QAAJ,GAAe,KAAKA,QAApB;AACA,eAAO3N,GAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAz/G0D;AAAA;AAAA,aA0/GxD,cAAK5C,CAAL,EAAQC,CAAR,EAAWwe,CAAX,EAAcC,EAAd,EAAkBC,EAAlB,EAAsB;AAAA;;AACrB,aAAK3e,CAAL,GAASA,CAAC,IAAI,CAAd;AACA,aAAKC,CAAL,GAASA,CAAC,IAAI,CAAd;AAEA,YAAI,CAAC,KAAKoE,OAAV,EAAmB;AAEnB,eAAAqa,EAAE,UAAF,2BAAAA,EAAE,GAAK,CAAP;AACA,eAAAC,EAAE,UAAF,2BAAAA,EAAE,GAAK,CAAP;AAEA,aAAKtc,CAAL,CAAOqB,IAAP;AACA,aAAKrB,CAAL,CAAOuV,SAAP,CAAiBvZ,EAAE,CAACC,SAAH,CAAagZ,MAA9B;AACA,aAAKjV,CAAL,CAAO0V,SAAP,CAAiB,KAAK/X,CAAtB,EAAyB,KAAKC,CAA9B;AACA,aAAKoC,CAAL,CAAO2V,MAAP,CAAcyG,CAAC,IAAI,KAAKlO,QAAxB;AACA,aAAKlO,CAAL,CAAO4V,KAAP,CAAayG,EAAE,GAAG,KAAK9X,MAAL,CAAY5G,CAA9B,EAAiC2e,EAAE,GAAG,KAAK/X,MAAL,CAAY3G,CAAlD;AACA,YAAI2e,GAAG,GAAG,KAAK,KAAKpD,KAAV,CAAV;;AACA,YAAIoD,GAAG,KAAK/b,SAAZ,EAAuB;AACtB,cAAI,KAAKwb,WAAT,EAAsB;AACrB,gBAAMre,GAAN,GAAqB4e,GAArB,CAAM5e,CAAN;AAAA,gBAASC,GAAT,GAAqB2e,GAArB,CAAS3e,CAAT;AAAA,gBAAYiC,CAAZ,GAAqB0c,GAArB,CAAY1c,CAAZ;AAAA,gBAAeC,CAAf,GAAqByc,GAArB,CAAezc,CAAf,CADqB,CACK;;AAC1B,iBAAKE,CAAL,CAAOwc,KAAP,CAAa,KAAKR,WAAlB,EAA+B,KAAKvB,MAAL,CAAY9c,CAA3C,EAA8C,KAAK8c,MAAL,CAAY7c,CAA1D,EAA6DiC,CAA7D,EAAgEC,CAAhE,EAAmEnC,GAAnE,EAAsEC,GAAtE,EAAyEiC,CAAzE,EAA4EC,CAA5E;AACA,WAHD,MAGO;AACN,iBAAKE,CAAL,CAAOwc,KAAP,CAAaD,GAAb,EAAkB,KAAK9B,MAAL,CAAY9c,CAA9B,EAAiC,KAAK8c,MAAL,CAAY7c,CAA7C;AACA;AACD,SAPD,MAOO;AACNpB,UAAAA,GAAG,CACF,cACC,KAAKsc,IADN,GAEC,qCAFD,GAGC,KAAKK,KAHN,GAIC,wHALC,CAAH;AAOA;;AAED,aAAKnZ,CAAL,CAAO4H,GAAP;AACA;AA3hHuD;AAAA;AAAA,aA6hHxD,kBAAS;AACR,aAAK2S,MAAL;AACA,YAAIkC,aAAa,GAAG,KAAKtD,KAAzB;AACA,aAAK2B,YAAL,GAAoB,KAApB,CAHQ,CAKR;;AACA,YAAI,KAAKpa,MAAL,KAAgB,CAApB,EAAuB;AACtB,eAAKia,OAAL,GAAe,KAAf;AACA,eAAKxB,KAAL,GAAa,CAAb;AACA;;AAED,YAAI,KAAKwB,OAAL,IAAgB,KAAKJ,MAAL,GAAc,KAAKwB,UAAnB,KAAkC,CAAtD,EAAyD;AACxD,eAAKjB,YAAL,GAAoB,IAApB;;AAEA,cAAK,KAAKN,WAAL,IAAoB,CAAC,CAArB,IAA0B,KAAKrB,KAAL,IAAc,KAAKE,SAA9C,IAA4D,KAAKF,KAAL,IAAc,KAAKqB,WAAnF,EAAgG;AAC/F,gBAAI,KAAKK,eAAT,EAA0B,KAAK1B,KAAL,GAAa,CAAb;AAC1B,gBAAI,KAAKyB,OAAT,EAAkB,KAAKJ,WAAL,GAAmB,CAAC,CAApB,CAAlB,KACK,KAAKG,OAAL,GAAe,KAAf;AACL,iBAAKrB,UAAL,GAJ+F,CAI5E;;AACnB,gBAAI,CAAC,KAAKsB,OAAV,EAAmB;AACnB,WATuD,CAWxD;;;AACA,cAAI,KAAKJ,WAAL,GAAmB,KAAKrB,KAAxB,IAAiC,KAAKqB,WAAL,KAAqB,CAAC,CAA3D,EAA8D;AAC7D,iBAAKrB,KAAL;AACA,WAFD,CAGA;AAHA,eAIK,IAAI,KAAKqB,WAAL,GAAmB,KAAKrB,KAAxB,IAAiC,KAAKqB,WAAL,KAAqB,CAAC,CAA3D,EAA8D;AAClE,iBAAKrB,KAAL;AACA,WAFI,MAEE,IAAI,KAAKqB,WAAL,KAAqB,KAAKrB,KAA1B,IAAmC,KAAKqB,WAAL,KAAqB,CAAC,CAA7D,EAAgE;AACtE,iBAAKG,OAAL,GAAe,KAAf;AACA,WAFM,MAEA,IAAI,KAAKC,OAAT,EAAkB;AACxB;AACA;AACA,gBAAI,KAAKzB,KAAL,IAAc,KAAKE,SAAvB,EAAkC;AACjC,mBAAKF,KAAL,GAAa,CAAb;AACA,aAFD,MAEO,KAAKA,KAAL;AACP,WANM,MAMA;AACN;AACA,gBAAI,KAAKA,KAAL,GAAa,KAAKE,SAAtB,EAAiC,KAAKF,KAAL;AACjC;AACD;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;AA9kH0D;AAAA;AAAA,aA+kHxD,cAAKA,KAAL,EAAY;AAAA;;AACX,aAAKwB,OAAL,GAAe,IAAf;AACA,YAAIxB,KAAK,KAAK3Y,SAAd,EAAyB,KAAK2Y,KAAL,GAAaA,KAAb;AACzB,aAAKqB,WAAL,GAAmB,CAAC,CAApB;AACA,eAAO,IAAIvB,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC/B,UAAA,MAAI,CAACI,UAAL,GAAkB,YAAM;AACvBJ,YAAAA,OAAO;AACP,WAFD;AAGA,SAJM,CAAP;AAKA;AAED;AACF;AACA;AACA;AACA;;AA9lH0D;AAAA;AAAA,aA+lHxD,eAAMC,KAAN,EAAa;AACZ,aAAKwB,OAAL,GAAe,KAAf;AACA,YAAIxB,KAAJ,EAAW,KAAKA,KAAL,GAAaA,KAAb;AACX;AAED;AACF;AACA;AACA;AACA;;AAxmH0D;AAAA;AAAA,aAymHxD,cAAKA,KAAL,EAAY;AACX,aAAKwB,OAAL,GAAe,KAAf;AACA,YAAIxB,KAAJ,EAAW,KAAKA,KAAL,GAAaA,KAAb;AACX;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AArnH0D;AAAA;AAAA,aAsnHxD,kBAAS;AACR,aAAKyB,OAAL,GAAe,KAAf;AACA,eAAO,KAAKxB,SAAL,CAAe,CAAf,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;;AA/nH0D;AAAA;AAAA,aAgoHxD,gBAAO;AACN,aAAKwB,OAAL,GAAe,IAAf;AACA,aAAKD,OAAL,GAAe,IAAf;AACA;AAED;AACF;AACA;AACA;AACA;;AAzoH0D;AAAA;AAAA,aA0oHxD,kBAAS;AACR,aAAKC,OAAL,GAAe,KAAf;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AAnpH0D;AAAA;AAAA,aAopHxD,sBAAa;AACZ,eAAOpa,SAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AA/pH0D;AAAA;AAAA,aAgqHxD,qBAAYwR,CAAZ,EAAe;AACdvV,QAAAA,OAAO,CAACsR,IAAR,CAAa,qDAAb;AACA,YAAIiE,CAAC,GAAG,KAAKtR,MAAb,EAAqB,KAAKyY,KAAL,GAAanH,CAAb,CAArB,KACK,KAAKmH,KAAL,GAAa,KAAKzY,MAAL,GAAc,CAA3B;AAEL,aAAK8Z,WAAL,GAAmB,CAAC,CAApB,CALc,CAMd;AACA;AAED;AACF;AACA;AACA;AACA;;AA7qH0D;AAAA;AAAA,aA8qHxD,qBAAY;AACX,YAAI,KAAKrB,KAAL,GAAa,KAAKzY,MAAL,GAAc,CAA/B,EAAkC,KAAKyY,KAAL,GAAa,KAAKA,KAAL,GAAa,CAA1B,CAAlC,KACK,IAAI,KAAKyB,OAAT,EAAkB,KAAKzB,KAAL,GAAa,CAAb;AAEvB,aAAKqB,WAAL,GAAmB,CAAC,CAApB;AACA,aAAKG,OAAL,GAAe,KAAf;AACA;AAED;AACF;AACA;AACA;AACA;;AA1rH0D;AAAA;AAAA,aA2rHxD,yBAAgB;AACf,YAAI,KAAKxB,KAAL,GAAa,CAAjB,EAAoB,KAAKA,KAAL,GAAa,KAAKA,KAAL,GAAa,CAA1B,CAApB,KACK,IAAI,KAAKyB,OAAT,EAAkB,KAAKzB,KAAL,GAAa,KAAKzY,MAAL,GAAc,CAA3B;AAEvB,aAAK8Z,WAAL,GAAmB,CAAC,CAApB;AACA,aAAKG,OAAL,GAAe,KAAf;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAzsH0D;AAAA;AAAA,aA0sHxD,mBAAU+B,OAAV,EAAmB;AAAA;;AAClB,YAAIA,OAAO,GAAG,CAAV,IAAeA,OAAO,IAAI,KAAKhc,MAAnC,EAA2C;AAC1C;AACA,SAHiB,CAKlB;AACA;;;AACA,aAAK8Z,WAAL,GAAmBkC,OAAnB;;AAEA,YAAI,KAAKlC,WAAL,KAAqB,KAAKrB,KAA9B,EAAqC;AACpC,eAAKwB,OAAL,GAAe,IAAf;AACA;;AACD,eAAO,IAAI1B,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC/B,UAAA,MAAI,CAACI,UAAL,GAAkB,YAAM;AACvBJ,YAAAA,OAAO;AACP,WAFD;AAGA,SAJM,CAAP;AAKA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AApuH0D;AAAA;AAAA,aAquHxD,oBAAW;AACVzc,QAAAA,OAAO,CAACsR,IAAR,CAAa,oCAAb;AACA,eAAO,KAAKoL,KAAZ;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAjvH0D;AAAA;AAAA,aAkvHxD,wBAAe;AACd1c,QAAAA,OAAO,CAACsR,IAAR,CAAa,wCAAb;AACA,eAAO,KAAKsL,SAAZ;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AA7vH0D;AAAA;AAAA,WA8vHxD,eAAgB;AACf,eAAO,KAAK3Y,MAAL,GAAc,CAArB;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAxwH0D;AAAA;AAAA,WAywHxD,eAAiB;AAChB,YAAIsR,CAAC,GAAG,KAAKmH,KAAb;AACA,YAAIoD,GAAG,GAAG,KAAKvK,CAAL,CAAV;AACA,YAAIuK,GAAG,YAAYvgB,EAAE,CAAC6E,KAAtB,EAA6B,OAAO0b,GAAP;AAE7B,YAAM5e,CAAN,GAAqB4e,GAArB,CAAM5e,CAAN;AAAA,YAASC,CAAT,GAAqB2e,GAArB,CAAS3e,CAAT;AAAA,YAAYiC,CAAZ,GAAqB0c,GAArB,CAAY1c,CAAZ;AAAA,YAAeC,CAAf,GAAqByc,GAArB,CAAezc,CAAf,CALgB,CAKU;;AAC1B,YAAIgG,CAAC,GAAG6W,cAAc,CAAC9c,CAAD,EAAIC,CAAJ,CAAtB;AACAgG,QAAAA,CAAC,CAAC0W,KAAF,CAAQ,KAAKR,WAAb,EAA0B,KAAKvB,MAAL,CAAY9c,CAAtC,EAAyC,KAAK8c,MAAL,CAAY7c,CAArD,EAAwDiC,CAAxD,EAA2DC,CAA3D,EAA8DnC,CAA9D,EAAiEC,CAAjE,EAAoEiC,CAApE,EAAuEC,CAAvE;AACA,eAAOgG,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AAzxH0D;AAAA;AAAA,WA0xHxD,eAAQ;AACP,eAAO,KAAKnC,KAAZ;AACA;AACD;AACF;AACA;AACA;AACA;AACA;;AAlyH0D;AAAA;AAAA,WAmyHxD,eAAY;AACX,YAAI,KAAK,KAAKwV,KAAV,aAA4Bnd,EAAE,CAAC6E,KAAnC,EAA0C;AACzC,iBAAO,KAAK,KAAKsY,KAAV,EAAiBxV,KAAxB;AACA,SAFD,MAEO,IAAI,KAAK,KAAKwV,KAAV,CAAJ,EAAsB;AAC5B,iBAAO,KAAK,KAAKA,KAAV,EAAiBtZ,CAAxB;AACA;;AACD,eAAO,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AAjzH0D;AAAA;AAAA,WAkzHxD,eAAQ;AACP,eAAO,KAAKgE,MAAZ;AACA;AACD;AACF;AACA;AACA;AACA;AACA;;AA1zH0D;AAAA;AAAA,WA2zHxD,eAAa;AACZ,YAAI,KAAK,KAAKsV,KAAV,aAA4Bnd,EAAE,CAAC6E,KAAnC,EAA0C;AACzC,iBAAO,KAAK,KAAKsY,KAAV,EAAiBtV,MAAxB;AACA,SAFD,MAEO,IAAI,KAAK,KAAKsV,KAAV,CAAJ,EAAsB;AAC5B,iBAAO,KAAK,KAAKA,KAAV,EAAiBrZ,CAAxB;AACA;;AACD,eAAO,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AAz0H0D;AAAA;AAAA,WA00HxD,eAAa;AACZ,YAAI2X,MAAM,GAAG,EAAb;;AACA,aAAK,IAAI5P,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKnH,MAAzB,EAAiCmH,CAAC,EAAlC,EAAsC;AACrC4P,UAAAA,MAAM,CAACpW,IAAP,CAAY,KAAKwG,CAAL,CAAZ;AACA;;AACD,eAAO4P,MAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AAv1H0D;AAAA;AAAA,WAw1HxD,eAAa;AACZ,eAAO,KAAKA,MAAZ;AACA;AA11HuD;;AAAA;AAAA,mCAmmG3BzW,KAnmG2B;AA61HzD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAt3H0D,MAu3HnDP,KAv3HmD;AAAA;;AAAA;;AAw3HxD,qBAAqB;AAAA;;AAAA,yCAANL,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAAA;;AACpB,UAAIka,MAAJ;;AACA,UAAIla,IAAI,CAAC,CAAD,CAAJ,YAAmBK,KAAvB,EAA8B;AAC7B6Z,QAAAA,MAAM,GAAGla,IAAI,CAAC,CAAD,CAAb;AACAA,QAAAA,IAAI,GAAGA,IAAI,CAACtB,KAAL,CAAW,CAAX,CAAP;AACA;;AACD,4EAASsB,IAAT;AACA,aAAKH,KAAL,GAAa,CAAb;AACA,aAAKD,CAAL,GAASzD,KAAT,CARoB,CAUpB;AACA;;AACA,UAAI,CAAC,OAAKyD,CAAL,CAAOoB,UAAZ,EAAwB,OAAKwb,kBAAL,GAA0B,IAA1B;AAExB,UAAI,CAAC,OAAKA,kBAAV,EAA8B,OAAKtC,MAAL,GAAc,CAAd;AAC9B,UAAIA,MAAJ,EAAY,OAAKA,MAAL,GAAcA,MAAM,CAACra,KAArB;AAEZ;AACH;AACA;AACA;AACA;AACA;;AACG,aAAKqB,UAAL,GAAkB,EAAlB;AAEA;AACH;AACA;AACA;;AACG,aAAKW,SAAL,GAAiB,EAAjB;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKC,SAAL,GAAiB,EAAjB;AAEA,aAAKC,QAAL,GAAgB,EAAhB;AACA;AACH;AACA;AACA;;AACG,aAAKC,SAAL,GAAiB,EAAjB;AACA,aAAKC,YAAL,GAAoB,EAApB;AACA,aAAKC,WAAL,GAAmB,EAAnB;AAEA,aAAKnD,WAAL,GAAmB,IAAIoD,GAAJ,EAAnB;AACA,aAAKnD,YAAL,GAAoB,IAAImD,GAAJ,EAApB,CA3CoB,CA6CpB;AACA;AACA;AACA;AACA;;AACA,aAAKqa,QAAL;;AAEA,UAAI,OAAK7c,CAAL,CAAOE,KAAX,EAAkB;AACjB,eAAKD,KAAL,GAAa,OAAKD,CAAL,CAAOE,KAAP,CAAa4c,aAA1B;AACA,eAAK9c,CAAL,CAAOE,KAAP,CAAaiB,MAAb,CAAoB,OAAKlB,KAAzB;AACA,eAAKD,CAAL,CAAOE,KAAP,CAAa4c,aAAb;AACA;;AAED,UAAIra,KAAK,iCAAT;;AA1DoB,UA4Ddsa,WA5Dc;AAAA;;AAAA;;AA6DnB,+BAAc;AAAA;;AAAA,oDACPta,KADO,oCACGpC,SADH;AAEb;;AA/DkB;AAAA,QA4DMT,MA5DN;;AAiEpB,aAAKmd,WAAL,GAAmBA,WAAnB;AACA,aAAKnd,MAAL,GAAcmd,WAAd;;AAlEoB,UAoEdC,QApEc;AAAA;;AAAA;;AAqEnB,4BAAc;AAAA;;AAAA,oDACPva,KADO,oCACGpC,SADH;AAEb;;AAvEkB;AAAA,QAoEGI,KApEH;;AAyEpB,aAAKuc,QAAL,GAAgBA,QAAhB;AACA,aAAKvc,KAAL,GAAauc,QAAb;AAEA,aAAK5Y,KAAL,GAAa;AACZ6Y,QAAAA,OAAO,EAAE,IADG;AAEZC,QAAAA,QAAQ,EAAE,IAFE;AAGZC,QAAAA,OAAO,EAAE,IAHG;AAIZC,QAAAA,KAAK,EAAE,IAJK;AAKZC,QAAAA,OAAO,EAAE,IALG;AAMZC,QAAAA,IAAI,EAAE,IANM;AAOZC,QAAAA,QAAQ,EAAE,IAPE;AAQZC,QAAAA,MAAM,EAAE,IARI;AASZC,QAAAA,QAAQ,EAAE,IATE;AAUZC,QAAAA,OAAO,EAAE;AAVG,OAAb;;AA5EoB,iCAwFXC,KAxFW;AAyFnB,eAAKvZ,KAAL,CAAWuZ,KAAX,IAAoB,UAAUC,GAAV,EAAe;AAAA,uDACpBnb,KADoB;AAAA;;AAAA;AAClC,sEAAqB;AAAA,kBAAZyE,CAAY;AACpB,kBAAIA,CAAC,CAAC9C,KAAF,CAAQuZ,KAAR,EAAeC,GAAf,CAAJ,EAAyB,OAAO,IAAP;AACzB;AAHiC;AAAA;AAAA;AAAA;AAAA;;AAIlC,iBAAO,KAAP;AACA,SALD;AAzFmB;;AAwFpB,WAAK,IAAID,KAAT,IAAkB,OAAKvZ,KAAvB,EAA8B;AAAA,cAArBuZ,KAAqB;AAO7B;;AAED,UAAI3X,KAAK,aAAO9G,WAAP,GAAoB,aAApB,EAAT;;AAjGoB,kDAkGH8G,KAlGG;AAAA;;AAAA;AAAA;AAAA,cAkGXJ,IAlGW;AAmGnB5C,UAAAA,MAAM,CAACC,cAAP,iCAA4B2C,IAA5B,EAAkC;AACjC1C,YAAAA,GADiC,iBAC3B;AACL,kBAAIhF,GAAG,GAAGuE,KAAK,CAAC,MAAMmD,IAAP,CAAf;AACA,kBAAIiC,CAAC,GAAGpF,KAAK,CAAC/B,MAAN,GAAe,CAAvB;;AACA,kBAAIxC,GAAG,KAAKsC,SAAR,IAAqB,KAAKR,CAAL,CAAOE,KAA5B,IAAqC,CAACuC,KAAK,CAACma,kBAAhD,EAAoE;AACnE,oBAAItC,QAAM,GAAG,KAAKta,CAAL,CAAOE,KAAP,CAAaiB,MAAb,CAAoBsB,KAAK,CAAC6X,MAA1B,CAAb;;AACA,oBAAIA,QAAJ,EAAY;AACXpc,kBAAAA,GAAG,GAAGoc,QAAM,CAAC1U,IAAD,CAAZ;AACAiC,kBAAAA,CAAC,GAAGyS,QAAM,CAAC5Z,MAAP,GAAgB,CAApB;AACA;AACD;;AACD,qBAAOxC,GAAP;AACA,aAZgC;AAajCmF,YAAAA,GAbiC,eAa7BnF,GAb6B,EAaxB;AACRuE,cAAAA,KAAK,CAAC,MAAMmD,IAAP,CAAL,GAAoB1H,GAApB,CADQ,CAGR;;AACA,mBAAK,IAAI2J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpF,KAAK,CAAC/B,MAA1B,EAAkCmH,CAAC,EAAnC,EAAuC;AACtC,oBAAIX,CAAC,GAAGzE,KAAK,CAACoF,CAAD,CAAb;AACA,oBAAIpI,CAAC,GAAGvB,GAAR;AACA,oBAAI,OAAOA,GAAP,IAAc,UAAlB,EAA8BuB,CAAC,GAAGvB,GAAG,CAAC2J,CAAD,CAAP;AAC9BX,gBAAAA,CAAC,CAACtB,IAAD,CAAD,GAAUnG,CAAV;AACA;AACD;AAvBgC,WAAlC;AAnGmB;;AAkGpB,+DAAwB;AAAA;AA0BvB;AA5HmB;AAAA;AAAA;AAAA;AAAA;;AA8HpB,aAAKiG,GAAL,GAAWnJ,KAAK,CAACuG,YAAN,CAAmBC,IAAnB,CAAwBxG,KAAxB,CAAX;AACA,aAAKiH,MAAL,GAAc,EAAd;AAEA,UAAIqa,QAAQ,GAAG;AAAEnY,QAAAA,GAAG,EAAE,CAAC,GAAD,EAAM,GAAN,CAAP;AAAmBlC,QAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN;AAA3B,OAAf;;AAjIoB,mCAkIXsa,OAlIW;AAAA,qDAmIFD,QAAQ,CAACC,OAAD,CAnIN;AAAA;;AAAA;AAAA;AAAA,gBAmIVlY,IAnIU;AAoIlB5C,YAAAA,MAAM,CAACC,cAAP,CAAsB,OAAK6a,OAAL,CAAtB,EAAqClY,IAArC,EAA2C;AAC1C1C,cAAAA,GAD0C,iBACpC;AACL,oBAAIhF,GAAG,GAAGuE,KAAK,CAACqb,OAAD,CAAL,CAAe,MAAMlY,IAArB,CAAV;AACA,oBAAIiC,CAAC,GAAGpF,KAAK,CAAC/B,MAAN,GAAe,CAAvB;;AACA,oBAAIxC,GAAG,KAAKsC,SAAR,IAAqBiC,KAAK,CAACzC,CAAN,CAAQE,KAA7B,IAAsC,CAACuC,KAAK,CAACma,kBAAjD,EAAqE;AACpE,sBAAItC,QAAM,GAAG7X,KAAK,CAACzC,CAAN,CAAQE,KAAR,CAAciB,MAAd,CAAqBsB,KAAK,CAAC6X,MAA3B,CAAb;;AACA,sBAAIA,QAAJ,EAAY;AACXpc,oBAAAA,GAAG,GAAGoc,QAAM,CAACwD,OAAD,CAAN,CAAgBlY,IAAhB,CAAN;AACAiC,oBAAAA,CAAC,GAAGyS,QAAM,CAAC5Z,MAAP,GAAgB,CAApB;AACA;AACD;;AACD,uBAAOxC,GAAP;AACA,eAZyC;AAa1CmF,cAAAA,GAb0C,eAatCnF,GAbsC,EAajC;AACRuE,gBAAAA,KAAK,CAACqb,OAAD,CAAL,CAAe,MAAMlY,IAArB,IAA6B1H,GAA7B,CADQ,CAGR;;AACA,qBAAK,IAAI2J,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpF,KAAK,CAAC/B,MAA1B,EAAkCmH,CAAC,EAAnC,EAAuC;AACtC,sBAAIX,CAAC,GAAGzE,KAAK,CAACoF,CAAD,CAAb;AACA,sBAAIpI,CAAC,GAAGvB,GAAR;AACA,sBAAI,OAAOA,GAAP,IAAc,UAAlB,EAA8BuB,CAAC,GAAGvB,GAAG,CAAC2J,CAAD,CAAP;AAC9BX,kBAAAA,CAAC,CAAC4W,OAAD,CAAD,CAAWlY,IAAX,IAAmBnG,CAAnB;AACA;AACD;AAvByC,aAA3C;AApIkB;;AAmInB,oEAAoC;AAAA;AA0BnC;AA7JkB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkIpB,WAAK,IAAIqe,OAAT,IAAoBD,QAApB,EAA8B;AAAA,eAArBC,OAAqB;AA4B7B;;AAED,aAAKC,UAAL,GAAkB,CAAlB;AAhKoB;AAiKpB;AAED;AACF;AACA;AACA;AACA;AACA;;;AAhiI0D;AAAA;AAAA,WAiiIxD,eAAU;AACT,eAAO,KAAK9Z,UAAZ;AACA,OAniIuD;AAAA,WAoiIxD,aAAQ/F,GAAR,EAAa;AACZ,aAAK6F,MAAL,CAAY7F,GAAZ;;AADY,qDAEE,IAFF;AAAA;;AAAA;AAEZ;AAAA,gBAASgJ,CAAT;AAAoBA,YAAAA,CAAC,CAACuF,SAAF,CAAYvO,GAAZ;AAApB;AAFY;AAAA;AAAA;AAAA;AAAA;AAGZ;AACD;AACF;AACA;AACA;AACA;AACA;;AA7iI0D;AAAA;AAAA,WA8iIxD,eAAgB;AACf,eAAO,KAAK+F,UAAZ;AACA,OAhjIuD;AAAA,WAijIxD,aAAc/F,GAAd,EAAmB;AAClB,aAAKqC,GAAL,GAAWrC,GAAX;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AA1jI0D;AAAA;AAAA,WA2jIxD,eAAW;AACV,eAAO,KAAKoD,UAAZ;AACA;AACD;AACF;AACA;AACA;AACA;AACA;;AAnkI0D;AAAA;AAAA,WAokIxD,eAAU;AACT,eAAO,KAAK2C,UAAL,CAAgBmM,UAAvB;AACA,OAtkIuD;AAAA,WAukIxD,aAAQlS,GAAR,EAAa;AACZ,aAAKqC,GAAL,GAAWrC,GAAX;AACA;AACD;AACF;AACA;AACA;AACA;AACA;;AA/kI0D;AAAA;AAAA,WAglIxD,eAAY;AACX,eAAO,KAAK+F,UAAL,CAAgBmM,UAAvB;AACA,OAllIuD;AAAA,WAmlIxD,aAAUlS,GAAV,EAAe;AACd,aAAKqC,GAAL,GAAWrC,GAAX;AACA;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;AA5lI0D;AAAA;AAAA,WA6lIxD,aAAWA,GAAX,EAAgB;AACf,YAAI8f,IAAI,GAAG9f,GAAG,GAAG,KAAKwC,MAAtB;AACA,YAAIud,SAAS,GAAGD,IAAI,GAAG,CAAvB;AACAA,QAAAA,IAAI,GAAG7f,IAAI,CAACC,GAAL,CAAS4f,IAAT,CAAP;;AACA,aAAK,IAAInW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmW,IAApB,EAA0BnW,CAAC,EAA3B,EAA+B;AAC9B,cAAIoW,SAAJ,EAAe,KAAKC,GAAL,CAAS,IAAI,KAAKte,MAAT,EAAT,EAAf,KACK,KAAK,KAAKc,MAAL,GAAc,CAAnB,EAAsBkS,MAAtB;AACL;AACD;AArmIuD;AAAA;AAAA,aAumIxD,yBAAgB;AACf,YAAIjV,CAAC,GAAG,CAAR;AACA,YAAIC,CAAC,GAAG,CAAR;;AAFe,qDAGD,IAHC;AAAA;;AAAA;AAGf,oEAAoB;AAAA,gBAAXsJ,CAAW;AACnBvJ,YAAAA,CAAC,IAAIuJ,CAAC,CAACvJ,CAAP;AACAC,YAAAA,CAAC,IAAIsJ,CAAC,CAACtJ,CAAP;AACA;AANc;AAAA;AAAA;AAAA;AAAA;;AAOf,aAAKugB,QAAL,GAAgB;AAAExgB,UAAAA,CAAC,EAAEA,CAAC,GAAG,KAAK+C,MAAd;AAAsB9C,UAAAA,CAAC,EAAEA,CAAC,GAAG,KAAK8C;AAAlC,SAAhB;AACA,eAAO,KAAKyd,QAAZ;AACA;AAhnIuD;AAAA;AAAA,aAknIxD,sCAA6B;AAAA,qDACd,IADc;AAAA;;AAAA;AAC5B,oEAAoB;AAAA,gBAAXjX,CAAW;AACnBA,YAAAA,CAAC,CAACkX,YAAF,GAAiB;AAChBzgB,cAAAA,CAAC,EAAEuJ,CAAC,CAACvJ,CAAF,GAAM,KAAKwgB,QAAL,CAAcxgB,CADP;AAEhBC,cAAAA,CAAC,EAAEsJ,CAAC,CAACtJ,CAAF,GAAM,KAAKugB,QAAL,CAAcvgB;AAFP,aAAjB;AAIA;AAN2B;AAAA;AAAA;AAAA;AAAA;AAO5B;AAznIuD;AAAA;AAAA,aA2nIxD,cAAKqa,CAAL,EAAQC,IAAR,EAAc;AAAA;;AACb,kBAAAA,IAAI,UAAJ,iCAAAA,IAAI,GAAK,KAAK,KAAKxa,QAAL,GAAgB,GAA9B;;AADa,qDAEC,IAFD;AAAA;;AAAA;AAEb,oEAAoB;AAAA,gBAAXwJ,CAAW;AACnBA,YAAAA,CAAC,CAACmX,IAAF,CAAOpG,CAAP,EAAUC,IAAV;AACA;AAJY;AAAA;AAAA;AAAA;AAAA;AAKb;AAhoIuD;AAAA;AAAA,aAkoIxD,wBAAewB,MAAf,EAAuBC,QAAvB,EAAiC;AAChC,YAAI,CAACD,MAAL,EAAa;AACZ,gBAAM,IAAI5Y,aAAJ,CAAkB,eAAlB,EAAmC,CAAnC,CAAN;AACA;;AACD,YAAI,EAAE4Y,MAAM,YAAY9Z,MAApB,KAA+B,EAAE8Z,MAAM,YAAYjZ,KAApB,CAAnC,EAA+D;AAC9D,gBAAM,IAAIK,aAAJ,CAAkB,eAAlB,EAAmC,CAAnC,EAAsC,CAAC4Y,MAAD,CAAtC,CAAN;AACA;;AACD,YAAIC,QAAQ,IAAI,OAAOA,QAAP,IAAmB,UAAnC,EAA+C;AAC9C,gBAAM,IAAI7Y,aAAJ,CAAkB,eAAlB,EAAmC,CAAnC,EAAsC,CAAC6Y,QAAD,CAAtC,CAAN;AACA;AACD;AA5oIuD;AAAA;AAAA,aA8oIxD,iBAAQD,MAAR,EAAgBC,QAAhB,EAA0B;AACzB,eAAO,KAAKC,QAAL,CAAcF,MAAd,EAAsBC,QAAtB,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5pI0D;AAAA;AAAA,aA6pIxD,kBAASD,MAAT,EAAiBC,QAAjB,EAA2B;AAC1B,aAAKE,cAAL,CAAoBH,MAApB,EAA4BC,QAA5B;;AACA,aAAK1X,SAAL,CAAeyX,MAAf,IAAyBC,QAAQ,IAAI,IAArC;AACA,eAAO,KAAKva,WAAL,CAAiB8D,GAAjB,CAAqBwW,MAArB,KAAgC,CAAvC;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5qI0D;AAAA;AAAA,aA6qIxD,mBAAUA,MAAV,EAAkBC,QAAlB,EAA4B;AAC3B,aAAKE,cAAL,CAAoBH,MAApB,EAA4BC,QAA5B;;AACA,aAAKzX,UAAL,CAAgBwX,MAAhB,IAA0BC,QAAQ,IAAI,IAAtC;;AACA,YAAIzb,GAAG,GAAG,KAAKkB,WAAL,CAAiB8D,GAAjB,CAAqBwW,MAArB,CAAV;;AACA,eAAOxb,GAAG,GAAG,CAAN,GAAUA,GAAV,GAAgB,CAAvB;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5rI0D;AAAA;AAAA,aA6rIxD,kBAASwb,MAAT,EAAiBC,QAAjB,EAA2B;AAC1B,aAAKE,cAAL,CAAoBH,MAApB,EAA4BC,QAA5B;;AACA,aAAKxX,SAAL,CAAeuX,MAAf,IAAyBC,QAAQ,IAAI,IAArC;AACA,eAAO,KAAKva,WAAL,CAAiB8D,GAAjB,CAAqBwW,MAArB,KAAgC,CAAC,CAAxC;AACA;AAjsIuD;AAAA;AAAA,aAmsIxD,wBAAeA,MAAf,EAAuBC,QAAvB,EAAiC;AAChC,YAAI,CAACD,MAAL,EAAa;AACZ,gBAAM,IAAI5Y,aAAJ,CAAkB,eAAlB,EAAmC,CAAnC,CAAN;AACA;;AACD,YAAI,EAAE4Y,MAAM,YAAY9Z,MAApB,KAA+B,EAAE8Z,MAAM,YAAYjZ,KAApB,CAAnC,EAA+D;AAC9D,gBAAM,IAAIK,aAAJ,CAAkB,eAAlB,EAAmC,CAAnC,EAAsC,CAAC4Y,MAAD,CAAtC,CAAN;AACA;;AACD,YAAIC,QAAQ,IAAI,OAAOA,QAAP,IAAmB,UAAnC,EAA+C;AAC9C,gBAAM,IAAI7Y,aAAJ,CAAkB,eAAlB,EAAmC,CAAnC,EAAsC,CAAC6Y,QAAD,CAAtC,CAAN;AACA;;AACD,YAAI,CAAC,KAAKhT,YAAV,EAAwB;AAAA,uDACT,IADS;AAAA;;AAAA;AACvB,sEAAoB;AAAA,kBAAXO,CAAW;AACnB,kBAAI,CAACA,CAAC,CAACP,YAAP,EAAqBO,CAAC,CAACN,cAAF;AACrB;AAHsB;AAAA;AAAA;AAAA;AAAA;;AAIvB,eAAKD,YAAL,GAAoB,IAApB;AACA;;AACD,YAAI+S,MAAM,YAAY9Z,MAAtB,EAA8B;AAC7B,cAAI,CAAC8Z,MAAM,CAAC/S,YAAZ,EAA0B+S,MAAM,CAAC9S,cAAP;AAC1B,SAFD,MAEO,IAAI8S,MAAM,YAAYjZ,KAAtB,EAA6B;AACnC,cAAI,CAACiZ,MAAM,CAAC/S,YAAZ,EAA0B;AAAA,yDACX+S,MADW;AAAA;;AAAA;AACzB,wEAAsB;AAAA,oBAAbxS,EAAa;AACrB,oBAAI,CAACA,EAAC,CAACP,YAAP,EAAqBO,EAAC,CAACN,cAAF;AACrB;AAHwB;AAAA;AAAA;AAAA;AAAA;;AAIzB8S,YAAAA,MAAM,CAAC/S,YAAP,GAAsB,IAAtB;AACA;AACD;;AACD,aAAKvE,QAAL,CAAcsX,MAAd,IAAwB,IAAxB;AACA;AA9tIuD;AAAA;AAAA,aAguIxD,iBAAQA,MAAR,EAAgBC,QAAhB,EAA0B;AACzB,eAAO,KAAKG,QAAL,CAAcJ,MAAd,EAAsBC,QAAtB,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9uI0D;AAAA;AAAA,aA+uIxD,kBAASD,MAAT,EAAiBC,QAAjB,EAA2B;AAC1B,aAAKI,cAAL,CAAoBL,MAApB,EAA4BC,QAA5B;;AACA,aAAKtX,SAAL,CAAeqX,MAAf,IAAyBC,QAAQ,IAAI,IAArC;AACA,eAAO,KAAKta,YAAL,CAAkB6D,GAAlB,CAAsBwW,MAAtB,KAAiC,CAAxC;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9vI0D;AAAA;AAAA,aA+vIxD,qBAAYA,MAAZ,EAAoBC,QAApB,EAA8B;AAC7B,aAAKI,cAAL,CAAoBL,MAApB,EAA4BC,QAA5B;;AACA,aAAKrX,YAAL,CAAkBoX,MAAlB,IAA4BC,QAAQ,IAAI,IAAxC;;AACA,YAAIzb,GAAG,GAAG,KAAKmB,YAAL,CAAkB6D,GAAlB,CAAsBwW,MAAtB,CAAV;;AACA,eAAOxb,GAAG,GAAG,CAAN,GAAUA,GAAV,GAAgB,CAAvB;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9wI0D;AAAA;AAAA,aA+wIxD,oBAAWwb,MAAX,EAAmBC,QAAnB,EAA6B;AAC5B,aAAKI,cAAL,CAAoBL,MAApB,EAA4BC,QAA5B;;AACA,aAAKpX,WAAL,CAAiBmX,MAAjB,IAA2BC,QAAQ,IAAI,IAAvC;AACA,eAAO,KAAKta,YAAL,CAAkB6D,GAAlB,CAAsBwW,MAAtB,KAAiC,CAAC,CAAzC;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7xI0D;AAAA;AAAA,aA8xIxD,oBAAWlD,WAAX,EAAwBC,WAAxB,EAAqC;AAAA,qDACtB,IADsB;AAAA;;AAAA;AACpC,oEAAoB;AAAA,gBAAXvP,CAAW;AACnBA,YAAAA,CAAC,CAACwP,UAAF,CAAaF,WAAb,EAA0BC,WAA1B;AACA;AAHmC;AAAA;AAAA;AAAA;AAAA;AAIpC;AAED;AACF;AACA;;AAtyI0D;AAAA;AAAA,aAuyIxD,cAAKW,QAAL,EAAenH,SAAf,EAA0BZ,KAA1B,EAAiC;AAChC,YAAIiP,SAAS,GAAG,EAAhB;;AADgC,qDAElB,IAFkB;AAAA;;AAAA;AAEhC,oEAAoB;AAAA,gBAAXpX,CAAW;AACnBoX,YAAAA,SAAS,CAACjd,IAAV,CAAe6F,CAAC,CAACmT,IAAF,CAAOjD,QAAP,EAAiBnH,SAAjB,EAA4BZ,KAA5B,CAAf;AACA;AAJ+B;AAAA;AAAA;AAAA;AAAA;;AAKhC,eAAO4J,OAAO,CAACsF,GAAR,CAAYD,SAAZ,CAAP;AACA;AAED;AACF;AACA;;AAjzI0D;AAAA;AAAA,aAkzIxD,gBAAO3gB,CAAP,EAAUC,CAAV,EAAayR,KAAb,EAAoB;AACnB,YAAI,OAAO1R,CAAP,IAAY,QAAhB,EAA0B;AACzB,cAAIqZ,GAAG,GAAGrZ,CAAV;AACA,cAAIqZ,GAAG,IAAI,KAAKhX,CAAL,CAAOoE,KAAd,IAAuB,CAAC,KAAKpE,CAAL,CAAOoE,KAAP,CAAaiR,MAAzC,EAAiD;AACjDhG,UAAAA,KAAK,GAAGzR,CAAR;AACAA,UAAAA,CAAC,GAAGoZ,GAAG,CAACpZ,CAAR;AACAD,UAAAA,CAAC,GAAGqZ,GAAG,CAACrZ,CAAR;AACA;;AACD,YAAIwgB,QAAQ,GAAG,KAAKK,aAAL,EAAf;AACA,YAAIF,SAAS,GAAG,EAAhB;;AATmB,qDAUL,IAVK;AAAA;;AAAA;AAUnB,oEAAoB;AAAA,gBAAXpX,CAAW;AACnB,gBAAIuX,IAAI,GAAG;AACV9gB,cAAAA,CAAC,EAAEuJ,CAAC,CAACvJ,CAAF,GAAMwgB,QAAQ,CAACxgB,CAAf,GAAmBA,CADZ;AAEVC,cAAAA,CAAC,EAAEsJ,CAAC,CAACtJ,CAAF,GAAMugB,QAAQ,CAACvgB,CAAf,GAAmBA;AAFZ,aAAX;AAIA0gB,YAAAA,SAAS,CAACjd,IAAV,CAAe6F,CAAC,CAACoQ,MAAF,CAASmH,IAAI,CAAC9gB,CAAd,EAAiB8gB,IAAI,CAAC7gB,CAAtB,EAAyByR,KAAzB,CAAf;AACA;AAhBkB;AAAA;AAAA;AAAA;AAAA;;AAiBnB,eAAO4J,OAAO,CAACsF,GAAR,CAAYD,SAAZ,CAAP;AACA;AAED;AACF;AACA;;AAx0I0D;AAAA;AAAA,aAy0IxD,qBAAY3gB,CAAZ,EAAeC,CAAf,EAAkBmZ,QAAlB,EAA4B;AAC3B,YAAI,OAAOpZ,CAAP,IAAY,QAAhB,EAA0B;AACzB,cAAIqZ,GAAG,GAAGrZ,CAAV;AACA,cAAIqZ,GAAG,IAAI,KAAKhX,CAAL,CAAOoE,KAAd,IAAuB,CAAC,KAAKpE,CAAL,CAAOoE,KAAP,CAAaiR,MAAzC,EAAiD;AACjD0B,UAAAA,QAAQ,GAAGnZ,CAAX;AACAA,UAAAA,CAAC,GAAGoZ,GAAG,CAACpZ,CAAR;AACAD,UAAAA,CAAC,GAAGqZ,GAAG,CAACrZ,CAAR;AACA;;AACD,YAAIA,CAAC,KAAK6C,SAAN,IAAmB5C,CAAC,KAAK4C,SAA7B,EAAwC;AACxC,aAAKge,aAAL;;AAT2B,qDAUb,IAVa;AAAA;;AAAA;AAU3B,oEAAoB;AAAA,gBAAXtX,CAAW;AACnB,gBAAIA,CAAC,CAACkX,YAAF,KAAmB5d,SAAvB,EAAkC,KAAKke,0BAAL;AAClC,gBAAID,IAAI,GAAG;AACV9gB,cAAAA,CAAC,EAAEuJ,CAAC,CAACkX,YAAF,CAAezgB,CAAf,GAAmBA,CADZ;AAEVC,cAAAA,CAAC,EAAEsJ,CAAC,CAACkX,YAAF,CAAexgB,CAAf,GAAmBA;AAFZ,aAAX;AAIAsJ,YAAAA,CAAC,CAACiQ,WAAF,CAAcsH,IAAI,CAAC9gB,CAAnB,EAAsB8gB,IAAI,CAAC7gB,CAA3B,EAA8BmZ,QAA9B;AACA;AAjB0B;AAAA;AAAA;AAAA;AAAA;AAkB3B;AAED;AACF;AACA;;AA/1I0D;AAAA;AAAA,aAg2IxD,kBAASpZ,CAAT,EAAYC,CAAZ,EAAemZ,QAAf,EAAyB;AACxB,YAAI,OAAOpZ,CAAP,IAAY,QAAhB,EAA0B;AACzB,cAAIqZ,GAAG,GAAGrZ,CAAV;AACA,cAAIqZ,GAAG,IAAI,KAAKhX,CAAL,CAAOoE,KAAd,IAAuB,CAAC,KAAKpE,CAAL,CAAOoE,KAAP,CAAaiR,MAAzC,EAAiD;AACjD0B,UAAAA,QAAQ,GAAGnZ,CAAX;AACAA,UAAAA,CAAC,GAAGoZ,GAAG,CAACpZ,CAAR;AACAD,UAAAA,CAAC,GAAGqZ,GAAG,CAACrZ,CAAR;AACA;;AACD,YAAIA,CAAC,KAAK6C,SAAN,IAAmB5C,CAAC,KAAK4C,SAA7B,EAAwC;AACxC,aAAKge,aAAL;;AATwB,qDAUV,IAVU;AAAA;;AAAA;AAUxB,oEAAoB;AAAA,gBAAXtX,CAAW;AACnB,gBAAIA,CAAC,CAACkX,YAAF,KAAmB5d,SAAvB,EAAkC,KAAKke,0BAAL;AAClC,gBAAID,IAAI,GAAG;AACV9gB,cAAAA,CAAC,EAAEuJ,CAAC,CAACkX,YAAF,CAAezgB,CAAf,GAAmBA,CADZ;AAEVC,cAAAA,CAAC,EAAEsJ,CAAC,CAACkX,YAAF,CAAexgB,CAAf,GAAmBA;AAFZ,aAAX;AAIAsJ,YAAAA,CAAC,CAACyX,QAAF,CAAWF,IAAI,CAAC9gB,CAAhB,EAAmB8gB,IAAI,CAAC7gB,CAAxB,EAA2BmZ,QAA3B;AACA;AAjBuB;AAAA;AAAA;AAAA;AAAA;AAkBxB;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AA33I0D;AAAA;AAAA,aA43IxD,eAAM6H,MAAN,EAAc;AACb,YAAI,KAAKzF,KAAL,IAAc,CAAlB,EAAqB1c,OAAO,CAACsR,IAAR,CAAa,qEAAb;AACrB,YAAI,CAAC,KAAKoQ,QAAV,EAAoB,KAAKK,aAAL;AACpB,aAAKT,UAAL,IAAmBa,MAAnB;AACA,YAAI9M,KAAK,GAAG,KAAKiM,UAAjB;;AAJa,qDAKC,IALD;AAAA;;AAAA;AAKb,oEAAoB;AAAA,gBAAX7W,CAAW;AACnB,gBAAIA,CAAC,CAACkX,YAAF,KAAmB5d,SAAvB,EAAkC,KAAKke,0BAAL;AAClC,gBAAI/gB,CAAC,GAAGuJ,CAAC,CAACkX,YAAF,CAAezgB,CAAvB;AACA,gBAAIC,CAAC,GAAGsJ,CAAC,CAACkX,YAAF,CAAexgB,CAAvB;AACA,gBAAIihB,EAAE,GAAGlhB,CAAC,GAAG,KAAKqC,CAAL,CAAOmI,GAAP,CAAW2J,KAAX,CAAJ,GAAwBlU,CAAC,GAAG,KAAKoC,CAAL,CAAOoI,GAAP,CAAW0J,KAAX,CAArC;AACA,gBAAIgN,EAAE,GAAGnhB,CAAC,GAAG,KAAKqC,CAAL,CAAOoI,GAAP,CAAW0J,KAAX,CAAJ,GAAwBlU,CAAC,GAAG,KAAKoC,CAAL,CAAOmI,GAAP,CAAW2J,KAAX,CAArC;AACA+M,YAAAA,EAAE,IAAI,KAAKV,QAAL,CAAcxgB,CAApB;AACAmhB,YAAAA,EAAE,IAAI,KAAKX,QAAL,CAAcvgB,CAApB;AACAsJ,YAAAA,CAAC,CAACxB,GAAF,CAAM/H,CAAN,GAAU,CAACkhB,EAAE,GAAG3X,CAAC,CAACvJ,CAAR,IAAa,GAAb,GAAmBuJ,CAAC,CAACxJ,QAA/B;AACAwJ,YAAAA,CAAC,CAACxB,GAAF,CAAM9H,CAAN,GAAU,CAACkhB,EAAE,GAAG5X,CAAC,CAACtJ,CAAR,IAAa,GAAb,GAAmBsJ,CAAC,CAACxJ,QAA/B;AACA;AAfY;AAAA;AAAA;AAAA;AAAA;AAgBb;AAED;AACF;AACA;AACA;AACA;AACA;;AAn5I0D;AAAA;AAAA,aAo5IxD,aAAImK,CAAJ,EAAO;AACNpL,QAAAA,OAAO,CAACsR,IAAR,CAAa,kDAAb;AACA,eAAO,KAAKlG,CAAL,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;;AAv6I0D;AAAA;AAAA,aAw6IxD,kBAAS0B,MAAT,EAAiB;AAChB9M,QAAAA,OAAO,CAACsR,IAAR,CAAa,0EAAb;AACA,eAAO,KAAK1B,OAAL,CAAa9C,MAAb,IAAuB,CAAC,CAA/B;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AAn7I0D;AAAA;AAAA,aAo7IxD,cAAKrC,CAAL,EAAQ;AACP,YAAI,EAAEA,CAAC,YAAYtH,MAAf,CAAJ,EAA4B;AAC3B,gBAAM,IAAItD,KAAJ,CAAU,qCAAV,CAAN;AACA;;AAED,YAAI,KAAK+P,OAAL,CAAanF,CAAb,KAAmB,CAAC,CAAxB,EAA2B;AAC1B,0EAAWA,CAAX;;AACA,cAAI,KAAKoT,MAAT,EAAiB,KAAKta,CAAL,CAAOE,KAAP,CAAaiB,MAAb,CAAoB,KAAKmZ,MAAzB,EAAiCjZ,IAAjC,CAAsC6F,CAAtC;AACjBA,UAAAA,CAAC,CAAC/F,MAAF,CAASE,IAAT,CAAc,IAAd;AACA,iBAAO,IAAP;AACA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;AAt8I0D;AAAA;AAAA,aAu8IxD,aAAI6F,CAAJ,EAAO;AACN,aAAK7F,IAAL,CAAU6F,CAAV;AACA;AAED;AACF;AACA;AACA;;AAEE;AACF;AACA;AACA;;AAn9I0D;AAAA;AAAA,aAo9IxD,gBAAO;AACN,eAAO,KAAKxG,MAAZ;AACA;AAED;AACF;AACA;AACA;AACA;;AA59I0D;AAAA;AAAA,aA69IxD,oBAAW;AACV,eAAO,MAAM,KAAKT,KAAlB;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7+I0D;AAAA;AAAA,aA8+IxD,cAAK8e,GAAL,EAAUC,MAAV,EAAkBvQ,IAAlB,EAAwBC,KAAxB,EAA+B8F,EAA/B,EAAmC;AAClC,YAAI/F,IAAI,KAAKjO,SAAb,EAAwB;AACvB,cAAIyZ,IAAI,GAAG8E,GAAX;AACAvK,UAAAA,EAAE,GAAGwK,MAAL;AACAD,UAAAA,GAAG,GAAGC,MAAM,GAAGvQ,IAAI,GAAGC,KAAK,GAAGuL,IAA9B;AACA;;AACD,YAAIta,KAAK,CAACof,GAAD,CAAL,IAAcpf,KAAK,CAACqf,MAAD,CAAnB,IAA+Brf,KAAK,CAAC8O,IAAD,CAApC,IAA8C9O,KAAK,CAAC+O,KAAD,CAAvD,EAAgE;AAC/D,gBAAM,IAAIuQ,SAAJ,CAAc,mDAAd,CAAN;AACA;;AACD,YAAIzK,EAAE,IAAI,OAAOA,EAAP,IAAa,UAAvB,EAAmC;AAClC,gBAAM,IAAIyK,SAAJ,CAAc,+CAAd,CAAN;AACA;;AAED,YAAIC,EAAE,GAAG,KAAKlf,CAAL,CAAOoV,MAAP,CAAczX,CAAd,GAAkB,KAAKqC,CAAL,CAAOE,KAAP,CAAawS,EAAb,GAAkB,KAAK1S,CAAL,CAAOoV,MAAP,CAAc+J,IAA3D;AACA,YAAIC,EAAE,GAAG,KAAKpf,CAAL,CAAOoV,MAAP,CAAcxX,CAAd,GAAkB,KAAKoC,CAAL,CAAOE,KAAP,CAAayS,EAAb,GAAkB,KAAK3S,CAAL,CAAOoV,MAAP,CAAc+J,IAA3D;AAEA,YAAIE,IAAI,GAAG,CAAC5Q,IAAD,GAAQyQ,EAAnB;AACA,YAAII,IAAI,GAAG,CAACP,GAAD,GAAOK,EAAlB;AACA,YAAIG,IAAI,GAAG,KAAKvf,CAAL,CAAO2D,KAAP,GAAe+K,KAAf,GAAuBwQ,EAAlC;AACA,YAAIM,IAAI,GAAG,KAAKxf,CAAL,CAAO6D,MAAP,GAAgBmb,MAAhB,GAAyBI,EAApC;;AAnBkC,qDAqBpB,IArBoB;AAAA;;AAAA;AAqBlC,oEAAoB;AAAA,gBAAXlY,CAAW;;AACnB,gBAAIA,CAAC,CAACvJ,CAAF,GAAM0hB,IAAN,IAAcnY,CAAC,CAACtJ,CAAF,GAAM0hB,IAApB,IAA4BpY,CAAC,CAACvJ,CAAF,GAAM4hB,IAAlC,IAA0CrY,CAAC,CAACtJ,CAAF,GAAM4hB,IAApD,EAA0D;AACzD,kBAAIhL,EAAJ,EAAQA,EAAE,CAACtN,CAAD,CAAF,CAAR,KACKA,CAAC,CAAC0L,MAAF;AACL;AACD;AA1BiC;AAAA;AAAA;AAAA;AAAA;AA2BlC;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArhJ0D;AAAA;AAAA,aAshJxD,gBAAO6M,IAAP,EAAa;AAAA;;AACZ,YAAIA,IAAI,KAAKjf,SAAb,EAAwB;AACvB,iBAAO,KAAKE,MAAL,GAAc,CAArB,EAAwB;AACvB,iBAAK,CAAL,EAAQkS,MAAR;AACA;;AACD;AACA;;AAED,YAAI8M,GAAJ;;AACA,YAAI,OAAOD,IAAP,IAAe,QAAnB,EAA6B;AAC5BC,UAAAA,GAAG,GAAGD,IAAN;AACA,SAFD,MAEO;AACN,eAAK,IAAI5X,CAAC,GAAG,KAAKnH,MAAL,GAAc,CAA3B,EAA8BmH,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AAC1C,gBAAI,KAAKA,CAAL,MAAY4X,IAAhB,EAAsB;AACrBC,cAAAA,GAAG,GAAG7X,CAAN;AACA;AACA;AACD;AACD;;AAED,YAAI6X,GAAG,KAAKlf,SAAZ,EAAuB;AACtB,cAAIgB,OAAO,GAAG,KAAKke,GAAL,CAAd;AACA,cAAIC,IAAI,GAAG,KAAKD,GAAL,EAAUve,MAAV,CAAiBye,SAAjB,CAA2B,UAAC9Z,CAAD;AAAA,mBAAOA,CAAC,CAAC7F,KAAF,IAAW,OAAI,CAACA,KAAvB;AAAA,WAA3B,CAAX;AACA,eAAKyf,GAAL,EAAUve,MAAV,CAAiBmL,MAAjB,CAAwBqT,IAAxB,EAA8B,CAA9B;AACA,eAAKrT,MAAL,CAAYoT,GAAZ,EAAiB,CAAjB;AAEA,iBAAOle,OAAP;AACA;;AACD,cAAM,IAAIlF,KAAJ,CAAU,2BAAV,CAAN;AACA;AAED;AACF;AACA;AACA;AACA;;AAzjJ0D;AAAA;AAAA,aA0jJxD,qBAAY;AACX,aAAKsW,MAAL;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AAnkJ0D;AAAA;AAAA,aAokJxD,oBAAW;AACV,YAAI,KAAKlS,MAAL,IAAe,CAAnB,EAAsB,OAAO,CAAP;AACtB,YAAI,KAAKA,MAAL,IAAe,CAAf,IAAoB,KAAK,CAAL,EAAQ+C,KAAR,KAAkBjD,SAA1C,EAAqD,OAAO,CAAP;AACrD,YAAIgH,GAAG,GAAG,KAAK,CAAL,EAAQ/D,KAAlB;;AAHU,qDAII,IAJJ;AAAA;;AAAA;AAIV,oEAAoB;AAAA,gBAAXyD,CAAW;AACnB,gBAAIA,CAAC,CAACzD,KAAF,GAAU+D,GAAd,EAAmBA,GAAG,GAAGN,CAAC,CAACzD,KAAR;AACnB;AANS;AAAA;AAAA;AAAA;AAAA;;AAOV,eAAO+D,GAAP;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AAnlJ0D;AAAA;AAAA,aAolJxD,oBAAW;AACV,YAAI,KAAK9G,MAAL,KAAgB,CAApB,EAAuB;AACtB,iBAAO,KAAP;AACA;;AAED,eAAO,KAAKmf,MAAL,CAAY,UAAUC,QAAV,EAAoBvW,MAApB,EAA4B;AAC9C,iBAAOpL,IAAI,CAACoJ,GAAL,CAASuY,QAAT,EAAmBvW,MAAM,CAACwW,KAA1B,CAAP;AACA,SAFM,EAEJxQ,QAFI,CAAP;AAGA;AAED;AACF;AACA;AACA;AACA;;AAlmJ0D;AAAA;AAAA,aAmmJxD,gBAAO;AACN,YAAIzJ,CAAC,sBAAO,IAAP,CAAL;;AACAA,QAAAA,CAAC,CAACka,IAAF,CAAO,UAACtgB,CAAD,EAAI4U,CAAJ;AAAA,iBAAU5U,CAAC,CAAC+D,KAAF,GAAU6Q,CAAC,CAAC7Q,KAAtB;AAAA,SAAP;;AACA,aAAK,IAAIoE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/B,CAAC,CAACpF,MAAtB,EAA8BmH,CAAC,EAA/B,EAAmC;AAClC,cAAI0B,MAAM,GAAGzD,CAAC,CAAC+B,CAAD,CAAd;;AACA,cAAI0B,MAAM,CAACxH,IAAP,KAAgB,CAApB,EAAuB;AACtBwH,YAAAA,MAAM,CAACqJ,MAAP;AACA9M,YAAAA,CAAC,CAACwG,MAAF,CAASzE,CAAT,EAAY,CAAZ;AACAA,YAAAA,CAAC;AACD;AACA;;AACD,cAAI0B,MAAM,CAACvH,OAAX,EAAoBuH,MAAM,CAACmL,IAAP;AACpB;AACD;AAhnJuD;AAAA;AAAA,aAknJxD,kBAAS;AACR,cAAM,IAAIpY,KAAJ,CAAU,uFAAV,CAAN;AACA;AApnJuD;;AAAA;AAAA,mCAu3HrC0E,KAv3HqC;AAunJzD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCpB,EAAAA,MAAM,CAAC3D,SAAP,CAAiBgkB,YAAjB,GACCxf,KAAK,CAACxE,SAAN,CAAgBgkB,YAAhB,GACArgB,MAAM,CAAC3D,SAAP,CAAiB8H,MAAjB,GACAtD,KAAK,CAACxE,SAAN,CAAgB8H,MAAhB,GACAnE,MAAM,CAAC3D,SAAP,CAAiBikB,QAAjB,GACAzf,KAAK,CAACxE,SAAN,CAAgBikB,QAAhB,GACAtgB,MAAM,CAAC3D,SAAP,CAAiBkkB,MAAjB,GACA1f,KAAK,CAACxE,SAAN,CAAgBkkB,MAAhB,GACC,YAAY;AACX,QAAI/f,IAAI,8BAAOC,SAAP,CAAR;AACA,QAAIyY,IAAJ,EAAUvY,GAAV;;AACA,QAAIH,IAAI,CAAC,CAAD,CAAJ,YAAmBQ,eAAvB,EAAwC;AACvCL,MAAAA,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAV;AACA0Y,MAAAA,IAAI,GAAGvY,GAAG,CAACuY,IAAJ,IAAY,SAAnB;AACAvY,MAAAA,GAAG,CAACuY,IAAJ,GAAWA,IAAX;AACA,KAJD,MAIO,IAAI1Y,IAAI,CAAC,CAAD,CAAJ,YAAmBQ,eAAvB,EAAwC;AAC9CkY,MAAAA,IAAI,GAAG1Y,IAAI,CAAC,CAAD,CAAX;AACAG,MAAAA,GAAG,GAAGH,IAAI,CAAC,CAAD,CAAV;AACAG,MAAAA,GAAG,CAACuY,IAAJ,GAAWA,IAAX;AACA,KAJM,MAIA;AACNvY,MAAAA,GAAG,cAAOK,eAAP,GAAuB,IAAvB,4BAAgCR,IAAhC,GAAH;AACA0Y,MAAAA,IAAI,GAAGvY,GAAG,CAACuY,IAAX;AACA;;AACD,SAAKxX,UAAL,CAAgBwX,IAAhB,IAAwBvY,GAAxB;AACA,SAAK0D,UAAL,GAAkB1D,GAAlB,CAhBW,CAkBX;;AACA,QAAI,KAAKsG,oBAAL,KAA8BtG,GAAG,CAACV,CAAJ,IAAS,CAAT,IAAcU,GAAG,CAACT,CAAJ,IAAS,CAArD,CAAJ,EAA6D;AAC5D,WAAKD,CAAL,GAASU,GAAG,CAACV,CAAb;AACA,WAAKC,CAAL,GAASS,GAAG,CAACT,CAAb;AACA;;AACD,WAAOS,GAAP;AACA,GAhCH;AAkCA;AACD;AACA;AACA;AACA;;;AACCX,EAAAA,MAAM,CAAC3D,SAAP,CAAiBmkB,OAAjB,GACC3f,KAAK,CAACxE,SAAN,CAAgBmkB,OAAhB,GACAxgB,MAAM,CAAC3D,SAAP,CAAiBokB,aAAjB,GACA5f,KAAK,CAACxE,SAAN,CAAgBokB,aAAhB,GACAzgB,MAAM,CAAC3D,SAAP,CAAiBqkB,SAAjB,GACA7f,KAAK,CAACxE,SAAN,CAAgBqkB,SAAhB,GACA1gB,MAAM,CAAC3D,SAAP,CAAiBskB,OAAjB,GACA9f,KAAK,CAACxE,SAAN,CAAgBskB,OAAhB,GACC,YAAY;AACX,QAAIngB,IAAI,GAAGC,SAAX;AACA,QAAImgB,OAAJ;;AACA,QAAIpgB,IAAI,CAACM,MAAL,IAAe,CAAnB,EAAsB;AACrB8f,MAAAA,OAAO,GAAGpgB,IAAI,CAAC,CAAD,CAAd;AACA,KAFD,MAEO;AACN,WAAK4b,WAAL,GAAmB5b,IAAI,CAAC,CAAD,CAAvB;AACAogB,MAAAA,OAAO,GAAGpgB,IAAI,CAAC,CAAD,CAAd;AACA;;AACD,SAAK,IAAI0Y,IAAT,IAAiB0H,OAAjB,EAA0B;AACzB,UAAI3E,KAAK,GAAG2E,OAAO,CAAC1H,IAAD,CAAnB;AACA,WAAK/U,MAAL,CAAY+U,IAAZ,EAAkB+C,KAAlB;AACA;AACD,GArBH;AAuBA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AA1sJ0D,MA2sJnD4E,KA3sJmD;AAAA;;AAAA;;AA4sJxD,qBAAc;AAAA;;AAAA;;AAAA;;AACb,mCAAM,IAAI/jB,EAAE,CAACmB,IAAP,CAAY,CAAZ,EAAe,CAAf,CAAN,EAAyB,IAAzB;AACA,cAAKmC,CAAL,GAASzD,KAAT;AACA,cAAKoH,KAAL,GAAa,QAAK3D,CAAL,CAAO2D,KAApB;AACA,cAAKE,MAAL,GAAc,QAAK7D,CAAL,CAAO6D,MAArB;AACA,cAAK6c,OAAL,GAAe;AAAE/iB,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAAf;;AACA,UAAI6E,KAAK,kCAAT;;AACA,cAAKgY,MAAL,GAAc;AACb,YAAI9c,CAAJ,GAAQ;AACP,iBAAO,CAAC8E,KAAK,CAACie,OAAN,CAAc/iB,CAAtB;AACA,SAHY;;AAIb;AACJ;AACA;AACI,YAAIA,CAAJ,CAAMO,GAAN,EAAW;AACVuE,UAAAA,KAAK,CAACie,OAAN,CAAc/iB,CAAd,GAAkBO,GAAlB;;AACAuE,UAAAA,KAAK,CAACke,MAAN;AACA,SAVY;;AAWb,YAAI/iB,CAAJ,GAAQ;AACP,iBAAO,CAAC6E,KAAK,CAACie,OAAN,CAAc9iB,CAAtB;AACA,SAbY;;AAcb;AACJ;AACA;AACI,YAAIA,CAAJ,CAAMM,GAAN,EAAW;AACVuE,UAAAA,KAAK,CAACie,OAAN,CAAc9iB,CAAd,GAAkBM,GAAlB;;AACAuE,UAAAA,KAAK,CAACke,MAAN;AACA;;AApBY,OAAd;;AAsBA,cAAKA,MAAL;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACG,cAAKpf,mBAAL,GAA2B,KAA3B;AAEA,cAAKqf,QAAL,GAAgB,4BAAK5gB,CAAL,CAAOE,KAAP,oEAAc0gB,QAAd,KAA0B,CACzC;AACC;AACAtM,QAAAA,CAAC,EAAE,OAFJ;AAGCvH,QAAAA,CAAC,EAAE,SAHJ;AAIC5G,QAAAA,CAAC,EAAE,WAJJ;AAKC;AACA6L,QAAAA,CAAC,EAAE,SANJ;AAOClM,QAAAA,CAAC,EAAE,OAPJ;AAQChG,QAAAA,CAAC,EAAE,UARJ;AASC+H,QAAAA,CAAC,EAAE,MATJ;AASY;AACX;AACAyL,QAAAA,CAAC,EAAE,OAXJ;AAYCrU,QAAAA,CAAC,EAAE,UAZJ;AAaC4hB,QAAAA,CAAC,EAAE,SAbJ;AAcC7hB,QAAAA,CAAC,EAAE,OAdJ;AAeCiZ,QAAAA,CAAC,EAAE,QAfJ;AAgBCjY,QAAAA,CAAC,EAAE,MAhBJ;AAiBC;AACAoc,QAAAA,CAAC,EAAE,KAlBJ;AAmBClV,QAAAA,CAAC,EAAE,UAnBJ;AAoBCtI,QAAAA,CAAC,EAAE,WApBJ;AAqBCkiB,QAAAA,CAAC,EAAE,MArBJ;AAsBCrhB,QAAAA,CAAC,EAAE,QAtBJ;AAuBCI,QAAAA,CAAC,EAAE,OAvBJ;AAwBC;AACAjC,QAAAA,CAAC,EAAE,QAzBJ,CA0BC;;AA1BD,OADyC,CAA1C;AA+BA,cAAKuD,MAAL,GAAc,CAAC,QAAKnB,CAAL,CAAOoB,UAAR,CAAd;AACA,cAAK0b,aAAL,GAAqB,CAArB;AACA,cAAK3c,cAAL,GAAsB,CAAtB;AACA,cAAK4gB,QAAL,GAAgB,EAAhB;;AAEA,cAAKC,EAAL,CAAQ,eAAR,EAAyB,QAAKC,aAA9B;;AACA,cAAKD,EAAL,CAAQ,aAAR,EAAuB,QAAKE,WAA5B;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;;;AACG,cAAKC,OAAL,GAAe;AACd,YAAIxjB,CAAJ,GAAQ;AACP,iBAAO8E,KAAK,CAAC2e,SAAN,CAAgBzjB,CAAvB;AACA,SAHa;;AAId,YAAIA,CAAJ,CAAMO,GAAN,EAAW;AAAA,uDACIuE,KAAK,CAACzC,CAAN,CAAQoB,UADZ;AAAA;;AAAA;AACV,sEAAkC;AAAA,kBAAzB8F,CAAyB;AACjCA,cAAAA,CAAC,CAACma,QAAF,GAAa,KAAb;AACA;AAHS;AAAA;AAAA;AAAA;AAAA;;AAIV5e,UAAAA,KAAK,CAAC2e,SAAN,CAAgBzjB,CAAhB,GAAoB8E,KAAK,CAACzC,CAAN,CAAQ3B,KAAR,CAAcH,GAAG,IAAI,CAArB,CAApB;AACA,SATa;;AAUd,YAAIN,CAAJ,GAAQ;AACP,iBAAO6E,KAAK,CAAC2e,SAAN,CAAgBxjB,CAAvB;AACA,SAZa;;AAad,YAAIA,CAAJ,CAAMM,GAAN,EAAW;AAAA,uDACIuE,KAAK,CAACzC,CAAN,CAAQoB,UADZ;AAAA;;AAAA;AACV,sEAAkC;AAAA,kBAAzB8F,CAAyB;AACjCA,cAAAA,CAAC,CAACma,QAAF,GAAa,KAAb;AACA;AAHS;AAAA;AAAA;AAAA;AAAA;;AAIV5e,UAAAA,KAAK,CAAC2e,SAAN,CAAgBxjB,CAAhB,GAAoB6E,KAAK,CAACzC,CAAN,CAAQ3B,KAAR,CAAcH,GAAG,IAAI,CAArB,CAApB;AACA;;AAlBa,OAAf;AA1Fa;AA8Gb;;AA1zJuD;AAAA;AAAA,aA4zJxD,gBAAO2B,CAAP,EAAUC,CAAV,EAAa;AAAA;;AACZ,eAAAD,CAAC,UAAD,2BAAAA,CAAC,GAAK,KAAKG,CAAL,CAAO2D,KAAb;AACA,eAAA7D,CAAC,UAAD,2BAAAA,CAAC,GAAK,KAAKE,CAAL,CAAO6D,MAAb;AACA,aAAKsR,MAAL,GAAc;AACbxX,UAAAA,CAAC,EAAEkC,CAAC,GAAG,GAAJ,GAAU,KAAK4a,MAAL,CAAY9c,CADZ;AAEbC,UAAAA,CAAC,EAAEkC,CAAC,GAAG,GAAJ,GAAU,KAAK2a,MAAL,CAAY7c;AAFZ,SAAd;;AAIA,YAAI,KAAKoC,CAAL,CAAOoB,UAAP,CAAkB1D,QAAlB,IAA8B,CAAlC,EAAqC;AACpC,eAAKyX,MAAL,CAAYxX,CAAZ,IAAiB,KAAKqC,CAAL,CAAOoB,UAAP,CAAkB1D,QAAlB,GAA6B,GAA9C;AACA,eAAKyX,MAAL,CAAYvX,CAAZ,IAAiB,KAAKoC,CAAL,CAAOoB,UAAP,CAAkB1D,QAAlB,GAA6B,GAA9C;AACA;;AACD,aAAKgV,EAAL,GAAU7S,CAAC,GAAG,GAAd;AACA,aAAK8S,EAAL,GAAU7S,CAAC,GAAG,GAAd;AACA;AAz0JuD;AAAA;AAAA,aA20JxD,uBAAcwhB,OAAd,EAAuB;AACtB;AACA,YAAI5hB,CAAC,GAAG4hB,OAAO,CAACC,UAAhB;AACA,YAAIjN,CAAC,GAAGgN,OAAO,CAACE,UAAhB;AACA,YAAI5iB,CAAC,GAAG,aAAR;AACA,YAAIc,CAAC,CAAC+L,QAAF,EAAJ,EAAkB7M,CAAC,GAAG,cAAJ;AAClBc,QAAAA,CAAC,GAAGA,CAAC,CAAC+hB,MAAF,CAASlY,MAAb;AACA+K,QAAAA,CAAC,GAAGA,CAAC,CAACmN,MAAF,CAASlY,MAAb;AAEA7J,QAAAA,CAAC,CAACd,CAAD,CAAD,CAAKyE,GAAL,CAASiR,CAAT,EAAY,CAAZ;AACAA,QAAAA,CAAC,CAAC1V,CAAD,CAAD,CAAKyE,GAAL,CAAS3D,CAAT,EAAY,CAAZ;;AAVsB,qDAYR4U,CAAC,CAACnT,MAZM;AAAA;;AAAA;AAYtB,oEAAwB;AAAA,gBAAf2E,CAAe;AACvBA,YAAAA,CAAC,CAAClH,CAAD,CAAD,CAAKyE,GAAL,CAAS3D,CAAT,EAAYoG,CAAC,CAAClH,CAAD,CAAD,CAAKsE,GAAL,CAASxD,CAAT,KAAe,CAA3B;AACAA,YAAAA,CAAC,CAACd,CAAD,CAAD,CAAKyE,GAAL,CAASyC,CAAT,EAAYpG,CAAC,CAACd,CAAD,CAAD,CAAKsE,GAAL,CAAS4C,CAAT,KAAe,CAA3B;AACA;AAfqB;AAAA;AAAA;AAAA;AAAA;;AAAA,qDAiBRpG,CAAC,CAACyB,MAjBM;AAAA;;AAAA;AAiBtB,oEAAwB;AAAA,gBAAf2E,GAAe;;AACvBA,YAAAA,GAAC,CAAClH,CAAD,CAAD,CAAKyE,GAAL,CAASiR,CAAT,EAAYxO,GAAC,CAAClH,CAAD,CAAD,CAAKsE,GAAL,CAASoR,CAAT,KAAe,CAA3B;;AACAA,YAAAA,CAAC,CAAC1V,CAAD,CAAD,CAAKyE,GAAL,CAASyC,GAAT,EAAYwO,CAAC,CAAC1V,CAAD,CAAD,CAAKsE,GAAL,CAAS4C,GAAT,KAAe,CAA3B;;AAFuB,yDAGRwO,CAAC,CAACnT,MAHM;AAAA;;AAAA;AAGvB,wEAAyB;AAAA,oBAAhBugB,EAAgB;;AACxB5b,gBAAAA,GAAC,CAAClH,CAAD,CAAD,CAAKyE,GAAL,CAASqe,EAAT,EAAa5b,GAAC,CAAClH,CAAD,CAAD,CAAKsE,GAAL,CAASwe,EAAT,KAAgB,CAA7B;;AACAA,gBAAAA,EAAE,CAAC9iB,CAAD,CAAF,CAAMyE,GAAN,CAAUyC,GAAV,EAAa4b,EAAE,CAAC9iB,CAAD,CAAF,CAAMsE,GAAN,CAAU4C,GAAV,KAAgB,CAA7B;AACA;AANsB;AAAA;AAAA;AAAA;AAAA;AAOvB;AAxBqB;AAAA;AAAA;AAAA;AAAA;AAyBtB;AAp2JuD;AAAA;AAAA,aAs2JxD,qBAAYwb,OAAZ,EAAqB;AACpB,YAAI5hB,CAAC,GAAG4hB,OAAO,CAACC,UAAhB;AACA,YAAIjN,CAAC,GAAGgN,OAAO,CAACE,UAAhB;AACA,YAAInN,WAAW,GAAG,aAAlB;AACA,YAAI3U,CAAC,CAAC+L,QAAF,EAAJ,EAAkB4I,WAAW,GAAG,cAAd;AAClB3U,QAAAA,CAAC,GAAGA,CAAC,CAAC+hB,MAAF,CAASlY,MAAb;AACA+K,QAAAA,CAAC,GAAGA,CAAC,CAACmN,MAAF,CAASlY,MAAb;AAEA7J,QAAAA,CAAC,CAAC2U,WAAD,CAAD,CAAehR,GAAf,CAAmBiR,CAAnB,EAAsB,CAAC,CAAvB;AACAA,QAAAA,CAAC,CAACD,WAAD,CAAD,CAAehR,GAAf,CAAmB3D,CAAnB,EAAsB,CAAC,CAAvB;;AAToB,qDAWN4U,CAAC,CAACnT,MAXI;AAAA;;AAAA;AAWpB,oEAAwB;AAAA,gBAAf2E,CAAe;AACvB,gBAAI6b,SAAS,GAAG,KAAhB;;AADuB,yDAET7b,CAFS;AAAA;;AAAA;AAEvB,wEAAiB;AAAA,oBAARoB,CAAQ;;AAChB,oBAAIA,CAAC,CAACmN,WAAD,CAAD,CAAenR,GAAf,CAAmBxD,CAAnB,KAAyB,CAA7B,EAAgC;AAC/BiiB,kBAAAA,SAAS,GAAG,IAAZ;AACA;AACA;AACD;AAPsB;AAAA;AAAA;AAAA;AAAA;;AAQvB,gBAAI,CAACA,SAAL,EAAgB;AACf7b,cAAAA,CAAC,CAACuO,WAAD,CAAD,CAAehR,GAAf,CAAmB3D,CAAnB,EAAsB,CAAC,CAAvB;AACAA,cAAAA,CAAC,CAAC2U,WAAD,CAAD,CAAehR,GAAf,CAAmByC,CAAnB,EAAsB,CAAC,CAAvB;AACA;AACD;AAvBmB;AAAA;AAAA;AAAA;AAAA;;AAAA,qDAyBNpG,CAAC,CAACyB,MAzBI;AAAA;;AAAA;AAyBpB,oEAAwB;AAAA,gBAAf2E,GAAe;AACvB,gBAAI6b,UAAS,GAAG,KAAhB;;AADuB,yDAET7b,GAFS;AAAA;;AAAA;AAEvB,wEAAiB;AAAA,oBAARoB,GAAQ;;AAChB,oBAAIA,GAAC,CAACmN,WAAD,CAAD,CAAenR,GAAf,CAAmBoR,CAAnB,KAAyB,CAA7B,EAAgC;AAC/BqN,kBAAAA,UAAS,GAAG,IAAZ;AACA;AACA;AACD;AAPsB;AAAA;AAAA;AAAA;AAAA;;AAQvB,gBAAI,CAACA,UAAL,EAAgB;AACf7b,cAAAA,GAAC,CAACuO,WAAD,CAAD,CAAehR,GAAf,CAAmBiR,CAAnB,EAAsB,CAAC,CAAvB;;AACAA,cAAAA,CAAC,CAACD,WAAD,CAAD,CAAehR,GAAf,CAAmByC,GAAnB,EAAsB,CAAC,CAAvB;;AAFe,2DAGAwO,CAAC,CAACnT,MAHF;AAAA;;AAAA;AAGf,0EAAyB;AAAA,sBAAhBugB,EAAgB;;AACxB5b,kBAAAA,GAAC,CAACuO,WAAD,CAAD,CAAehR,GAAf,CAAmBqe,EAAnB,EAAuB,CAAC,CAAxB;;AACAA,kBAAAA,EAAE,CAACrN,WAAD,CAAF,CAAgBhR,GAAhB,CAAoByC,GAApB,EAAuB,CAAC,CAAxB;AACA;AANc;AAAA;AAAA;AAAA;AAAA;AAOf;AACD;AAzCmB;AAAA;AAAA;AAAA;AAAA;AA0CpB;AAh5JuD;AAAA;AAAA,WAk5JxD,eAAe;AACd,eAAO,KAAK9F,CAAL,CAAOoB,UAAP,CAAkByb,QAAzB;AACA,OAp5JuD;AAAA,WAs5JxD,aAAa3e,GAAb,EAAkB;AACjB,aAAK8B,CAAL,CAAOoB,UAAP,CAAkByb,QAAlB,GAA6B3e,GAA7B;AACA;AAx5JuD;AAAA;AAAA,WA05JxD,eAAoB;AACnB,eAAO,KAAK0jB,gBAAL,EAAP;AACA,OA55JuD;AAAA,WA85JxD,aAAkB1jB,GAAlB,EAAuB;AACtB,aAAK2jB,gBAAL,CAAsB3jB,GAAtB;AACA;AAh6JuD;;AAAA;AAAA,IA2sJrCxB,EAAE,CAAC+jB,KA3sJkC;AAm6JzD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAt7J0D,MAu7JnDqB,MAv7JmD;AAw7JxD,oBAAYnkB,CAAZ,EAAeC,CAAf,EAAkBuhB,IAAlB,EAAwB;AAAA;;AACvB,WAAKnf,CAAL,GAASzD,KAAT;;AACA,UAAIkG,KAAK,GAAG,IAAZ;;AAEA,WAAKC,IAAL,GAAY;AAAE/E,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAAZ;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACG,WAAKuhB,IAAL,GAAYA,IAAI,IAAI,CAApB;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACG,WAAK/a,KAAL,GAAa;AACZzG,QAAAA,CAAC,EAAE,KAAKqC,CAAL,CAAO+hB,MADE;AAEZnkB,QAAAA,CAAC,EAAE,KAAKoC,CAAL,CAAOgiB;AAFE,OAAb;AAIA;AACH;AACA;AACA;;AACG;AACH;AACA;AACA;;AAEG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACG,WAAK3M,MAAL,GAAc,KAAd;AAEA,WAAKC,KAAL,GAAa;AACZ/N,QAAAA,GAAG,EAAE;AAAE5J,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,CAAC,EAAE;AAAX,SADO;AAEZ4J,QAAAA,GAAG,EAAE;AAAE7J,UAAAA,CAAC,EAAE,CAAL;AAAQC,UAAAA,CAAC,EAAE;AAAX;AAFO,OAAb;AAKA,UAAID,CAAJ,EAAO,KAAKA,CAAL,GAASA,CAAT;AACP,UAAIC,CAAJ,EAAO,KAAKA,CAAL,GAASA,CAAT;AACP;AAED;AACF;AACA;AACA;AACA;AACA;;;AA1/J0D;AAAA;AAAA,WA2/JxD,eAAU;AACT,eAAO,KAAK8E,IAAZ;AACA;AACD;AACF;AACA;AACA;AACA;AACA;;AAngK0D;AAAA;AAAA,WAogKxD,eAAe;AACd,eAAO,KAAKA,IAAZ;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AA7gK0D;AAAA;AAAA,WA8gKxD,eAAQ;AACP,eAAO,KAAKA,IAAL,CAAU/E,CAAjB;AACA,OAhhKuD;AAAA,WAihKxD,aAAMO,GAAN,EAAW;AACV,aAAKwE,IAAL,CAAU/E,CAAV,GAAcO,GAAd;AACA,aAAKoX,KAAL,CAAW/N,GAAX,CAAe5J,CAAf,GAAmB,KAAKA,CAAL,GAAS,KAAKqC,CAAL,CAAOE,KAAP,CAAawS,EAAb,GAAkB,KAAKyM,IAAhC,GAAuC,GAA1D;AACA,aAAK7J,KAAL,CAAW9N,GAAX,CAAe7J,CAAf,GAAmB,KAAKA,CAAL,GAAS,KAAKqC,CAAL,CAAOE,KAAP,CAAawS,EAAb,GAAkB,KAAKyM,IAAhC,GAAuC,GAA1D;AACA;AAED;AACF;AACA;AACA;AACA;AACA;;AA5hK0D;AAAA;AAAA,WA6hKxD,eAAQ;AACP,eAAO,KAAKzc,IAAL,CAAU9E,CAAjB;AACA,OA/hKuD;AAAA,WAgiKxD,aAAMM,GAAN,EAAW;AACV,aAAKwE,IAAL,CAAU9E,CAAV,GAAcM,GAAd;AACA,aAAKoX,KAAL,CAAW/N,GAAX,CAAe3J,CAAf,GAAmB,KAAKA,CAAL,GAAS,KAAKoC,CAAL,CAAOE,KAAP,CAAayS,EAAb,GAAkB,KAAKwM,IAAhC,GAAuC,GAA1D;AACA,aAAK7J,KAAL,CAAW9N,GAAX,CAAe5J,CAAf,GAAmB,KAAKA,CAAL,GAAS,KAAKoC,CAAL,CAAOE,KAAP,CAAayS,EAAb,GAAkB,KAAKwM,IAAhC,GAAuC,GAA1D;AACA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AA5iK0D;AAAA;AAAA,aA6iKxD,cAAK;AACJ,YAAI,CAAC,KAAK9J,MAAV,EAAkB;AACjB,eAAKrV,CAAL,CAAOqB,IAAP;AACA,eAAKrB,CAAL,CAAO4V,KAAP,CAAa,KAAKuJ,IAAlB;AACA,eAAKnf,CAAL,CAAO0V,SAAP,CAAiB,CAAC,KAAK/X,CAAN,GAAU,KAAKqC,CAAL,CAAOE,KAAP,CAAawS,EAAb,GAAkB,KAAKyM,IAAlD,EAAwD,CAAC,KAAKvhB,CAAN,GAAU,KAAKoC,CAAL,CAAOE,KAAP,CAAayS,EAAb,GAAkB,KAAKwM,IAAzF;AACA,eAAK9J,MAAL,GAAc,IAAd;AACA;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;AA5jK0D;AAAA;AAAA,aA6jKxD,eAAM;AACL,YAAI,KAAKA,MAAT,EAAiB;AAChB,eAAKrV,CAAL,CAAO4H,GAAP;AACA,eAAKyN,MAAL,GAAc,KAAd;AACA;AACD;AAlkKuD;;AAAA;AAAA,OAmkKvD;;AAEF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,WAASZ,cAAT,CAAwBnL,IAAxB,EAA8B2Y,EAA9B,EAAkCC,EAAlC,EAAsC;AACrC,QAAI1N,EAAE,GAAGyN,EAAE,CAAC3Y,IAAD,CAAF,CAAS4Y,EAAT,CAAT;AACA,QAAI1N,EAAJ,EAAQ,OAAOA,EAAP;AAER,QAAI2N,UAAU,GAAGD,EAAE,YAAYtiB,MAA/B;;AAEA,QAAIuiB,UAAJ,EAAgB;AAAA,mDACAD,EAAE,CAAC/gB,MADH;AAAA;;AAAA;AACf,kEAA0B;AAAA,cAAjBihB,EAAiB;AACzB5N,UAAAA,EAAE,GAAGyN,EAAE,CAAC3Y,IAAD,CAAF,CAAS8Y,EAAT,CAAL;AACA,cAAI5N,EAAJ,EAAQ,OAAOA,EAAP;AACR;AAJc;AAAA;AAAA;AAAA;AAAA;AAKf;;AAED,QAAIyN,EAAE,YAAYriB,MAAlB,EAA0B;AAAA,mDACVqiB,EAAE,CAAC9gB,MADO;AAAA;;AAAA;AACzB,kEAA0B;AAAA,cAAjBkhB,EAAiB;AACzB7N,UAAAA,EAAE,GAAG6N,EAAE,CAAC/Y,IAAD,CAAF,CAAS4Y,EAAT,CAAL;AACA,cAAI1N,EAAJ,EAAQ,OAAOA,EAAP;;AACR,cAAI2N,UAAJ,EAAgB;AAAA,yDACAD,EAAE,CAAC/gB,MADH;AAAA;;AAAA;AACf,wEAA0B;AAAA,oBAAjBihB,GAAiB;AACzB5N,gBAAAA,EAAE,GAAG6N,EAAE,CAAC/Y,IAAD,CAAF,CAAS8Y,GAAT,CAAL;AACA,oBAAI5N,EAAJ,EAAQ,OAAOA,EAAP;AACR;AAJc;AAAA;AAAA;AAAA;AAAA;AAKf;AACD;AAVwB;AAAA;AAAA;AAAA;AAAA;AAWzB;;AACD,WAAO,KAAP;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACC9X,EAAAA,EAAE,CAAC4lB,OAAH,CAAWrmB,SAAX,CAAqBsmB,aAArB,GAAqC,UAAUC,IAAV,EAAgB;AACpD;AACA,QAAI9iB,CAAC,GAAG,IAAR;AACA,QAAI4U,CAAC,GAAGkO,IAAR,CAHoD,CAKpD;AACA;;AACA,QAAI9iB,CAAC,CAAC+L,QAAF,MAAgB6I,CAAC,CAAC7I,QAAF,EAApB,EAAkC,OAAO,IAAP,CAPkB,CAQpD;;AACA,QAAI/L,CAAC,CAAC+L,QAAF,MAAgB6I,CAAC,CAAC7I,QAAF,EAApB,EAAkC,OAAO,KAAP,CATkB,CAUpD;;AAEA/L,IAAAA,CAAC,GAAGA,CAAC,CAAC+hB,MAAF,CAASlY,MAAb;AACA+K,IAAAA,CAAC,GAAGA,CAAC,CAACmN,MAAF,CAASlY,MAAb,CAboD,CAepD;AACA;;AACA,QAAIkZ,aAAa,GAAGhO,cAAc,CAAC,UAAD,EAAa/U,CAAb,EAAgB4U,CAAhB,CAAlC;;AACA,QAAI,CAACmO,aAAL,EAAoBA,aAAa,GAAGhO,cAAc,CAAC,UAAD,EAAaH,CAAb,EAAgB5U,CAAhB,CAA9B;AACpB,QAAI+iB,aAAJ,EAAmB,OAAO,KAAP;AACnB,WAAO,IAAP;AACA,GArBD;AAuBA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAnpK0D,MAopKnDC,KAppKmD,6BAqpKxD,eAAYC,KAAZ,EAAmBhlB,CAAnB,EAAsBC,CAAtB,EAAyBiC,CAAzB,EAA4BC,CAA5B,EAA+B;AAAA;;AAAA;;AAC9B,QAAI,OAAO6iB,KAAP,IAAgB,QAApB,EAA8BA,KAAK,GAAGA,KAAK,CAACC,KAAN,CAAY,IAAZ,CAAR;AAE9B,WAAAjlB,CAAC,UAAD,2BAAAA,CAAC,GAAK,CAAN;AACA,WAAAC,CAAC,UAAD,2BAAAA,CAAC,GAAK,CAAN;AACA,WAAAiC,CAAC,UAAD,2BAAAA,CAAC,GAAK,CAAN;AACA,WAAAC,CAAC,UAAD,2BAAAA,CAAC,GAAK,CAAN;;AAEA,SAAK,IAAI+iB,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGF,KAAK,CAACjiB,MAA9B,EAAsCmiB,GAAG,EAAzC,EAA6C;AAC5C,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,KAAK,CAACE,GAAD,CAAL,CAAWniB,MAAnC,EAA2CoiB,GAAG,EAA9C,EAAkD;AACjD,YAAIlkB,CAAC,GAAG+jB,KAAK,CAACE,GAAD,CAAL,CAAWC,GAAX,CAAR;AACA,YAAIlkB,CAAC,IAAI,GAAL,IAAYA,CAAC,IAAI,GAArB,EAA0B;AAC1B,YAAI2B,GAAG,SAAP;AAAA,YAASuF,CAAC,SAAV;;AAHiD,qDAIvCvJ,KAAK,CAAC2D,KAAN,CAAYiB,MAJ2B;AAAA;;AAAA;AAIjD,oEAA8B;AAAzB2E,YAAAA,CAAyB;AAC7BvF,YAAAA,GAAG,GAAGuF,CAAC,CAACxE,UAAF,CAAa1C,CAAb,CAAN;AACA,gBAAI2B,GAAJ,EAAS;AACT;AAPgD;AAAA;AAAA;AAAA;AAAA;;AAQjD,YAAIA,GAAJ,EAAS;AACR,cAAIuF,CAAC,CAAClG,MAAN,CAAaW,GAAb,EAAkB5C,CAAC,GAAGmlB,GAAG,GAAGjjB,CAA5B,EAA+BjC,CAAC,GAAGilB,GAAG,GAAG/iB,CAAzC;AACA;AACA;;AACD,YAAIijB,QAAQ,GAAG,KAAf;;AAZiD,qDAavCxmB,KAAK,CAAC2D,KAAN,CAAYiB,MAb2B;AAAA;;AAAA;AAajD,oEAA8B;AAAzB2E,YAAAA,CAAyB;;AAC7B,gBAAIA,CAAC,CAACkd,IAAF,IAAUpkB,CAAd,EAAiB;AAChBmkB,cAAAA,QAAQ,GAAG,IAAX;AACA;AACA;AACD;AAlBgD;AAAA;AAAA;AAAA;AAAA;;AAmBjD,YAAIA,QAAJ,EAAc;AACb,cAAIjd,CAAC,CAAClG,MAAN,CAAajC,CAAC,GAAGmlB,GAAG,GAAGjjB,CAAvB,EAA0BjC,CAAC,GAAGilB,GAAG,GAAG/iB,CAApC;AACA;AACA;;AACD,YAAIoH,CAAC,SAAL;;AAvBiD,qDAwBvC3K,KAAK,CAAC6E,UAxBiC;AAAA;;AAAA;AAwBjD,oEAA4B;AAAvB8F,YAAAA,CAAuB;;AAC3B,gBAAIA,CAAC,CAAC8b,IAAF,IAAUpkB,CAAd,EAAiB;AAChBmkB,cAAAA,QAAQ,GAAG,IAAX;AACA;AACA;AACD;AA7BgD;AAAA;AAAA;AAAA;AAAA;;AA8BjD,YAAIA,QAAJ,EAAc;AACb7b,UAAAA,CAAC,CAACvJ,CAAF,GAAMA,CAAC,GAAGmlB,GAAG,GAAGjjB,CAAhB;AACAqH,UAAAA,CAAC,CAACtJ,CAAF,GAAMA,CAAC,GAAGilB,GAAG,GAAG/iB,CAAhB;AACA;AACA;;AACDrD,QAAAA,OAAO,CAACwa,KAAR,CAAc,qBAAqBrY,CAAnC;AACA;AACD;AACD,GApsKuD;;AAssKzD,OAAK8jB,KAAL,GAAaA,KAAb;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;;AAEC;AACD;AACA;AACA;AACA;AACA;;AACC,OAAKO,WAAL,GAAmB,UAAUN,KAAV,EAAiBhlB,CAAjB,EAAoBC,CAApB,EAAuBiC,CAAvB,EAA0BC,CAA1B,EAA6B;AAC/C,WAAO,IAAI4iB,KAAJ,CAAUC,KAAV,EAAiBhlB,CAAjB,EAAoBC,CAApB,EAAuBiC,CAAvB,EAA0BC,CAA1B,CAAP;AACA,GAFD;;AAttKyD,MA0tKnD0E,KA1tKmD;AA2tKxD,qBAAc;AAAA;;AACb,WAAKC,EAAL,GAAU,CAAV;AACA,WAAKM,EAAL,GAAU,CAAV;AACA,WAAKD,IAAL,GAAY,CAAZ;AACA;;AA/tKuD;AAAA;AAAA,aAiuKxD,mBAAU;AACT,eAAO,KAAKA,IAAZ;AACA;AAnuKuD;AAAA;AAAA,WAquKxD,eAAQ;AACP,eAAO,KAAKL,EAAZ;AACA,OAvuKuD;AAAA,WAwuKxD,aAAMvG,GAAN,EAAW;AACV,YAAIA,GAAG,IAAI,KAAKuG,EAAhB,EAAoB;AACpB,aAAKA,EAAL,GAAUvG,GAAV;AACA,aAAK4G,IAAL,GAAY,CAAC,KAAKL,EAAL,GAAU,KAAKM,EAAhB,IAAsB,GAAlC;AACA;AA5uKuD;AAAA;AAAA,WA8uKxD,eAAQ;AACP,eAAO,KAAKA,EAAZ;AACA,OAhvKuD;AAAA,WAivKxD,aAAM7G,GAAN,EAAW;AACV,YAAIA,GAAG,IAAI,KAAK6G,EAAhB,EAAoB;AACpB,aAAKA,EAAL,GAAU7G,GAAV;AACA,aAAK4G,IAAL,GAAY,CAAC,KAAKL,EAAL,GAAU,KAAKM,EAAhB,IAAsB,GAAlC;AACA;AArvKuD;;AAAA;AAAA;AAwvKzD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,OAAKme,aAAL,GAAqB,UAAUC,QAAV,EAAoBC,kBAApB,EAAwCC,kBAAxC,EAA4D;AAAA,iDAClE,KAAKjiB,UAD6D;AAAA;;AAAA;AAChF,gEAA+B;AAAA,YAAtB8F,CAAsB;AAC9BA,QAAAA,CAAC,CAAC/B,OAAF,CAAUxH,CAAV,GAAcuJ,CAAC,CAACvJ,CAAhB;AACAuJ,QAAAA,CAAC,CAAC/B,OAAF,CAAUvH,CAAV,GAAcsJ,CAAC,CAACtJ,CAAhB;AACA,OAJ+E,CAMhF;;AANgF;AAAA;AAAA;AAAA;AAAA;;AAOhF,SAAKsC,KAAL,CAAWojB,IAAX,CAAgBH,QAAQ,IAAI,IAAI,EAAhC,EAAoCC,kBAAkB,IAAI,CAA1D,EAA6DC,kBAAkB,IAAI,CAAnF;;AAPgF,iDASlE,KAAKjiB,UAT6D;AAAA;;AAAA;AAShF,gEAA+B;AAAA,YAAtB8F,GAAsB;;AAC9BA,QAAAA,GAAC,CAACgN,MAAF;AACA;AAX+E;AAAA;AAAA;AAAA;AAAA;;AAYhF,SAAKpX,MAAL,CAAYI,iBAAZ,GAAgC,KAAhC;AACA,GAbD;AAeA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,OAAKqmB,YAAL,GAAoB,UAAU5lB,CAAV,EAAaC,CAAb,EAAgB0C,KAAhB,EAAuBkjB,qBAAvB,EAA8C;AAAA;;AACjE,6BAAAA,qBAAqB,UAArB,+DAAAA,qBAAqB,GAAK,IAA1B;AACA,QAAMC,cAAc,GAAG,IAAI/mB,EAAE,CAACmB,IAAP,CAAYF,CAAC,GAAGd,OAAhB,EAAyBe,CAAC,GAAGf,OAA7B,CAAvB;AACA,QAAM6mB,IAAI,GAAG,IAAIhnB,EAAE,CAACinB,IAAP,EAAb;AACAD,IAAAA,IAAI,CAACE,UAAL,GAAkB,IAAIlnB,EAAE,CAACmB,IAAP,CAAY4lB,cAAc,CAAC9lB,CAAf,GAAmB,KAA/B,EAAsC8lB,cAAc,CAAC7lB,CAAf,GAAmB,KAAzD,CAAlB;AACA8lB,IAAAA,IAAI,CAACG,UAAL,GAAkB,IAAInnB,EAAE,CAACmB,IAAP,CAAY4lB,cAAc,CAAC9lB,CAAf,GAAmB,KAA/B,EAAsC8lB,cAAc,CAAC7lB,CAAf,GAAmB,KAAzD,CAAlB,CALiE,CAOjE;;AACA,QAAIkmB,IAAI,GAAG,EAAX;AACAvnB,IAAAA,KAAK,CAAC2D,KAAN,CAAY6jB,SAAZ,CAAsBL,IAAtB,EAA4B,UAAC/X,GAAD,EAAS;AACpC,UAAIA,GAAG,CAACsG,QAAJ,GAAe+R,SAAf,CAAyBrY,GAAG,CAACsY,OAAJ,GAAcC,YAAd,EAAzB,EAAuDT,cAAvD,CAAJ,EAA4E;AAC3EK,QAAAA,IAAI,CAACziB,IAAL,CAAUsK,GAAV;AACA;;AACD,aAAO,IAAP;AACA,KALD;AAOA,cAAArL,KAAK,UAAL,iCAAAA,KAAK,GAAK/D,KAAK,CAAC6E,UAAhB;AAEA,QAAI+iB,OAAO,GAAG,EAAd;;AACA,QAAIL,IAAI,CAACpjB,MAAL,GAAc,CAAlB,EAAqB;AAAA,mDACNJ,KADM;AAAA;;AAAA;AACpB,kEAAqB;AAAA,cAAZ4G,CAAY;AACpB,cAAI,CAACA,CAAC,CAAC/D,IAAP,EAAa;;AACb,cAAI2gB,IAAI,CAACvK,QAAL,CAAcrS,CAAC,CAAC/D,IAAF,CAAOgJ,aAArB,CAAJ,EAAyC;AACxC,gBAAIjF,CAAC,CAAC2O,sBAAF,IAA4B2N,qBAAhC,EAAuDW,OAAO,CAAC9iB,IAAR,CAAa6F,CAAb;AACvD;AACD;AANmB;AAAA;AAAA;AAAA;AAAA;AAOpB;;AACD,WAAOid,OAAP;AACA,GA5BD;AA8BA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,OAAKC,WAAL,GAAmB,UAAUzmB,CAAV,EAAaC,CAAb,EAAgB0C,KAAhB,EAAuB;AACzC,QAAI6jB,OAAO,GAAG,KAAKZ,YAAL,CAAkB5lB,CAAlB,EAAqBC,CAArB,EAAwB0C,KAAxB,CAAd;AACA6jB,IAAAA,OAAO,CAACnE,IAAR,CAAa,UAACtgB,CAAD,EAAI4U,CAAJ;AAAA,aAAU,CAAC5U,CAAC,CAAC+D,KAAF,GAAU6Q,CAAC,CAAC7Q,KAAb,IAAsB,CAAC,CAAjC;AAAA,KAAb;AACA,WAAO0gB,OAAO,CAAC,CAAD,CAAd;AACA,GAJD,CA/zKyD,CAq0KzgB,UAACR,CAAD,EAAIsX,OAAJ,EAAgB;AAAA;;AAC/B,QAAItX,CAAC,YAAY/Q,EAAE,CAACsR,KAApB,EAA2B,OAAOP,CAAP;;AAC3B,QAAI,OAAOsX,OAAP,IAAkB,QAAtB,EAAgC;AAC/BA,MAAAA,OAAO,GAAG9nB,KAAK,CAAC2D,KAAN,CAAY0gB,QAAZ,CAAqByD,OAArB,CAAV;AACA;;AACD,gBAAAA,OAAO,UAAP,qCAAAA,OAAO,GAAK9nB,KAAK,CAAC2D,KAAN,CAAY0gB,QAAZ,CAAqB,CAArB,CAAZ;AACA,QAAI0D,GAAJ;AACA,QAAID,OAAJ,EAAaC,GAAG,GAAGD,OAAO,CAACtX,CAAD,CAAb,CAPkB,CAQ/B;;AACA,QAAIuX,GAAG,KAAK,EAAR,IAAcvX,CAAC,KAAK,GAApB,IAA2BA,CAAC,KAAK,GAArC,EAA0C;AACzC,aAAOxQ,KAAK,CAAC8J,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAP;AACA;;AACD,WAAO9J,KAAK,CAAC8J,KAAN,CAAYie,GAAG,IAAIvX,CAAnB,CAAP;AACA,GAbD;AAeA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,OAAKwX,SAAL,GAAiB,UAACC,GAAD,EAAM5O,KAAN,EAAayO,OAAb,EAAyB;AAAA;;AACzC,cAAAzO,KAAK,UAAL,iCAAAA,KAAK,GAAK,CAAV;;AACA,QAAI,OAAOyO,OAAP,IAAkB,QAAtB,EAAgC;AAC/BA,MAAAA,OAAO,GAAG9nB,KAAK,CAAC2D,KAAN,CAAY0gB,QAAZ,CAAqByD,OAArB,CAAV;AACA;;AACD,iBAAAA,OAAO,UAAP,uCAAAA,OAAO,GAAK9nB,KAAK,CAAC2D,KAAN,CAAY0gB,QAAZ,CAAqB,CAArB,CAAZ;AACA,QAAI6D,KAAK,GAAGD,GAAZ,CANyC,CAMxB;;AACjB,QAAI,OAAOA,GAAP,IAAc,QAAlB,EAA4B;AAC3BA,MAAAA,GAAG,GAAGA,GAAG,CAACE,IAAJ,EAAN;AACAF,MAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,WAAZ,EAAyB,IAAzB,CAAN,CAF2B,CAEW;;AACtCH,MAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAN,CAH2B,CAGK;;AAChCF,MAAAA,KAAK,GAAGD,GAAG,CAAC5B,KAAJ,CAAU,IAAV,CAAR;AACA;;AACD,QAAI/iB,CAAC,GAAG,CAAR;;AAbyC,iDAcxB4kB,KAdwB;AAAA;;AAAA;AAczC,gEAAwB;AAAA,YAAfpO,IAAe;AACvB,YAAIA,IAAI,CAAC3V,MAAL,GAAcb,CAAlB,EAAqBA,CAAC,GAAGwW,IAAI,CAAC3V,MAAT;AACrB;AAhBwC;AAAA;AAAA;AAAA;AAAA;;AAiBzC,QAAIZ,CAAC,GAAG2kB,KAAK,CAAC/jB,MAAd;AACA,QAAI6b,GAAG,GAAGhgB,KAAK,CAACqoB,WAAN,CAAkB/kB,CAAC,GAAG+V,KAAtB,EAA6B9V,CAAC,GAAG8V,KAAjC,CAAV;AACA2G,IAAAA,GAAG,CAACsI,UAAJ;;AAEA,SAAK,IAAIhd,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4c,KAAK,CAAC/jB,MAA1B,EAAkCmH,CAAC,EAAnC,EAAuC;AACtC,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwc,KAAK,CAAC5c,CAAD,CAAL,CAASnH,MAA7B,EAAqCuH,CAAC,EAAtC,EAA0C;AACzC,aAAK,IAAI6c,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGlP,KAAtB,EAA6BkP,EAAE,EAA/B,EAAmC;AAClC,eAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGnP,KAAtB,EAA6BmP,EAAE,EAA/B,EAAmC;AAClC,gBAAIhY,CAAC,GAAG,OAAI,CAACQ,QAAL,CAAckX,KAAK,CAAC5c,CAAD,CAAL,CAASI,CAAT,CAAd,EAA2Boc,OAA3B,CAAR;;AACA9H,YAAAA,GAAG,CAAClZ,GAAJ,CAAQ4E,CAAC,GAAG2N,KAAJ,GAAYkP,EAApB,EAAwBjd,CAAC,GAAG+N,KAAJ,GAAYmP,EAApC,EAAwChY,CAAxC;AACA;AACD;AACD;AACD;;AACDwP,IAAAA,GAAG,CAACyI,YAAJ;AACAzI,IAAAA,GAAG,CAAC1c,CAAJ,GAAQ0c,GAAG,CAAC5Y,KAAZ;AACA4Y,IAAAA,GAAG,CAACzc,CAAJ,GAAQyc,GAAG,CAAC1Y,MAAZ;AACAtH,IAAAA,KAAK,CAACO,MAAN,CAAamoB,MAAb,CAAoBC,MAApB,CAA2B3I,GAA3B;AACA,WAAOA,GAAP,CAnCyC,CAmC7B;AACZ,GApCD;AAsCA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,OAAK4I,UAAL,GAAkB,UAAU5b,MAAV,EAAkB;AACnC,QAAIhN,KAAK,CAAC0f,UAAN,IAAoB,CAAxB,EAA2Bxf,OAAO,CAACsR,IAAR,CAAa,wDAAb;AAC3BxE,IAAAA,MAAM,CAACmL,IAAP;AACA,GAHD;AAKA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,OAAK0Q,WAAL,GAAmB,UAAU9kB,KAAV,EAAiB;AAAA;;AACnC,QAAI/D,KAAK,CAAC0f,UAAN,IAAoB,CAAxB,EAA2Bxf,OAAO,CAACsR,IAAR,CAAa,wDAAb;AAC3B,eAAAzN,KAAK,UAAL,mCAAAA,KAAK,GAAK/D,KAAK,CAAC6E,UAAhB;AACAd,IAAAA,KAAK,CAACoU,IAAN;AACA,GAJD;AAMA;AACD;AACA;AACA;AACA;;;AACC,OAAK2Q,YAAL,GAAoB,YAAY;AAC/B,sBAAWzlB,MAAX,6BAAqBS,SAArB;AACA,GAFD;AAIA;AACD;AACA;AACA;AACA;;;AACC,OAAKilB,WAAL,GAAmB,YAAY;AAC9B,sBAAW7kB,KAAX,6BAAoBJ,SAApB;AACA,GAFD;AAIA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC;AACD;AACA;AACA;AACA;AACA;;;AACC,OAAKklB,OAAL,GAAe,KAAKC,aAAL,GAAqB,YAAY;AAC/C,sBAAW5kB,eAAX,6BAA8BP,SAA9B;AACA,GAFD;AAIA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,OAAK4T,SAAL,GAAiB,UAAU1T,GAAV,EAAe5C,CAAf,EAAkBC,CAAlB,EAAqBwe,CAArB,EAAwB0I,EAAxB,EAA4BC,EAA5B,EAAgC;AAChD,QAAIxkB,GAAG,CAACyB,OAAR,EAAiBzB,GAAG,CAAC2T,MAAJ;AACjB3T,IAAAA,GAAG,CAACmU,IAAJ,CAAS/W,CAAT,EAAYC,CAAZ,EAAewe,CAAf,EAAkB0I,EAAlB,EAAsBC,EAAtB;AACA,GAHD;AAKA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC/oB,EAAAA,EAAE,CAACC,SAAH,CAAa8b,KAAb,GAAqB,UAAC0N,WAAD,EAAiB;AACrC;AACA,QAAI,CAACA,WAAL,EAAkB;AACjB,aAAO,IAAIxM,OAAJ,CAAYyM,qBAAZ,CAAP;AACA,KAFD,MAEO;AACN;AACA,aAAO,IAAIzM,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC/ByM,QAAAA,UAAU,CAACzM,OAAD,EAAUuM,WAAV,CAAV;AACA,OAFM,CAAP;AAGA;AACD,GAVD;AAYA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCzpB,EAAAA,EAAE,CAACC,SAAH,CAAa2pB,KAAb,GAAqB,UAACH,WAAD,EAAiB;AACrC,WAAOzpB,EAAE,CAACC,SAAH,CAAa8b,KAAb,CAAmB0N,WAAnB,CAAP;AACA,GAFD;AAIA;AACD;AACA;AACA;AACA;AACA;AACA;;;AACC,OAAKI,IAAL,GAAY,UAACC,KAAD,EAAW;AACtB,QAAI,CAACA,KAAK,CAACD,IAAX,EAAiB,MAAM,IAAIvpB,KAAJ,CAAU,gEAAgEwpB,KAA1E,CAAN,CADK,CAEtB;;AACA,WAAO,IAAI7M,OAAJ,CAAY,UAACC,OAAD,EAAU6M,MAAV,EAAqB;AACvCD,MAAAA,KAAK,CAACD,IAAN;AACAC,MAAAA,KAAK,CAACE,OAAN,CAAc;AAAA,eAAM9M,OAAO,EAAb;AAAA,OAAd;AACA,KAHM,CAAP;AAIA,GAPD;;AASA,MAAI+M,oBAAoB,GAAGjqB,EAAE,CAACkqB,qBAA9B;AACAlqB,EAAAA,EAAE,CAACkqB,qBAAH,GAA2B,IAA3B;AAEA,MAAMC,aAAa,GAAG,KAAKC,YAA3B;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,OAAKA,YAAL,GAAoB,YAAY;AAAA;;AAC/B,QAAIhmB,IAAI,8BAAOC,SAAP,CAAR;AACA,QAAIgmB,YAAY,GAAG,KAAnB;AACA,QAAIC,SAAS,GAAG,KAAhB;AACA,QAAIzmB,CAAJ,EAAOC,CAAP,EAAUymB,KAAV;;AACA,QAAI,OAAOnmB,IAAI,CAAC,CAAD,CAAX,IAAkB,QAAtB,EAAgC;AAC/BmmB,MAAAA,KAAK,GAAGnmB,IAAI,CAAC,CAAD,CAAJ,CAAQwiB,KAAR,CAAc,GAAd,CAAR;;AACA,UAAIxiB,IAAI,CAAC,CAAD,CAAJ,IAAW,YAAf,EAA6B;AAC5BimB,QAAAA,YAAY,GAAG,IAAf;AACA;AACD;;AACD,QAAI,CAACjmB,IAAI,CAACM,MAAV,EAAkB;AACjBN,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUhE,MAAM,CAACoqB,UAAjB;AACApmB,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUhE,MAAM,CAACqqB,WAAjB;AACAJ,MAAAA,YAAY,GAAG,IAAf;AACA,KAJD,MAIO,IAAI,OAAOjmB,IAAI,CAAC,CAAD,CAAX,IAAkB,QAAlB,IAA8B,OAAOA,IAAI,CAAC,CAAD,CAAX,IAAkB,QAApD,EAA8D;AACpEA,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd;AACAA,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd;AACA;;AAED,QAAIA,IAAI,CAAC,CAAD,CAAJ,IAAW,WAAf,EAA4B;AAC3BkmB,MAAAA,SAAS,GAAG,IAAZ;AACAD,MAAAA,YAAY,GAAG,IAAf;AACAE,MAAAA,KAAK,GAAG,CAACnmB,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAR;AACA;;AACD,QAAImmB,KAAJ,EAAW;AACV,UAAIG,EAAE,GAAGxlB,MAAM,CAACqlB,KAAK,CAAC,CAAD,CAAN,CAAf;AACA,UAAII,EAAE,GAAGzlB,MAAM,CAACqlB,KAAK,CAAC,CAAD,CAAN,CAAf;AAEA1mB,MAAAA,CAAC,GAAGzD,MAAM,CAACoqB,UAAX;AACA1mB,MAAAA,CAAC,GAAG1D,MAAM,CAACoqB,UAAP,IAAqBG,EAAE,GAAGD,EAA1B,CAAJ;;AACA,UAAI5mB,CAAC,GAAG1D,MAAM,CAACqqB,WAAf,EAA4B;AAC3B5mB,QAAAA,CAAC,GAAGzD,MAAM,CAACqqB,WAAP,IAAsBC,EAAE,GAAGC,EAA3B,CAAJ;AACA7mB,QAAAA,CAAC,GAAG1D,MAAM,CAACqqB,WAAX;AACA;;AACD5mB,MAAAA,CAAC,GAAG1B,IAAI,CAACE,KAAL,CAAWwB,CAAX,CAAJ;AACAC,MAAAA,CAAC,GAAG3B,IAAI,CAACE,KAAL,CAAWyB,CAAX,CAAJ;;AAEA,UAAI,CAACwmB,SAAL,EAAgB;AACflmB,QAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUP,CAAV;AACAO,QAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUN,CAAV;AACA;AACD;;AACD,QAAIM,IAAI,CAACM,MAAL,GAAc,CAAlB,EAAqBN,IAAI,CAAC,CAAD,CAAJ,GAAU,KAAV;;AACrB,QAAIwmB,GAAG,GAAGT,aAAa,CAACpjB,IAAd,OAAAojB,aAAa,GAAM5pB,KAAN,4BAAgB6D,IAAhB,GAAvB;;AACA,SAAKqG,MAAL,CAAYogB,QAAZ,GAAuB,CAAvB;AACA,SAAKpgB,MAAL,CAAYqgB,gBAAZ,CAA6B,SAA7B,EAAwC,UAAUpT,CAAV,EAAa;AACpD,UACCA,CAAC,CAACqT,GAAF,IAAS,GAAT,IACArT,CAAC,CAACqT,GAAF,IAAS,GADT,IAEArT,CAAC,CAACqT,GAAF,IAAS,SAFT,IAGArT,CAAC,CAACqT,GAAF,IAAS,WAHT,IAIArT,CAAC,CAACqT,GAAF,IAAS,WAJT,IAKArT,CAAC,CAACqT,GAAF,IAAS,YANV,EAOE;AACDrT,QAAAA,CAAC,CAACsT,cAAF;AACA;AACD,KAXD;AAYA,SAAKvgB,MAAL,CAAYqgB,gBAAZ,CAA6B,WAA7B,EAA0C,YAAM;AAC/C,MAAA,OAAI,CAAC1iB,KAAL,CAAW6iB,UAAX,GAAwB,IAAxB;AACA,MAAA,OAAI,CAAC7iB,KAAL,CAAWiR,MAAX,GAAoB,IAApB;AACA,KAHD;AAIA,SAAK5O,MAAL,CAAYqgB,gBAAZ,CAA6B,YAA7B,EAA2C,YAAM;AAChD,MAAA,OAAI,CAAC1iB,KAAL,CAAW6iB,UAAX,GAAwB,KAAxB;AACA,KAFD;AAGA,SAAKxgB,MAAL,CAAYqgB,gBAAZ,CAA6B,YAA7B,EAA2C,UAACpT,CAAD,EAAO;AACjDA,MAAAA,CAAC,CAACsT,cAAF;AACA,KAFD;AAGA,SAAK9mB,KAAL,CAAWygB,MAAX;AACA,QAAI,CAACsF,oBAAL,EAA2BjqB,EAAE,CAACkqB,qBAAH,GAA2B,KAA3B;AAE3B;;AACA;;AACA;;AACA,QAAIgB,KAAK,4MAAT;;AAWA,QAAIb,YAAJ,EAAkB;AACjBa,MAAAA,KAAK,GAAG,mBAAmBA,KAA3B;AACAA,MAAAA,KAAK,6KAAL;AAYA;;AACD,QAAIZ,SAAJ,EAAe;AACdY,MAAAA,KAAK,kEAGErnB,CAHF,sCAIGC,CAJH,qBAAL;AAMA;;AACD,QAAIqnB,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAhB;AACAF,IAAAA,SAAS,CAACG,SAAV,GAAsBJ,KAAtB;AACAE,IAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,SAA1B;AAEA,QAAIzH,GAAG,GAAG+H,SAAS,CAACC,SAAV,CAAoBrb,OAApB,CAA4B,WAA5B,CAAV;;AACA,QAAIqT,GAAG,GAAG,CAAC,CAAX,EAAc;AACb,UAAIiI,OAAO,GAAGF,SAAS,CAACC,SAAV,CAAoBE,SAApB,CAA8BlI,GAAG,GAAG,EAApC,EAAwCA,GAAG,GAAG,EAA9C,CAAd;AACA,WAAK5iB,MAAL,CAAY6qB,OAAZ,GAAsBA,OAAtB;;AACA,UAAIA,OAAO,GAAG,EAAd,EAAkB;AACjBprB,QAAAA,KAAK,CAACsrB,YAAN,CAAmB,CAAnB;AACA;;AACD,WAAK/qB,MAAL,CAAYC,EAAZ,CAAe+qB,QAAf,GAA0B,KAA1B;AACA,WAAKhrB,MAAL,CAAYC,EAAZ,CAAe4qB,OAAf,GAAyBA,OAAzB;AACA,KARD,MAQO,IAAIF,SAAS,CAACM,aAAV,KAA4BvnB,SAAhC,EAA2C;AACjD,WAAK1D,MAAL,CAAYC,EAAZ,CAAe+qB,QAAf,GAA0BL,SAAS,CAACM,aAAV,CAAwBD,QAAlD;AACA;;AAED,QAAIxB,SAAJ,EAAe;AACd/pB,MAAAA,KAAK,CAACsrB,YAAN,CAAmB,CAAnB;AACAtrB,MAAAA,KAAK,CAACyrB,QAAN;AACA;;AAED,WAAOpB,GAAP;AACA,GAnID;;AAqIA,WAASqB,MAAT,GAAkB;AACjB,WAAO1rB,KAAK,CAAC6pB,YAAN,OAAA7pB,KAAK,EAAiB8D,SAAjB,CAAZ;AACA;;AAED,MAAM6nB,WAAW,GAAG,KAAKC,UAAzB;AAEA;AACD;AACA;AACA;AACA;AACA;;AACC,OAAKA,UAAL,GAAkB,YAAY;AAC7B,QAAI/nB,IAAI,GAAGC,SAAX;AACA,QAAI0M,CAAJ;;AACA,QAAI3M,IAAI,CAACM,MAAL,IAAe,CAAf,KAAqB,OAAON,IAAI,CAAC,CAAD,CAAX,IAAkB,QAAlB,IAA8BA,IAAI,CAAC,CAAD,CAAJ,YAAmBpE,EAAE,CAACsR,KAAzE,CAAJ,EAAqF;AACpFP,MAAAA,CAAC,GAAG,KAAKQ,QAAL,CAAcnN,IAAI,CAAC,CAAD,CAAlB,CAAJ;AACA;;AACD,QAAI2M,CAAC,KAAKvM,SAAV,EAAqB0nB,WAAW,CAACnlB,IAAZ,CAAiB,IAAjB,EAAuBgK,CAAvB,EAArB,KACKmb,WAAW,CAACnlB,IAAZ,OAAAmlB,WAAW,GAAM,IAAN,4BAAe9nB,IAAf,GAAX;AACL,GARD;;AAUA,MAAMgoB,KAAK,GAAG,KAAKlT,IAAnB;AAEA;AACD;AACA;AACA;AACA;AACA;;AACC,OAAKA,IAAL,GAAY,YAAY;AACvB,QAAI9U,IAAI,GAAGC,SAAX;AACA,QAAI0M,CAAJ;;AACA,QAAI3M,IAAI,CAACM,MAAL,IAAe,CAAnB,EAAsB;AACrBqM,MAAAA,CAAC,GAAG,KAAKQ,QAAL,CAAcnN,IAAI,CAAC,CAAD,CAAlB,CAAJ;AACA;;AACD,QAAI2M,CAAC,KAAKvM,SAAV,EAAqB4nB,KAAK,CAACrlB,IAAN,CAAW,IAAX,EAAiBgK,CAAjB,EAArB,KACKqb,KAAK,CAACrlB,IAAN,OAAAqlB,KAAK,GAAM,IAAN,4BAAehoB,IAAf,GAAL;AACL,GARD;;AAUA,MAAMuN,OAAO,GAAG,KAAKgH,MAArB;AAEA;AACD;AACA;AACA;AACA;AACA;;AACC,OAAKA,MAAL,GAAc,YAAY;AACzB,QAAIvU,IAAI,GAAGC,SAAX;AACA,QAAI0M,CAAJ;;AACA,QAAI3M,IAAI,CAACM,MAAL,IAAe,CAAnB,EAAsB;AACrBqM,MAAAA,CAAC,GAAG,KAAKQ,QAAL,CAAcnN,IAAI,CAAC,CAAD,CAAlB,CAAJ;AACA;;AACD,QAAI2M,CAAC,KAAKvM,SAAV,EAAqBmN,OAAO,CAAC5K,IAAR,CAAa,IAAb,EAAmBgK,CAAnB,EAArB,KACKY,OAAO,CAAC5K,IAAR,OAAA4K,OAAO,GAAM,IAAN,4BAAevN,IAAf,GAAP;AACL,GARD,CAl5LyD,CA45LzD;AACA;;;AACA,OAAKtD,MAAL,CAAYmoB,MAAZ,GAAqB;AACpBC,IAAAA,MAAM,EAAE,gBAAC3I,GAAD,EAAS,CAAE,CADC,CACA;;AADA,GAArB;AAIA,MAAM8L,UAAU,GAAG,KAAK9M,SAAxB;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,OAAK+M,OAAL,GAAe,KAAK/M,SAAL,GAAiB,YAAY;AAC3C,QAAInb,IAAI,GAAGC,SAAX;AACA,QAAI8b,GAAG,GAAG/b,IAAI,CAAC,CAAD,CAAd;AACA,QAAImc,GAAG,GAAGhgB,KAAK,CAACO,MAAN,CAAamoB,MAAb,CAAoB9I,GAApB,CAAV;AACA,QAAI3H,EAAJ;;AACA,QAAI,OAAOpU,IAAI,CAACA,IAAI,CAACM,MAAL,GAAc,CAAf,CAAX,IAAgC,UAApC,EAAgD;AAC/C8T,MAAAA,EAAE,GAAGpU,IAAI,CAACA,IAAI,CAACM,MAAL,GAAc,CAAf,CAAT;AACA;;AACD,QAAI6b,GAAJ,EAAS;AACR;AACA,UAAKA,GAAG,CAAC5Y,KAAJ,IAAa,CAAb,IAAkB4Y,GAAG,CAAC1Y,MAAJ,IAAc,CAAjC,IAAuC,CAAC0Y,GAAG,CAACgM,MAAJ,CAAW7nB,MAAvD,EAA+D;AAC9D,YAAI8T,EAAJ,EAAQ;AACP+H,UAAAA,GAAG,CAACiM,GAAJ,CAAQnnB,IAAR,CAAamT,EAAb;AACA+H,UAAAA,GAAG,CAACkM,KAAJ;AACA,SAHD,MAGOlsB,KAAK,CAACmsB,iBAAN;AACP,OALD,MAKO;AACN,YAAIlU,EAAJ,EAAQA,EAAE,GADJ,CACQ;;AACdjY,QAAAA,KAAK,CAACmsB,iBAAN;AACA;;AACD,aAAOnM,GAAP;AACA;;AACD,QAAMoM,GAAG,GAAG,SAANA,GAAM,CAACC,IAAD,EAAU;AACrB;AACA;AACA;AACA;AACA;AAEAA,MAAAA,IAAI,CAAC/oB,CAAL,GAAS+oB,IAAI,CAACjlB,KAAd;AACAilB,MAAAA,IAAI,CAAC9oB,CAAL,GAAS8oB,IAAI,CAAC/kB,MAAd;;AARqB,mDASN+kB,IAAI,CAACJ,GATC;AAAA;;AAAA;AASrB,kEAAyB;AAAA,cAAhBhU,IAAgB;;AACxBA,UAAAA,IAAE;AACF;AAXoB;AAAA;AAAA;AAAA;AAAA;;AAYrB,WAAK,IAAI3M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+gB,IAAI,CAACH,KAAzB,EAAgC5gB,CAAC,EAAjC,EAAqC;AACpCtL,QAAAA,KAAK,CAACmsB,iBAAN;AACA,OAdoB,CAerB;AACA;;;AACAE,MAAAA,IAAI,CAACJ,GAAL,GAAW,EAAX;AACAjsB,MAAAA,KAAK,CAACO,MAAN,CAAamoB,MAAb,CAAoBC,MAApB,CAA2B3I,GAA3B;AACA,KAnBD;;AAoBAA,IAAAA,GAAG,GAAG8L,UAAU,CAACtlB,IAAX,CAAgBxG,KAAhB,EAAuB4f,GAAvB,EAA4BwM,GAA5B,CAAN;AACApM,IAAAA,GAAG,CAACiM,GAAJ,GAAU,EAAV;AACAjM,IAAAA,GAAG,CAACkM,KAAJ,GAAY,CAAZ;AACA,QAAIjU,EAAJ,EAAQ+H,GAAG,CAACiM,GAAJ,CAAQnnB,IAAR,CAAamT,EAAb;AACR+H,IAAAA,GAAG,CAACJ,GAAJ,GAAUA,GAAV;AACA5f,IAAAA,KAAK,CAACO,MAAN,CAAamoB,MAAb,CAAoB9I,GAApB,IAA2BI,GAA3B;AACA,WAAOA,GAAP;AACA,GAhDD;;AAkDA,MAAIsM,aAAa,GAAG;AACnBC,IAAAA,OAAO,EAAE,CACR,sBADQ,EAER,6BAFQ,EAGR,2BAHQ,EAIR,4BAJQ,EAKR,6BALQ,CADU;AAQnBlpB,IAAAA,MAAM,EAAE;AACPmpB,MAAAA,WAAW,EAAE;AACZC,QAAAA,IAAI,EAAE,uCADM;AAEZ,WAAG,kHAFS;AAGZ,WAAG;AAHS,OADN;AAMPtW,MAAAA,EAAE,EAAE,uFANG;AAOPC,MAAAA,EAAE,EAAE,yFAPG;AAQPgD,MAAAA,MAAM,EAAE,yCARD;AASPsT,MAAAA,eAAe,4CATR;AAUPC,MAAAA,OAAO,EAAE;AACR,WAAG,oGADK;AAER,WAAG,8CAFK;AAGR,WAAG;AAHK,OAVF;AAePC,MAAAA,OAAO,EAAE;AACR,WAAG,oGADK;AAER,WAAG,4CAFK;AAGR,WAAG;AAHK;AAfF,KARW;AA6BnBvoB,IAAAA,eAAe,EAAE;AAChBmoB,MAAAA,WAAW,EAAE;AACZC,QAAAA,IAAI,EAAE,4DADM;AAEZ,yGAFY;AAGZ,WAAG;AAHS;AADG,KA7BE;AAoCnBvoB,IAAAA,KAAK,EAAE;AACNsoB,MAAAA,WAAW,EAAE;AACZC,QAAAA,IAAI,EAAE;AADM;AADP;AApCY,GAApB;AA0CAH,EAAAA,aAAa,CAACpoB,KAAd,CAAoByoB,OAApB,GAA8BL,aAAa,CAACjpB,MAAd,CAAqBspB,OAAnD;AACAL,EAAAA,aAAa,CAACpoB,KAAd,CAAoB0oB,OAApB,GAA8BN,aAAa,CAACjpB,MAAd,CAAqBupB,OAAnD;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAthM0D,MAuhMnDroB,aAvhMmD;AAAA;;AAAA;;AAwhMxD,2BAAYsoB,IAAZ,EAAkBC,QAAlB,EAA4B3V,CAA5B,EAA+B;AAAA;;AAAA;;AAC9B;;AAEA,UAAI,OAAO0V,IAAP,IAAe,QAAnB,EAA6B;AAC5B1V,QAAAA,CAAC,GAAG2V,QAAJ;AACAA,QAAAA,QAAQ,GAAGD,IAAX;AACAA,QAAAA,IAAI,GAAG,QAAKE,KAAL,CAAWC,KAAX,CAAiB,kBAAjB,EAAqC,CAArC,CAAP;AACAH,QAAAA,IAAI,GAAGA,IAAI,CAACtqB,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACA;;AACD,UAAI,OAAOuqB,QAAP,IAAmB,QAAvB,EAAiC;AAChC3V,QAAAA,CAAC,GAAG2V,QAAJ;AACAA,QAAAA,QAAQ,GAAG7oB,SAAX;AACA;;AACD,UAAI4oB,IAAI,CAACtqB,KAAL,CAAW,CAAX,EAAc,CAAd,KAAoB,KAAxB,EAA+BsqB,IAAI,GAAGA,IAAI,CAACtqB,KAAL,CAAW,CAAX,CAAP;AAC/BsqB,MAAAA,IAAI,GAAGA,IAAI,CAACxG,KAAL,CAAW,GAAX,CAAP;AACA,UAAI4G,SAAS,GAAGJ,IAAI,CAAC,CAAD,CAApB;AACAA,MAAAA,IAAI,GAAGA,IAAI,CAAC,CAAD,CAAJ,IAAW,aAAlB;;AAEA,UAAIK,EAAE,GAAG,QAAKH,KAAL,CAAWC,KAAX,CAAiB,gCAAjB,CAAT;;AACA,UAAIE,EAAJ,EAAQ;AACPA,QAAAA,EAAE,GAAGA,EAAE,CAAC,CAAD,CAAF,CAAM7G,KAAN,CAAY,GAAZ,CAAL;AACA6G,QAAAA,EAAE,GAAG,SAASA,EAAE,CAAC,CAAD,CAAX,GAAiB,WAAjB,GAA+BA,EAAE,CAAC,CAAD,CAAjC,GAAuC,IAA5C;AACA,OAHD,MAGOA,EAAE,GAAG,GAAL;;AAEP/V,MAAAA,CAAC,GAAGA,CAAC,IAAI,EAAT;AAEA,UAAImN,CAAC,GAAGgI,aAAa,CAACW,SAAD,CAAb,CAAyBJ,IAAzB,CAAR;AACA,UAAIM,GAAJ;AACA,UAAI7I,CAAC,CAACmI,IAAN,EAAYU,GAAG,GAAG7I,CAAC,CAACmI,IAAF,GAASS,EAAf,CAAZ,KACKC,GAAG,GAAGb,aAAa,CAACC,OAAd,CAAsB3qB,IAAI,CAACuZ,KAAL,CAAWvZ,IAAI,CAACmI,MAAL,KAAgBuiB,aAAa,CAACC,OAAd,CAAsBpoB,MAAjD,CAAtB,IAAkF+oB,EAAxF;AACL,UAAIJ,QAAQ,KAAK7oB,SAAjB,EAA4BqgB,CAAC,GAAGA,CAAC,CAACwI,QAAD,CAAL;AAC5BxI,MAAAA,CAAC,GAAGA,CAAC,CAAC8D,OAAF,CAAU,aAAV,EAAyB,UAAC9D,CAAD,EAAI7hB,CAAJ,EAAU;AACtC,eAAO0U,CAAC,CAAC1U,CAAD,CAAR;AACA,OAFG,CAAJ;AAGA0qB,MAAAA,GAAG,IAAI7I,CAAP;;AAEA7kB,MAAAA,EAAE,CAAC2tB,cAAH,CAAkBD,GAAlB,EAAuBN,IAAvB;;AApC8B;AAqC9B;;AA7jMuD;AAAA,mCAuhM7B9sB,KAvhM6B;;AAgkMzD,OAAKsD,MAAL,GAAcA,MAAd;AACA,OAAKgB,eAAL,GAAuBA,eAAvB;AACA,OAAKH,KAAL,GAAaA,KAAb;AACA,OAAKggB,KAAL,GAAaA,KAAb;AACA,OAAKwH,MAAL,GAAcA,MAAd;AAEA;AACD;AACA;AACA;AACA;;AACC,OAAK7mB,UAAL,GAAkB,IAAIX,KAAJ,EAAlB;AACA,OAAKW,UAAL,CAAgByb,QAAhB,GAA2B,IAA3B;AACA,OAAKzb,UAAL,CAAgB1D,QAAhB,GAA2B,CAA3B;AAEA;AACD;AACA;AACA;AACA;AACA;;AACC,OAAKwC,KAAL,GAAa,IAAIugB,KAAJ,EAAb;AAEA;AACD;AACA;AACA;AACA;AACA;;AACC,OAAKtH,KAAL,GAAa,CAAb;AAEA;AACD;AACA;AACA;AACA;;AACC,OAAK/D,MAAL,GAAc,IAAI0M,MAAJ,EAAd;AAEA;AACD;AACA;AACA;AACA;AACA;;AACC;AACD;AACA;AACA;AACA;;AACC;AACD;AACA;AACA;AACA;;AACC;AACD;AACA;AACA;AACA;;AAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9oM0D,MA+oMnD8H,WA/oMmD;AAgpMxD,2BAAc;AAAA;;AACb;AACH;AACA;AACA;AACA;AACA;AACA;AACG,WAAKC,aAAL,GAAqB,EAArB;AACA;AAED;AACF;AACA;AACA;AACA;;;AA/pM0D;AAAA;AAAA,aAgqMxD,cAAKC,MAAL,EAAa;AAAA,qDACIA,MADJ;AAAA;;AAAA;AACZ,oEAAwB;AAAA,gBAAflM,GAAe;AACvB,iBAAKA,GAAL,IAAY,CAAZ;AACA;AAHW;AAAA;AAAA;AAAA;AAAA;AAIZ;AAED;AACF;AACA;AACA;AACA;AACA;;AA3qM0D;AAAA;AAAA,aA4qMxD,YAAGA,GAAH,EAAQ;AACP,eAAOA,GAAP;AACA;AAED;AACF;AACA;AACA;AACA;;AAprM0D;AAAA;AAAA,aAqrMxD,iBAAQA,GAAR,EAAa;AAAA;;AACZ,gBAAAA,GAAG,UAAH,6BAAAA,GAAG,GAAK,KAAKmM,OAAb;AACA,YAAI,KAAKnM,GAAL,MAAcpd,SAAlB,EAA6Bod,GAAG,GAAG,KAAKoM,EAAL,CAAQpM,GAAR,CAAN;AAC7B,eAAO,KAAKA,GAAL,KAAa,CAAb,IAAkB,KAAKA,GAAL,KAAa,CAAC,CAAvC;AACA;AAED;AACF;AACA;AACA;AACA;;AA/rM0D;AAAA;AAAA,aAgsMxD,kBAASA,GAAT,EAAc;AAAA;;AACb,iBAAAA,GAAG,UAAH,+BAAAA,GAAG,GAAK,KAAKmM,OAAb;AACA,YAAI,KAAKnM,GAAL,MAAcpd,SAAlB,EAA6Bod,GAAG,GAAG,KAAKoM,EAAL,CAAQpM,GAAR,CAAN;AAC7B,YAAI,KAAKA,GAAL,KAAa,CAAC,CAAlB,EAAqB,OAAO,CAAP;AACrB,eAAO,KAAKA,GAAL,IAAY,CAAZ,GAAgB,KAAKA,GAAL,CAAhB,GAA4B,CAAnC;AACA;AAED;AACF;AACA;AACA;AACA;;AA3sM0D;AAAA;AAAA,aA4sMxD,iBAAQA,GAAR,EAAa;AACZ,eAAO,KAAKL,QAAL,CAAcK,GAAd,CAAP;AACA;AAED;AACF;AACA;AACA;AACA;;AAptM0D;AAAA;AAAA,aAqtMxD,eAAMA,GAAN,EAAW;AAAA;;AACV,iBAAAA,GAAG,UAAH,+BAAAA,GAAG,GAAK,KAAKmM,OAAb;AACA,YAAI,KAAKnM,GAAL,MAAcpd,SAAlB,EAA6Bod,GAAG,GAAG,KAAKoM,EAAL,CAAQpM,GAAR,CAAN;AAC7B,eAAO,KAAKA,GAAL,KAAa,KAAKiM,aAAzB;AACA;AAED;AACF;AACA;AACA;AACA;;AA/tM0D;AAAA;AAAA,aAguMxD,iBAAQjM,GAAR,EAAa;AAAA;;AACZ,iBAAAA,GAAG,UAAH,+BAAAA,GAAG,GAAK,KAAKmM,OAAb;AACA,YAAI,KAAKnM,GAAL,MAAcpd,SAAlB,EAA6Bod,GAAG,GAAG,KAAKoM,EAAL,CAAQpM,GAAR,CAAN;AAC7B,eAAO,KAAKA,GAAL,KAAa,KAAKiM,aAAlB,GAAkC,KAAKjM,GAAL,CAAlC,GAA8C,CAArD;AACA;AAED;AACF;AACA;AACA;AACA;;AA1uM0D;AAAA;AAAA,aA2uMxD,cAAKA,GAAL,EAAU;AAAA;;AACT,iBAAAA,GAAG,UAAH,+BAAAA,GAAG,GAAK,KAAKmM,OAAb;AACA,YAAI,KAAKnM,GAAL,MAAcpd,SAAlB,EAA6Bod,GAAG,GAAG,KAAKoM,EAAL,CAAQpM,GAAR,CAAN;AAC7B,eAAO,KAAKA,GAAL,KAAa,CAAC,CAArB;AACA;AAED;AACF;AACA;AACA;AACA;;AArvM0D;AAAA;AAAA,aAsvMxD,kBAASA,GAAT,EAAc;AAAA;;AACb,iBAAAA,GAAG,UAAH,+BAAAA,GAAG,GAAK,KAAKmM,OAAb;AACA,YAAI,KAAKnM,GAAL,MAAcpd,SAAlB,EAA6Bod,GAAG,GAAG,KAAKoM,EAAL,CAAQpM,GAAR,CAAN;AAC7B,eAAO,KAAKA,GAAL,KAAa,CAAC,CAArB;AACA;AA1vMuD;AAAA;AAAA,aA4vMxD,kBAASA,GAAT,EAAc;AACb,eAAO,KAAKL,QAAL,CAAcK,GAAd,CAAP;AACA;AA9vMuD;;AAAA;AAAA;;AAAA,MAiwMnDqM,KAjwMmD;AAAA;;AAAA;;AAkwMxD,qBAAc;AAAA;;AAAA;;AACb;;AACA,UAAIxnB,KAAK,kCAAT,CAFa,CAIb;;;AACA,cAAKE,SAAL,GAAiB;AAChB,YAAIhF,CAAJ,GAAQ;AACP,iBAAO8E,KAAK,CAAC9E,CAAb;AACA,SAHe;;AAIhB,YAAIA,CAAJ,CAAMO,GAAN,EAAW;AACVuE,UAAAA,KAAK,CAAC9E,CAAN,GAAUO,GAAV;AACA,SANe;;AAOhB,YAAIN,CAAJ,GAAQ;AACP,iBAAO6E,KAAK,CAAC7E,CAAb;AACA,SATe;;AAUhB,YAAIA,CAAJ,CAAMM,GAAN,EAAW;AACVuE,UAAAA,KAAK,CAAC7E,CAAN,GAAUM,GAAV;AACA;;AAZe,OAAjB;AAeA,UAAI4rB,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,EAAmB,QAAnB,EAA6B,OAA7B,CAAb;;AACA,cAAKI,IAAL,CAAUJ,MAAV;;AACA,cAAKC,OAAL,GAAe,MAAf;AACA,cAAKI,SAAL,GAAiB,KAAjB;AACA,cAAKlD,UAAL,GAAkB,KAAlB;AACA,cAAK5R,MAAL,GAAc,KAAd;AAEA;AACH;AACA;AACA;AACA;;AACG,cAAK1X,CAAL;AAEA;AACH;AACA;AACA;AACA;;AACG,cAAKC,CAAL;AAvCa;AAwCb;AAED;AACF;AACA;AACA;;;AA/yM0D;AAAA;AAAA,WAgzMxD,eAAU;AACT,eAAO,KAAK+E,SAAZ;AACA;AACD;AACF;AACA;AACA;;AAtzM0D;AAAA;AAAA,WAuzMxD,eAAe;AACd,eAAO,KAAKA,SAAZ;AACA;AAzzMuD;AAAA;AAAA,aA2zMxD,YAAGib,GAAH,EAAQ;AACP,YAAIA,GAAG,CAAC9e,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAJ,EAAqB8e,GAAG,GAAG,MAAN,CAArB,KACK,IAAIA,GAAG,CAAC9e,KAAJ,CAAU,CAAV,EAAa,CAAb,KAAmB,OAAvB,EAAgC8e,GAAG,GAAG,OAAN,CAAhC,KACA,IAAIA,GAAG,CAAC9e,KAAJ,CAAU,CAAV,EAAa,CAAb,KAAmB,QAAvB,EAAiC8e,GAAG,GAAG,QAAN,CAAjC,KACAA,GAAG,GAAGA,GAAG,CAAC9Q,WAAJ,EAAN;AACL,eAAO8Q,GAAP;AACA;AAED;AACF;AACA;AACA;AACA;;AAv0M0D;AAAA;AAAA,aAw0MxD,kBAASA,GAAT,EAAc;AAAA;;AACb,iBAAAA,GAAG,UAAH,+BAAAA,GAAG,GAAK,KAAKmM,OAAb;AACA,aAAKI,SAAL,GAAiB,IAAjB;AACA,eAAO,KAAKvM,GAAL,KAAa,KAAKiM,aAAlB,GAAkC,KAAKjM,GAAL,CAAlC,GAA8C,CAArD;AACA;AA50MuD;;AAAA;AAAA,IAiwMrCgM,WAjwMqC;;AA+0MzD,OAAKxlB,KAAL,GAAa,IAAI6lB,KAAJ,EAAb;;AA/0MyD,MAi1MnD5lB,WAj1MmD;AAAA;;AAAA;;AAk1MxD,2BAAc;AAAA;;AAAA;;AACb;AACA,cAAK+lB,KAAL,GAAa,CAAb;AAFa;AAGb;AAED;AACF;AACA;AACA;;;AA11M0D;AAAA;AAAA,aA21MxD,kBAAS;AACR,eAAO,KAAKA,KAAL,IAAc,CAArB;AACA;AAED;AACF;AACA;AACA;;AAl2M0D;AAAA;AAAA,aAm2MxD,oBAAW;AACV,eAAO,KAAKA,KAAL,GAAa,CAAb,GAAiB,KAAKA,KAAtB,GAA8B,CAArC;AACA;AAED;AACF;AACA;AACA;;AA12M0D;AAAA;AAAA,aA22MxD,mBAAU;AACT,eAAO,KAAKA,KAAL,IAAc,CAAC,CAAtB;AACA;AA72MuD;;AAAA;AAAA,IAi1M/BH,KAj1M+B;;AAg3MzD,MAAMI,YAAY,GAAG,KAAKA,YAA1B;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAUC,GAAV,EAAe;AACpC,SAAKnmB,KAAL,CAAWmmB,GAAX;AACA,SAAKnmB,KAAL,CAAWiR,MAAX,GAAoB,IAApB;AAEA,QAAImV,EAAJ;;AACA,QAAI,KAAK1tB,MAAL,CAAYO,YAAZ,CAAyBqD,MAA7B,EAAqC;AACpC8pB,MAAAA,EAAE,GAAG,KAAK1tB,MAAL,CAAYO,YAAZ,CAAyB,CAAzB,CAAL;AACAmtB,MAAAA,EAAE,CAACpmB,KAAH,CAASmmB,GAAT,IAAgB,CAAhB,CAFoC,CAGpC;AACA;;AACA,UAAI,KAAKztB,MAAL,CAAYM,WAAhB,EAA6B;AAC5B,aAAKN,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BmmB,GAA9B,IAAqC,CAArC;;AACA,YAAIA,GAAG,IAAI,MAAX,EAAmB;AAClB,eAAKztB,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8B+lB,SAA9B,GAA0C,KAA1C;AACA;AACD;;AACD,WAAKrtB,MAAL,CAAYM,WAAZ,GAA0BotB,EAA1B;AACA;AACD,GAlBD;;AAoBA,OAAKH,YAAL,GAAoB,UAAU3W,CAAV,EAAa;AAChC,QAAI6W,GAAG,GAAG,MAAV;AACA,QAAI7W,CAAC,CAAC+W,MAAF,KAAa,CAAjB,EAAoBF,GAAG,GAAG,QAAN,CAApB,KACK,IAAI7W,CAAC,CAAC+W,MAAF,KAAa,CAAjB,EAAoBF,GAAG,GAAG,OAAN;;AAEzBD,IAAAA,aAAa,CAACvnB,IAAd,CAAmB,IAAnB,EAAyBwnB,GAAzB;;AAEAF,IAAAA,YAAY,CAACtnB,IAAb,CAAkB,IAAlB,EAAwB2Q,CAAxB;AACA,GARD;;AAUA,MAAMgX,aAAa,GAAG,KAAKA,aAA3B;;AAEA,OAAKA,aAAL,GAAqB,UAAUhX,CAAV,EAAa;AACjC4W,IAAAA,aAAa,CAACvnB,IAAd,CAAmB,IAAnB,EAAyB,MAAzB;;AACA2nB,IAAAA,aAAa,CAAC3nB,IAAd,CAAmB,IAAnB,EAAyB2Q,CAAzB;AACA,GAHD;;AAKA,MAAMiX,UAAU,GAAG,KAAKA,UAAxB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAUL,GAAV,EAAe;AAClC,QAAI,KAAKnmB,KAAL,CAAWmmB,GAAX,KAAmB,KAAKnmB,KAAL,CAAWylB,aAAlC,EAAiD;AAChD,WAAKzlB,KAAL,CAAWmmB,GAAX,IAAkB,CAAC,CAAnB;AACA,KAFD,MAEO,IAAI,KAAKnmB,KAAL,CAAWmmB,GAAX,IAAkB,CAAtB,EAAyB,KAAKnmB,KAAL,CAAWmmB,GAAX,IAAkB,CAAC,CAAnB,CAAzB,KACF,KAAKnmB,KAAL,CAAWmmB,GAAX,IAAkB,CAAC,CAAnB;;AAEL,QAAI,KAAKztB,MAAL,CAAYM,WAAhB,EAA6B;AAC5B,UAAI,KAAKN,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BgmB,KAA9B,GAAsC,CAA1C,EAA6C;AAC5C,YAAI,KAAKttB,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BmmB,GAA9B,KAAsC,KAAKnmB,KAAL,CAAWylB,aAArD,EAAoE;AACnE,eAAK/sB,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BmmB,GAA9B,IAAqC,CAAC,CAAtC;AACA,SAFD,MAEO,IAAI,KAAKztB,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BmmB,GAA9B,IAAqC,CAAzC,EAA4C;AAClD,eAAKztB,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BmmB,GAA9B,IAAqC,CAAC,CAAtC;AACA,SAFM,MAEA;AACN,eAAKztB,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BmmB,GAA9B,IAAqC,CAAC,CAAtC;AACA;AACD,OARD,MAQO;AACN,aAAKztB,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BmmB,GAA9B,IAAqC,CAArC;AACA,aAAKztB,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8B+lB,SAA9B,GAA0C,KAA1C;AACA;AACD;AACD,GApBD;;AAsBA,OAAKQ,UAAL,GAAkB,UAAUjX,CAAV,EAAa;AAC9B,QAAI6W,GAAG,GAAG,MAAV;AACA,QAAI7W,CAAC,CAAC+W,MAAF,KAAa,CAAjB,EAAoBF,GAAG,GAAG,QAAN,CAApB,KACK,IAAI7W,CAAC,CAAC+W,MAAF,KAAa,CAAjB,EAAoBF,GAAG,GAAG,OAAN;;AAEzBK,IAAAA,WAAW,CAAC7nB,IAAZ,CAAiB,IAAjB,EAAuBwnB,GAAvB;;AACAI,IAAAA,UAAU,CAAC5nB,IAAX,CAAgB,IAAhB,EAAsB2Q,CAAtB;AACA,GAPD;;AASA,MAAMmX,WAAW,GAAG,KAAKA,WAAzB;;AAEA,OAAKA,WAAL,GAAmB,UAAUnX,CAAV,EAAa;AAC/BkX,IAAAA,WAAW,CAAC7nB,IAAZ,CAAiB,IAAjB,EAAuB,MAAvB;;AACA8nB,IAAAA,WAAW,CAAC9nB,IAAZ,CAAiB,IAAjB,EAAuB2Q,CAAvB;AACA,GAHD;;AA17MyD,MA+7MnDoX,QA/7MmD;AAAA;;AAAA;;AAg8MxD,wBAAc;AAAA;;AAAA;;AACb;AACA,cAAKf,OAAL,GAAe,GAAf;AAFa;AAGb;;AAn8MuD;AAAA;AAAA,aAq8MxD,YAAGnM,GAAH,EAAQ;AACP,YAAIA,GAAG,CAACld,MAAJ,IAAc,CAAlB,EAAqB,OAAOkd,GAAG,CAAC9Q,WAAJ,EAAP;;AACrB,YAAI,CAACnN,KAAK,CAACie,GAAD,CAAV,EAAiB;AAChB,cAAIA,GAAG,IAAI,EAAX,EAAe,OAAO,SAAP;AACf,cAAIA,GAAG,IAAI,EAAX,EAAe,OAAO,WAAP;AACf,cAAIA,GAAG,IAAI,EAAX,EAAe,OAAO,WAAP;AACf,cAAIA,GAAG,IAAI,EAAX,EAAe,OAAO,YAAP;AACf,gBAAM,IAAIthB,KAAJ,CACL,iKADK,CAAN;AAGA;;AACD,YAAIshB,GAAG,IAAI,OAAP,IAAkBA,GAAG,IAAI,UAA7B,EAAyC,OAAO,GAAP;AACzC,eAAOA,GAAG,CAAC,CAAD,CAAH,CAAOmN,WAAP,KAAuBnN,GAAG,CAAC9e,KAAJ,CAAU,CAAV,EAAagO,WAAb,EAA9B;AACA;AAl9MuD;AAAA;AAAA,WAo9MxD,eAAY;AACX,eAAO,KAAK,GAAL,CAAP;AACA;AAt9MuD;AAAA;AAAA,WAu9MxD,eAAe;AACd,eAAO,KAAK,GAAL,CAAP;AACA;AAz9MuD;;AAAA;AAAA,IA+7MlC8c,WA/7MkC;;AA49MzD,OAAKoB,EAAL,GAAU,IAAIF,QAAJ,EAAV;AACA,OAAKG,QAAL,GAAgB,KAAKD,EAArB;;AAEA,MAAIvD,SAAS,CAACwD,QAAd,EAAwB;AACvB,QAAMA,QAAQ,GAAGxD,SAAS,CAACwD,QAA3B;;AACA,QAAI7uB,MAAM,IAAIA,MAAM,CAAC2iB,GAArB,EAA0B;AACzBkM,MAAAA,QAAQ,CAACC,YAAT,GAAwBC,IAAxB,CAA6B,UAACC,iBAAD,EAAuB;AACnD,YAAMrE,GAAG,GAAGqE,iBAAiB,CAACloB,GAAlB,CAAsB,MAAtB,CAAZ;AACA,YAAI6jB,GAAG,IAAI,GAAX,EAAgB,OAAI,CAACjqB,MAAL,CAAYQ,mBAAZ,GAAkC,IAAlC;AAChB,OAHD;AAIA,KALD,MAKO;AACN,WAAKR,MAAL,CAAYQ,mBAAZ,GAAkC,IAAlC;AACA;AACD,GAVD,MAUO;AACN;AACA;AACA,SAAKR,MAAL,CAAYQ,mBAAZ,GAAkC,IAAlC;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACC,OAAK+tB,SAAL,GAAiB,UAAUC,OAAV,EAAmB;AACnC,UAAM,IAAIhvB,KAAJ,0kBAAN;AAGA,GAJD;AAMA;AACD;AACA;AACA;AACA;;;AACC,WAASivB,eAAT,CAAyB7X,CAAzB,EAA4B;AAC3B,QAAI8X,IAAI,GAAG9X,CAAC,CAAC8X,IAAb;;AACA,QAAIA,IAAI,CAAC9qB,MAAL,IAAe,CAAf,IAAoB8qB,IAAI,CAAC1sB,KAAL,CAAW,CAAX,EAAc,CAAd,KAAoB,KAA5C,EAAmD;AAClD,aAAO0sB,IAAI,CAAC,CAAD,CAAJ,CAAQ1e,WAAR,EAAP;AACA;;AACD,WAAO4G,CAAC,CAACqT,GAAT;AACA;;AAED,MAAI0E,iBAAiB,GAAG;AACvB5rB,IAAAA,CAAC,EAAE,IADoB;AAEvBqH,IAAAA,CAAC,EAAE,MAFoB;AAGvBxH,IAAAA,CAAC,EAAE,MAHoB;AAIvByG,IAAAA,CAAC,EAAE,OAJoB;AAKvBulB,IAAAA,OAAO,EAAE,IALc;AAMvBC,IAAAA,SAAS,EAAE,MANY;AAOvBC,IAAAA,SAAS,EAAE,MAPY;AAQvBC,IAAAA,UAAU,EAAE,OARW;AASvBhkB,IAAAA,CAAC,EAAE,KAToB;AAUvByL,IAAAA,CAAC,EAAE,OAVoB;AAWvBrL,IAAAA,CAAC,EAAE,OAXoB;AAYvBhJ,IAAAA,CAAC,EAAE;AAZoB,GAAxB;AAeA,MAAM6sB,UAAU,GAAG,KAAKA,UAAxB;;AAEA,OAAKA,UAAL,GAAkB,UAAUpY,CAAV,EAAa;AAC9B,QAAIqT,GAAG,GAAGrT,CAAC,CAACqT,GAAZ;;AACA,QAAI,KAAKjqB,MAAL,CAAYQ,mBAAhB,EAAqC;AACpCypB,MAAAA,GAAG,GAAGwE,eAAe,CAAC7X,CAAD,CAArB;AACA;;AACD,QAAIzN,IAAI,GAAG,CAAC8gB,GAAD,CAAX;AACA,QAAIzT,CAAC,GAAGmY,iBAAiB,CAAC1E,GAAD,CAAzB;AACA,QAAIzT,CAAJ,EAAOrN,IAAI,CAAC5E,IAAL,CAAUiS,CAAV;;AACP,+BAAcrN,IAAd,+BAAoB;AAAf,UAAIqN,EAAC,cAAL;;AACJ,UAAI,CAAC,KAAK0X,EAAL,CAAQ1X,EAAR,CAAD,IAAe,KAAK0X,EAAL,CAAQ1X,EAAR,IAAa,CAAhC,EAAmC;AAClC,aAAK0X,EAAL,CAAQ1X,EAAR,IAAa,CAAb;AACA;AACD;;AACDwY,IAAAA,UAAU,CAAC/oB,IAAX,CAAgB,IAAhB,EAAsB2Q,CAAtB;AACA,GAdD;;AAgBA,MAAMqY,QAAQ,GAAG,KAAKA,QAAtB;;AAEA,OAAKA,QAAL,GAAgB,UAAUrY,CAAV,EAAa;AAC5B,QAAIqT,GAAG,GAAGrT,CAAC,CAACqT,GAAZ;;AACA,QAAI,KAAKjqB,MAAL,CAAYQ,mBAAhB,EAAqC;AACpCypB,MAAAA,GAAG,GAAGwE,eAAe,CAAC7X,CAAD,CAArB;AACA;;AACD,QAAIzN,IAAI,GAAG,CAAC8gB,GAAD,CAAX;AACA,QAAIzT,CAAC,GAAGmY,iBAAiB,CAAC1E,GAAD,CAAzB;AACA,QAAIzT,CAAJ,EAAOrN,IAAI,CAAC5E,IAAL,CAAUiS,CAAV;;AACP,gCAAcrN,IAAd,gCAAoB;AAAf,UAAIqN,GAAC,eAAL;;AACJ,UAAI,KAAK0X,EAAL,CAAQ1X,GAAR,KAAc,KAAK0X,EAAL,CAAQnB,aAA1B,EAAyC;AACxC,aAAKmB,EAAL,CAAQ1X,GAAR,IAAa,CAAC,CAAd;AACA,OAFD,MAEO,IAAI,KAAK0X,EAAL,CAAQ1X,GAAR,IAAa,CAAjB,EAAoB,KAAK0X,EAAL,CAAQ1X,GAAR,IAAa,CAAC,CAAd,CAApB,KACF,KAAK0X,EAAL,CAAQ1X,GAAR,IAAa,CAAC,CAAd;AACL;;AAEDyY,IAAAA,QAAQ,CAAChpB,IAAT,CAAc,IAAd,EAAoB2Q,CAApB;AACA,GAhBD;;AA3iNyD,MA6jNnDsY,MA7jNmD;AAAA;;AAAA;;AA8jNxD,oBAAYC,EAAZ,EAAgB;AAAA;;AAAA;;AACf;AACA,UAAInC,MAAM,GAAG,CACZ,GADY,EAEZ,GAFY,EAGZ,GAHY,EAIZ,GAJY,EAKZ,GALY,EAMZ,GANY,EAOZ,IAPY,EAQZ,IARY,EASZ,QATY,EAUZ,OAVY,EAWZ,IAXY,EAYZ,MAZY,EAaZ,MAbY,EAcZ,OAdY,EAeZ,aAfY,EAgBZ,cAhBY,CAAb;;AAkBA,cAAKI,IAAL,CAAUJ,MAAV;;AAEA,cAAKoC,SAAL,GAAiB;AAChBvuB,QAAAA,CAAC,EAAE,CADa;AAEhBC,QAAAA,CAAC,EAAE,CAFa;AAGhB2sB,QAAAA,GAAG,EAAE;AAHW,OAAjB;AAMA,cAAK4B,UAAL,GAAkB;AACjBxuB,QAAAA,CAAC,EAAE,CADc;AAEjBC,QAAAA,CAAC,EAAE,CAFc;AAGjB2sB,QAAAA,GAAG,EAAE;AAHY,OAAlB;AAMA,cAAK6B,KAAL,GAAa;AACZ1sB,QAAAA,CAAC,EAAE,CADS;AAEZ4U,QAAAA,CAAC,EAAE,CAFS;AAGZ3W,QAAAA,CAAC,EAAE,CAHS;AAIZC,QAAAA,CAAC,EAAE,CAJS;AAKZqB,QAAAA,CAAC,EAAE,CALS;AAMZmd,QAAAA,CAAC,EAAE,CANS;AAOZiQ,QAAAA,EAAE,EAAE,CAPQ;AAQZC,QAAAA,EAAE,EAAE,CARQ;AASZC,QAAAA,MAAM,EAAE,CATI;AAUZxT,QAAAA,KAAK,EAAE,CAVK;AAWZyT,QAAAA,eAAe,EAAE,EAXL;AAYZC,QAAAA,gBAAgB,EAAE,EAZN;AAaZle,QAAAA,EAAE,EAAE,EAbQ;AAcZC,QAAAA,IAAI,EAAE,EAdM;AAeZC,QAAAA,IAAI,EAAE,EAfM;AAgBZC,QAAAA,KAAK,EAAE;AAhBK,OAAb;AAkBA,cAAKge,KAAL,GAAa;AACZR,QAAAA,SAAS,EAAE;AACVvuB,UAAAA,CAAC,EAAE,CADO;AAEVC,UAAAA,CAAC,EAAE;AAFO,SADC;AAKZuuB,QAAAA,UAAU,EAAE;AACXxuB,UAAAA,CAAC,EAAE,CADQ;AAEXC,UAAAA,CAAC,EAAE;AAFQ,SALA;AASZ+uB,QAAAA,WAAW,EAAE,CATD;AAUZC,QAAAA,YAAY,EAAE;AAVF,OAAb,CApDe,CAiEf;AACA;AACA;;AACA,UAAIX,EAAE,CAACY,EAAH,CAAMtT,QAAN,CAAe,SAAf,CAAJ,EAA+B;AAC9B,gBAAK6S,KAAL,CAAW1sB,CAAX,GAAe,CAAf;AACA,gBAAK0sB,KAAL,CAAW9X,CAAX,GAAe,CAAf;AACA,gBAAK8X,KAAL,CAAWzuB,CAAX,GAAe,CAAf;AACA,gBAAKyuB,KAAL,CAAWxuB,CAAX,GAAe,CAAf;AACA;;AAEDpB,MAAAA,GAAG,CAACyvB,EAAD,CAAH;AAEA,cAAKa,OAAL,GAAeb,EAAf;AACA,cAAKY,EAAL,GAAUZ,EAAE,CAACY,EAAb;AA9Ee;AA+Ef;;AA7oNuD;AAAA;AAAA,aA+oNxD,YAAGjP,GAAH,EAAQ;AACP,eAAOA,GAAG,CAAC9Q,WAAJ,EAAP;AACA;AAjpNuD;AAAA;AAAA,aAmpNxD,mBAAU;AACT,aAAKggB,OAAL,GAAerF,SAAS,CAACsF,WAAV,GAAwB,KAAKD,OAAL,CAAaE,KAArC,CAAf;AACA,YAAI,CAAC,KAAKF,OAAV,EAAmB;AAEnB,YAAIG,GAAG,GAAG,KAAKH,OAAf,CAJS,CAMT;;AACA,aAAK,IAAIhU,IAAT,IAAiB,KAAKsT,KAAtB,EAA6B;AAC5B,cAAI1M,GAAG,GAAG,KAAK0M,KAAL,CAAWtT,IAAX,CAAV;AACA,cAAImU,GAAG,CAACC,OAAJ,CAAYxN,GAAZ,EAAiBvC,OAArB,EAA8B,KAAKrE,IAAL,IAA9B,KACK,KAAKA,IAAL,IAAa,CAAb;AACL,SAXQ,CAaT;;;AACA,aAAKoT,SAAL,CAAevuB,CAAf,GAAmBsvB,GAAG,CAACE,IAAJ,CAAS,KAAKT,KAAL,CAAWR,SAAX,CAAqBvuB,CAA9B,CAAnB;AACA,aAAKuuB,SAAL,CAAetuB,CAAf,GAAmBqvB,GAAG,CAACE,IAAJ,CAAS,KAAKT,KAAL,CAAWR,SAAX,CAAqBtuB,CAA9B,CAAnB;AAEA,aAAKuuB,UAAL,CAAgBxuB,CAAhB,GAAoBsvB,GAAG,CAACE,IAAJ,CAAS,KAAKT,KAAL,CAAWP,UAAX,CAAsBxuB,CAA/B,CAApB;AACA,aAAKwuB,UAAL,CAAgBvuB,CAAhB,GAAoBqvB,GAAG,CAACE,IAAJ,CAAS,KAAKT,KAAL,CAAWP,UAAX,CAAsBvuB,CAA/B,CAApB,CAlBS,CAoBT;;AACA,YAAIqvB,GAAG,CAACE,IAAJ,CAAS,KAAKT,KAAL,CAAWC,WAApB,MAAqCnsB,SAAzC,EAAoD;AACnD,eAAKmsB,WAAL,GAAmBM,GAAG,CAACE,IAAJ,CAAS,KAAKT,KAAL,CAAWC,WAApB,CAAnB;AACA,eAAKC,YAAL,GAAoBK,GAAG,CAACE,IAAJ,CAAS,KAAKT,KAAL,CAAWE,YAApB,CAApB;AACA,SAHD,MAGO;AACN,eAAKD,WAAL,GAAmBM,GAAG,CAACC,OAAJ,CAAY,KAAKd,KAAL,CAAWC,EAAvB,EAA2Be,KAA9C;AACA,eAAKR,YAAL,GAAoBK,GAAG,CAACC,OAAJ,CAAY,KAAKd,KAAL,CAAWE,EAAvB,EAA2Bc,KAA/C;AACA;;AAED,eAAO,IAAP,CA7BS,CA6BI;AACb;AAjrNuD;;AAAA;AAAA,IA6jNpCxD,WA7jNoC;;AAAA,MAorNnDyD,OAprNmD;AAAA;;AAAA;;AAqrNxD,uBAAc;AAAA;;AAAA;;AAAA;;AACb;;AACA,UAAI5qB,KAAK,kCAAT;;AACArG,MAAAA,MAAM,CAAC0qB,gBAAP,CAAwB,kBAAxB,EAA4C,UAACpT,CAAD,EAAO;AAClDjR,QAAAA,KAAK,CAAC6qB,UAAN,CAAiB5Z,CAAC,CAACoZ,OAAnB;AACA,OAFD,EAHa,CAMb;AACA;AACA;AACA;;AAEA,cAAK/C,OAAL,GAAe,GAAf;AAEA,UAAIwD,OAAO,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,SAAxB,EAAmC,OAAnC,EAA4C,SAA5C,EAAuD,MAAvD,EAA+D,UAA/D,CAAd;;AAba;AAcR,YAAI1M,CAAC,iBAAL;;AACJ,gBAAKA,CAAL,IAAU,UAACjD,GAAD,EAAS;AAClB,cAAI,QAAK,CAAL,CAAJ,EAAa,OAAO,QAAK,CAAL,EAAQiD,CAAR,EAAWjD,GAAX,CAAP;AACb,SAFD;AAfY;;AAcb,oCAAc2P,OAAd,kCAAuB;AAAA;AAItB;;AAED,UAAIzD,MAAM,GAAG,CACZ,GADY,EAEZ,GAFY,EAGZ,GAHY,EAIZ,GAJY,EAKZ,GALY,EAMZ,GANY,EAOZ,IAPY,EAQZ,IARY,EASZ,QATY,EAUZ,OAVY,EAWZ,iBAXY,EAYZ,kBAZY,EAaZ,IAbY,EAcZ,MAdY,EAeZ,MAfY,EAgBZ,OAhBY,CAAb;;AApBa;AAsCR,YAAIlM,GAAG,gBAAP;AACJ5a,QAAAA,MAAM,CAACC,cAAP,kCAA4B2a,GAA5B,EAAiC;AAChC1a,UAAAA,GADgC,iBAC1B;AACL,gBAAIT,KAAK,CAAC,CAAD,CAAT,EAAc,OAAOA,KAAK,CAAC,CAAD,CAAL,CAASmb,GAAT,CAAP;AACd,mBAAO,CAAP;AACA;AAJ+B,SAAjC;AAvCY;;AAsCb,mCAAgBkM,MAAhB,iCAAwB;AAAA;AAOvB;;AAED,UAAI9jB,KAAK,GAAG,CAAC,WAAD,EAAc,YAAd,CAAZ;;AA/Ca;AAgDR,YAAIJ,IAAI,gBAAR;AACJ,gBAAKA,IAAL,IAAa,EAAb;;AAjDY;AAkDP,cAAI4nB,IAAI,aAAR;AACJxqB,UAAAA,MAAM,CAACC,cAAP,CAAsB,QAAK2C,IAAL,CAAtB,EAAkC4nB,IAAlC,EAAwC;AACvCtqB,YAAAA,GADuC,iBACjC;AACL,kBAAIT,KAAK,CAAC,CAAD,CAAT,EAAc,OAAOA,KAAK,CAAC,CAAD,CAAL,CAASmD,IAAT,EAAe4nB,IAAf,CAAP;AACd,qBAAO,CAAP;AACA;AAJsC,WAAxC;AAnDW;;AAkDZ,kCAAiB,CAAC,GAAD,EAAM,GAAN,CAAjB,8BAA6B;AAAA;AAO5B;AAzDW;;AAgDb,mCAAiBxnB,KAAjB,iCAAwB;AAAA;AAUvB,OA1DY,CA4Db;AACA;AACA;;;AACA,UAAI,gBAACyhB,SAAD,uCAAC,WAAWsF,WAAZ,CAAJ,EAA6B,2CA/DhB,CAiEb;AACA;AACA;;AACA,UAAIU,GAAG,GAAGhG,SAAS,CAACsF,WAAV,EAAV;;AApEa,mDAqEEU,GArEF;AAAA;;AAAA;AAqEb,kEAAoB;AAAA,cAAXxB,EAAW;AACnB,cAAIA,EAAJ,EAAQ,QAAKqB,UAAL,CAAgBrB,EAAhB;AACR;AAvEY;AAAA;AAAA;AAAA;AAAA;;AAAA;AAwEb;;AA7vNuD;AAAA;AAAA,aA+vNxD,oBAAWA,EAAX,EAAe;AACd,YAAI,CAACA,EAAL,EAAS;AACTzvB,QAAAA,GAAG,CAAC,gBAAgB,KAAKkE,MAArB,GAA8B,cAA9B,GAA+CurB,EAAE,CAACY,EAAnD,CAAH;AACA,aAAKxrB,IAAL,CAAU,IAAI2qB,MAAJ,CAAWC,EAAX,CAAV;AACA;AAED;AACF;AACA;;AAvwN0D;AAAA;AAAA,aAwwNxD,mBAAU;AAAA,qDACK,IADL;AAAA;;AAAA;AACT,oEAAoB;AAAA,gBAAXlf,CAAW;;AACnBA,YAAAA,CAAC,CAACgH,OAAF;AACA;AAHQ;AAAA;AAAA;AAAA;AAAA;AAIT;AA5wNuD;;AAAA;AAAA,mCAorNnC/S,KAprNmC;;AA+wNzD,OAAK0sB,MAAL,GAAc,IAAIL,OAAJ,EAAd;AACA,OAAKM,WAAL,GAAmB,KAAKD,MAAxB;AACA,CAjxND,GAmxNA;;AACA1xB,EAAE,CAACC,SAAH,CAAaC,cAAb,CAA4B,KAA5B,EAAmC,YAAY;AAC9C,MAAI,KAAK+f,UAAL,IAAmB,CAAvB,EAA0B;AACzB,SAAK7G,MAAL,CAAYzX,CAAZ,GAAgB,KAAKuC,KAAL,CAAWwS,EAA3B;AACA,SAAK0C,MAAL,CAAYxX,CAAZ,GAAgB,KAAKsC,KAAL,CAAWyS,EAA3B;AACA,SAAKyC,MAAL,CAAY8U,IAAZ,GAAmB,IAAnB,CAHyB,CAKzB;;AACA,SAAKzjB,MAAL,CAAYqgB,gBAAZ,CAA6B,aAA7B,EAA4C,UAAC3S,KAAD;AAAA,aAAWA,KAAK,CAAC6S,cAAN,EAAX;AAAA,KAA5C;AACA;;AAED,OAAK5iB,KAAL,CAAWzG,CAAX,GAAe,CAAC,KAAKokB,MAAL,GAAc,KAAK7hB,KAAL,CAAWwS,EAA1B,IAAgC,KAAK0C,MAAL,CAAY+J,IAA5C,GAAmD,KAAK/J,MAAL,CAAYzX,CAA9E;AACA,OAAKyG,KAAL,CAAWxG,CAAX,GAAe,CAAC,KAAKokB,MAAL,GAAc,KAAK9hB,KAAL,CAAWyS,EAA1B,IAAgC,KAAKyC,MAAL,CAAY+J,IAA5C,GAAmD,KAAK/J,MAAL,CAAYxX,CAA9E;AAEA,OAAKwX,MAAL,CAAYhR,KAAZ,CAAkBzG,CAAlB,GAAsB,KAAKokB,MAA3B;AACA,OAAK3M,MAAL,CAAYhR,KAAZ,CAAkBxG,CAAlB,GAAsB,KAAKokB,MAA3B;;AAEA,OAAK0L,MAAL,CAAY3Z,OAAZ;AACA,CAjBD,GAmBA;;AACA/X,EAAE,CAACC,SAAH,CAAaC,cAAb,CAA4B,MAA5B,EAAoC,SAAS0xB,cAAT,GAA0B;AAC7D,OAAKzU,KAAL,GAAa,KAAK8C,UAAlB;;AAEA,MAAI,KAAKnf,MAAL,CAAYG,eAAhB,EAAiC;AAChC,SAAKmY,MAAL,CAAY4L,EAAZ;AACA,SAAK5f,UAAL,CAAgBsT,IAAhB;AACA,SAAKU,MAAL,CAAYyY,GAAZ;AACA,SAAK/wB,MAAL,CAAYG,eAAZ,GAA8B,IAA9B;AACA;;AAED,MAAI,KAAKH,MAAL,CAAYI,iBAAhB,EAAmC;AAClC,SAAKgmB,aAAL;AACA,SAAKpmB,MAAL,CAAYI,iBAAZ,GAAgC,IAAhC;AACA;;AAED,MAAI,KAAKkE,UAAL,CAAgByb,QAApB,EAA8B;AAC7B,SAAKzb,UAAL,CAAgB0sB,IAAhB,CAAqB,KAArB;AACA;;AAED,6BAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAhB,+BAA6C;AAAxC,QAAIvD,GAAG,cAAP;AACJ,QAAI,KAAKnmB,KAAL,CAAWmmB,GAAX,IAAkB,CAAtB,EAAyB,KAAKnmB,KAAL,CAAWmmB,GAAX,IAAkB,CAAlB,CAAzB,KACK,IAAI,KAAKnmB,KAAL,CAAWmmB,GAAX,IAAkB,CAAtB,EAAyB,KAAKnmB,KAAL,CAAWmmB,GAAX;;AAE9B,QAAI,KAAKztB,MAAL,CAAYM,WAAhB,EAA6B;AAC5B,UAAI,KAAKN,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BmmB,GAA9B,IAAqC,CAAzC,EAA4C;AAC3C,aAAKztB,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BmmB,GAA9B,IAAqC,CAArC;AACA;AACD;AACD;;AAED,OAAK,IAAIjX,CAAT,IAAc,KAAK0X,EAAnB,EAAuB;AACtB,QAAI1X,CAAC,IAAI,eAAT,EAA0B;AAC1B,QAAI,KAAK0X,EAAL,CAAQ1X,CAAR,IAAa,CAAjB,EAAoB,KAAK0X,EAAL,CAAQ1X,CAAR,IAAa,CAAb,CAApB,KACK,IAAI,KAAK0X,EAAL,CAAQ1X,CAAR,IAAa,CAAjB,EAAoB,KAAK0X,EAAL,CAAQ1X,CAAR;AACzB;;AAED,MAAI,KAAKxW,MAAL,CAAYK,aAAhB,EAA+B;AAC9B,QAAI,KAAKL,MAAL,CAAYM,WAAhB,EAA6B;AAC5B,UAAIc,GAAG,GAAG,CAAV;;AACA,iCAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAhB,+BAA6C;AAAxC,YAAIqsB,IAAG,cAAP;AACJrsB,QAAAA,GAAG,IAAI,KAAKpB,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BmmB,IAA9B,CAAP;AACA;;AACD,UAAIrsB,GAAG,IAAI,CAAX,EAAc,KAAKpB,MAAL,CAAYM,WAAZ,GAA0B,IAA1B;AACd;;AAED,QAAI+mB,OAAO,GAAG,KAAKZ,YAAL,CAAkB,KAAKnf,KAAL,CAAWzG,CAA7B,EAAgC,KAAKyG,KAAL,CAAWxG,CAA3C,CAAd;AACAumB,IAAAA,OAAO,CAACnE,IAAR,CAAa,UAACtgB,CAAD,EAAI4U,CAAJ;AAAA,aAAU,CAAC5U,CAAC,CAAC+D,KAAF,GAAU6Q,CAAC,CAAC7Q,KAAb,IAAsB,CAAC,CAAjC;AAAA,KAAb;AAEA,QAAIsqB,SAAS,GAAG,KAAKxK,YAAL,CAAkB,KAAKnO,MAAL,CAAYhR,KAAZ,CAAkBzG,CAApC,EAAuC,KAAKyX,MAAL,CAAYhR,KAAZ,CAAkBxG,CAAzD,EAA4D,KAAKwD,UAAjE,EAA6E,KAA7E,CAAhB;AACA2sB,IAAAA,SAAS,CAAC/N,IAAV,CAAe,UAACtgB,CAAD,EAAI4U,CAAJ;AAAA,aAAU,CAAC5U,CAAC,CAAC+D,KAAF,GAAU6Q,CAAC,CAAC7Q,KAAb,IAAsB,CAAC,CAAjC;AAAA,KAAf;AAEA0gB,IAAAA,OAAO,GAAGA,OAAO,CAAC6J,MAAR,CAAeD,SAAf,CAAV;AAEA,QAAIvD,EAAJ;;AACA,QAAI,KAAKpmB,KAAL,CAAW8Y,QAAX,CAAoB,MAApB,KAA+B,KAAK9Y,KAAL,CAAW8Y,QAAX,CAAoB,QAApB,CAA/B,IAAgE,KAAK9Y,KAAL,CAAW8Y,QAAX,CAAoB,OAApB,CAApE,EAAkG;AAAA;;AACjG;AACA,UAAI,2BAAC,KAAKpgB,MAAL,CAAYM,WAAb,kDAAC,sBAAyBgH,KAAzB,CAA+B+lB,SAAhC,CAAJ,EAA+C;AAC9C;AACA;AAF8C,qDAGhChG,OAHgC;AAAA;;AAAA;AAG9C,oEAAuB;AAAA,gBAAdjd,CAAc;;AACtB,gBAAIA,CAAC,IAAI,KAAKpK,MAAL,CAAYM,WAArB,EAAkC;AACjCotB,cAAAA,EAAE,GAAGtjB,CAAL;AACA;AACA;AACD;AAR6C;AAAA;AAAA;AAAA;AAAA;AAS9C,OATD,MASO;AACNsjB,QAAAA,EAAE,GAAG,KAAK1tB,MAAL,CAAYM,WAAjB;AACA,OAbgG,CAcjG;;;AACA,UAAIotB,EAAJ,EAAQ;AACPA,QAAAA,EAAE,CAACpmB,KAAH,CAASqK,IAAT,GAAgB,KAAKrK,KAAL,CAAWqK,IAA3B;AACA+b,QAAAA,EAAE,CAACpmB,KAAH,CAASyM,MAAT,GAAkB,KAAKzM,KAAL,CAAWyM,MAA7B;AACA2Z,QAAAA,EAAE,CAACpmB,KAAH,CAASsK,KAAT,GAAiB,KAAKtK,KAAL,CAAWsK,KAA5B;AACA8b,QAAAA,EAAE,CAACpmB,KAAH,CAASzG,CAAT,GAAa6sB,EAAE,CAAC7sB,CAAH,GAAO,KAAKyG,KAAL,CAAWzG,CAA/B;AACA6sB,QAAAA,EAAE,CAACpmB,KAAH,CAASxG,CAAT,GAAa4sB,EAAE,CAAC5sB,CAAH,GAAO,KAAKwG,KAAL,CAAWxG,CAA/B;AACA,OAND,MAMO,IAAI,KAAKd,MAAL,CAAYM,WAAhB,EAA6B;AACnC,aAAKN,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BqK,IAA9B,GAAqC,CAArC;AACA,aAAK3R,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8ByM,MAA9B,GAAuC,CAAvC;AACA,aAAK/T,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8BsK,KAA9B,GAAsC,CAAtC;AACA,aAAK5R,MAAL,CAAYM,WAAZ,CAAwBgH,KAAxB,CAA8B+lB,SAA9B,GAA0C,KAA1C;AACA;AACD;;AA7C6B,iDA+ChBhG,OA/CgB;AAAA;;AAAA;AA+C9B,gEAAuB;AAAA,YAAdjd,GAAc;AACtBA,QAAAA,GAAC,CAAC9C,KAAF,CAAQgmB,KAAR;AACA;AAjD6B;AAAA;AAAA;AAAA;AAAA;;AAAA,iDAmDhB,KAAKttB,MAAL,CAAYO,YAnDI;AAAA;;AAAA;AAmD9B,gEAAwC;AAAA;;AAAA,YAA/B6J,GAA+B;;AACvC,YAAI,CAAC,4BAAC,KAAKpK,MAAL,CAAYM,WAAb,mDAAC,uBAAyBgH,KAAzB,CAA+B+lB,SAAhC,KAA6CjjB,GAAC,IAAIsjB,EAAnD,KAA0D,CAACrG,OAAO,CAAC5K,QAAR,CAAiBrS,GAAjB,CAA/D,EAAoF;AACnFA,UAAAA,GAAC,CAAC9C,KAAF,CAAQgmB,KAAR,GAAgB,CAAC,CAAjB;AACAljB,UAAAA,GAAC,CAAC9C,KAAF,CAAQqK,IAAR,GAAe,CAAf;AACAvH,UAAAA,GAAC,CAAC9C,KAAF,CAAQyM,MAAR,GAAiB,CAAjB;AACA3J,UAAAA,GAAC,CAAC9C,KAAF,CAAQsK,KAAR,GAAgB,CAAhB;AACAxH,UAAAA,GAAC,CAAC9C,KAAF,CAAQ+lB,SAAR,GAAoB,KAApB;AACA;AACD;AA3D6B;AAAA;AAAA;AAAA;AAAA;;AA4D9B,SAAKrtB,MAAL,CAAYO,YAAZ,GAA2B8mB,OAA3B;AACA;;AAED,OAAK/O,MAAL,CAAYyY,GAAZ;AACA,CApGD;;;AClzNA,IAAII,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACnrB,IAAV,CAAe,IAAf,EAAqBurB,UAArB;AACA,OAAKC,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEL,MAAM,CAACC,MAAP,CAAcK,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUpwB,EAAV,EAAc;AACpB,WAAKkwB,gBAAL,CAAsBrtB,IAAtB,CAA2B7C,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTqwB,IAAAA,OAAO,EAAE,UAAUrwB,EAAV,EAAc;AACrB,WAAKmwB,iBAAL,CAAuBttB,IAAvB,CAA4B7C,EAA5B;AACD;AATQ,GAAX;AAYA2vB,EAAAA,MAAM,CAACC,MAAP,CAAcK,OAAd,GAAwB,IAAxB;AACD;;AAEDN,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIS,aAAJ,EAAmBC,cAAnB;AAEA,IAAIzU,MAAM,GAAG6T,MAAM,CAACC,MAAP,CAAc9T,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAAC0U,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASnb,KAAT,EAAgB;AAC7B2a,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIP,IAAI,GAAGe,IAAI,CAACC,KAAL,CAAWrb,KAAK,CAACqa,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACllB,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAImmB,OAAO,GAAG,KAAd;AACAjB,MAAAA,IAAI,CAACkB,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAAC/C,EAA7B,CAA9B;;AACA,cAAIiD,SAAJ,EAAe;AACbL,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAIjB,IAAI,CAACkB,MAAL,CAAYQ,KAAZ,CAAkB,UAASN,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACtmB,IAAN,KAAe,KAAf,IAAwBsmB,KAAK,CAACO,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIX,OAAJ,EAAa;AACXhzB,QAAAA,OAAO,CAAC4zB,KAAR;AAEA7B,QAAAA,IAAI,CAACkB,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACnCU,UAAAA,QAAQ,CAACN,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAb,QAAAA,cAAc,CAACY,OAAf,CAAuB,UAAUlwB,CAAV,EAAa;AAClC8wB,UAAAA,YAAY,CAAC9wB,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAI0vB,QAAQ,CAACqB,MAAb,EAAqB;AAAE;AAC5BrB,QAAAA,QAAQ,CAACqB,MAAT;AACD;AACF;;AAED,QAAIhC,IAAI,CAACllB,IAAL,KAAc,QAAlB,EAA4B;AAC1B+lB,MAAAA,EAAE,CAACoB,KAAH;;AACApB,MAAAA,EAAE,CAACqB,OAAH,GAAa,YAAY;AACvBvB,QAAAA,QAAQ,CAACqB,MAAT;AACD,OAFD;AAGD;;AAED,QAAIhC,IAAI,CAACllB,IAAL,KAAc,gBAAlB,EAAoC;AAClC7M,MAAAA,OAAO,CAACD,GAAR,CAAY,2BAAZ;AAEAm0B,MAAAA,kBAAkB;AACnB;;AAED,QAAInC,IAAI,CAACllB,IAAL,KAAc,OAAlB,EAA2B;AACzB7M,MAAAA,OAAO,CAACwa,KAAR,CAAc,kBAAkBuX,IAAI,CAACvX,KAAL,CAAW2Z,OAA7B,GAAuC,IAAvC,GAA8CpC,IAAI,CAACvX,KAAL,CAAWqS,KAAvE;AAEAqH,MAAAA,kBAAkB;AAElB,UAAIE,OAAO,GAAGC,kBAAkB,CAACtC,IAAD,CAAhC;AACApH,MAAAA,QAAQ,CAACjkB,IAAT,CAAcqkB,WAAd,CAA0BqJ,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASF,kBAAT,GAA8B;AAC5B,MAAIE,OAAO,GAAGzJ,QAAQ,CAAC2J,cAAT,CAAwB9C,UAAxB,CAAd;;AACA,MAAI4C,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACje,MAAR;AACD;AACF;;AAED,SAASke,kBAAT,CAA4BtC,IAA5B,EAAkC;AAChC,MAAIqC,OAAO,GAAGzJ,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAwJ,EAAAA,OAAO,CAAChE,EAAR,GAAaoB,UAAb,CAFgC,CAIhC;;AACA,MAAI2C,OAAO,GAAGxJ,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAI2J,UAAU,GAAG5J,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AACAuJ,EAAAA,OAAO,CAACK,SAAR,GAAoBzC,IAAI,CAACvX,KAAL,CAAW2Z,OAA/B;AACAI,EAAAA,UAAU,CAACC,SAAX,GAAuBzC,IAAI,CAACvX,KAAL,CAAWqS,KAAlC;AAEAuH,EAAAA,OAAO,CAACvJ,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EsJ,OAAO,CAACtJ,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIY0J,UAAU,CAAC1J,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOuJ,OAAP;AAED;;AAED,SAASK,UAAT,CAAoB9C,MAApB,EAA4BvB,EAA5B,EAAgC;AAC9B,MAAIsE,OAAO,GAAG/C,MAAM,CAAC+C,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAI9d,CAAJ,EAAOnN,CAAP,EAAUkrB,GAAV;;AAEA,OAAK/d,CAAL,IAAU6d,OAAV,EAAmB;AACjB,SAAKhrB,CAAL,IAAUgrB,OAAO,CAAC7d,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvB+d,MAAAA,GAAG,GAAGF,OAAO,CAAC7d,CAAD,CAAP,CAAW,CAAX,EAAcnN,CAAd,CAAN;;AACA,UAAIkrB,GAAG,KAAKxE,EAAR,IAAe7rB,KAAK,CAACC,OAAN,CAAcowB,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAAC3wB,MAAJ,GAAa,CAAd,CAAH,KAAwBmsB,EAAjE,EAAsE;AACpEuE,QAAAA,OAAO,CAAC/vB,IAAR,CAAaiS,CAAb;AACD;AACF;AACF;;AAED,MAAI8a,MAAM,CAAC9T,MAAX,EAAmB;AACjB8W,IAAAA,OAAO,GAAGA,OAAO,CAACpD,MAAR,CAAekD,UAAU,CAAC9C,MAAM,CAAC9T,MAAR,EAAgBuS,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAOuE,OAAP;AACD;;AAED,SAASd,QAAT,CAAkBlC,MAAlB,EAA0BwB,KAA1B,EAAiC;AAC/B,MAAIuB,OAAO,GAAG/C,MAAM,CAAC+C,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACvB,KAAK,CAAC/C,EAAP,CAAP,IAAqB,CAACuB,MAAM,CAAC9T,MAAjC,EAAyC;AACvC,QAAI9b,EAAE,GAAG,IAAI8yB,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C1B,KAAK,CAACO,SAAN,CAAgBC,EAA7D,CAAT;AACAR,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACsB,OAAO,CAACvB,KAAK,CAAC/C,EAAP,CAAtB;AACAsE,IAAAA,OAAO,CAACvB,KAAK,CAAC/C,EAAP,CAAP,GAAoB,CAACruB,EAAD,EAAKoxB,KAAK,CAAC2B,IAAX,CAApB;AACD,GAJD,MAIO,IAAInD,MAAM,CAAC9T,MAAX,EAAmB;AACxBgW,IAAAA,QAAQ,CAAClC,MAAM,CAAC9T,MAAR,EAAgBsV,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwB3B,MAAxB,EAAgCvB,EAAhC,EAAoC;AAClC,MAAIsE,OAAO,GAAG/C,MAAM,CAAC+C,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAACtE,EAAD,CAAR,IAAgBuB,MAAM,CAAC9T,MAA3B,EAAmC;AACjC,WAAOyV,cAAc,CAAC3B,MAAM,CAAC9T,MAAR,EAAgBuS,EAAhB,CAArB;AACD;;AAED,MAAIiC,aAAa,CAACjC,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDiC,EAAAA,aAAa,CAACjC,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAI2E,MAAM,GAAGpD,MAAM,CAACqD,KAAP,CAAa5E,EAAb,CAAb;AAEAkC,EAAAA,cAAc,CAAC1tB,IAAf,CAAoB,CAAC+sB,MAAD,EAASvB,EAAT,CAApB;;AAEA,MAAI2E,MAAM,IAAIA,MAAM,CAACjD,GAAjB,IAAwBiD,MAAM,CAACjD,GAAP,CAAWG,gBAAX,CAA4BhuB,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOwwB,UAAU,CAAClB,MAAM,CAACC,aAAR,EAAuBpD,EAAvB,CAAV,CAAqC6E,IAArC,CAA0C,UAAU7E,EAAV,EAAc;AAC7D,WAAOkD,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBpD,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAAS0D,YAAT,CAAsBnC,MAAtB,EAA8BvB,EAA9B,EAAkC;AAChC,MAAI2E,MAAM,GAAGpD,MAAM,CAACqD,KAAP,CAAa5E,EAAb,CAAb;AACAuB,EAAAA,MAAM,CAACK,OAAP,GAAiB,EAAjB;;AACA,MAAI+C,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACjD,GAAP,CAAWC,IAAX,GAAkBJ,MAAM,CAACK,OAAzB;AACD;;AAED,MAAI+C,MAAM,IAAIA,MAAM,CAACjD,GAAjB,IAAwBiD,MAAM,CAACjD,GAAP,CAAWI,iBAAX,CAA6BjuB,MAAzD,EAAiE;AAC/D8wB,IAAAA,MAAM,CAACjD,GAAP,CAAWI,iBAAX,CAA6BgB,OAA7B,CAAqC,UAAUnb,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAAC4Z,MAAM,CAACK,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAOL,MAAM,CAACqD,KAAP,CAAa5E,EAAb,CAAP;AACAuB,EAAAA,MAAM,CAACvB,EAAD,CAAN;AAEA2E,EAAAA,MAAM,GAAGpD,MAAM,CAACqD,KAAP,CAAa5E,EAAb,CAAT;;AACA,MAAI2E,MAAM,IAAIA,MAAM,CAACjD,GAAjB,IAAwBiD,MAAM,CAACjD,GAAP,CAAWG,gBAAX,CAA4BhuB,MAAxD,EAAgE;AAC9D8wB,IAAAA,MAAM,CAACjD,GAAP,CAAWG,gBAAX,CAA4BiB,OAA5B,CAAoC,UAAUnb,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"p5.play.30a08ba6.js","sourceRoot":"..","sourcesContent":["/**\n * p5.play\n *\n * @version 3.5\n * @author quinton-ashley\n * @year 2023\n * @license gpl-v3-only\n * @descripton p5.play is a 2D game engine that uses planck (Box2D) to simulate\n * physics and provides sprites, a tile system, input handling, and animations!\n */\np5.prototype.registerMethod('init', function p5PlayInit() {\n\tif (typeof window.planck == 'undefined') {\n\t\tthrow new Error('planck.js must be loaded before p5.play');\n\t}\n\n\t// store a reference to the p5 instance that p5play is being added to\n\tlet pInst = this;\n\n\tconst log = console.log; // shortcut\n\tthis.log = console.log;\n\n\tconst pl = planck;\n\t// set the velocity threshold to allow for slow moving objects\n\tpl.Settings.velocityThreshold = 0.19;\n\tlet plScale = 60;\n\n\tthis.p5play = this.p5play || {};\n\tthis.p5play.os ??= {\n\t\temulated: false\n\t};\n\tthis.p5play.autoDrawSprites ??= true;\n\tthis.p5play.autoUpdateSprites ??= true;\n\tthis.p5play.mouseTracking ??= true;\n\tthis.p5play.mouseSprite = null;\n\tthis.p5play.mouseSprites = [];\n\tthis.p5play.standardizeKeyboard = false;\n\n\t// change the angle mode to degrees\n\tthis.angleMode(p5.prototype.DEGREES);\n\n\t// scale to planck coordinates from p5 coordinates\n\tconst scaleTo = ({ x, y }, tileSize) => new pl.Vec2((x * tileSize) / plScale, (y * tileSize) / plScale);\n\tconst scaleXTo = (x, tileSize) => (x * tileSize) / plScale;\n\n\t// scale from planck coordinates to p5 coordinates\n\tconst scaleFrom = ({ x, y }, tileSize) => new pl.Vec2((x / tileSize) * plScale, (y / tileSize) * plScale);\n\tconst scaleXFrom = (x, tileSize) => (x / tileSize) * plScale;\n\n\tconst fixRound = (val) => (Math.abs(val - Math.round(val)) <= pl.Settings.linearSlop ? Math.round(val) : val);\n\tconst isArrowFunction = (fn) =>\n\t\t!/^(?:(?:\\/\\*[^(?:\\*\\/)]*\\*\\/\\s*)|(?:\\/\\/[^\\r\\n]*))*\\s*(?:(?:(?:async\\s(?:(?:\\/\\*[^(?:\\*\\/)]*\\*\\/\\s*)|(?:\\/\\/[^\\r\\n]*))*\\s*)?function|class)(?:\\s|(?:(?:\\/\\*[^(?:\\*\\/)]*\\*\\/\\s*)|(?:\\/\\/[^\\r\\n]*))*)|(?:[_$\\w][\\w0-9_$]*\\s*(?:\\/\\*[^(?:\\*\\/)]*\\*\\/\\s*)*\\s*\\()|(?:\\[\\s*(?:\\/\\*[^(?:\\*\\/)]*\\*\\/\\s*)*\\s*(?:(?:['][^']+['])|(?:[\"][^\"]+[\"]))\\s*(?:\\/\\*[^(?:\\*\\/)]*\\*\\/\\s*)*\\s*\\]\\())/.test(\n\t\t\tfn.toString()\n\t\t);\n\n\t/**\n\t * Checks if the given string contains a valid collider type\n\t * or collider type code letter:\n\t *\n\t * 'd' or 'dynamic'\n\t * 's' or 'static'\n\t * 'k' or 'kinematic'\n\t * 'n' or 'none'\n\t *\n\t * @param {String} t type name\n\t * @returns {Boolean} true if the given string contains a valid collider type\n\t */\n\tfunction isColliderType(t) {\n\t\tlet abr = t.slice(0, 2);\n\t\treturn t == 'd' || t == 's' || t == 'k' || t == 'n' || abr == 'dy' || abr == 'st' || abr == 'ki' || abr == 'no';\n\t}\n\n\t/**\n\t * Returns an array with the line length, angle, and number of sides of a regular polygon\n\t *\n\t * @param {String} n name of the regular polygon\n\t * @param {Number} l side length\n\t * @returns {Boolean} an array [line, angle, sides]\n\t */\n\tfunction getRegularPolygon(n, l) {\n\t\tif (n == 'triangle') l = [l, -120, 3];\n\t\telse if (n == 'square') l = [l, -90, 4];\n\t\telse if (n == 'pentagon') l = [l, -72, 5];\n\t\telse if (n == 'hexagon') l = [l, -60, 6];\n\t\telse if (n == 'septagon') l = [l, -51.4285714286, 7];\n\t\telse if (n == 'octagon') l = [l, -45, 8];\n\t\telse if (n == 'enneagon') l = [l, -40, 9];\n\t\telse if (n == 'decagon') l = [l, -36, 10];\n\t\telse if (n == 'hendecagon') l = [l, -32.7272727273, 11];\n\t\telse if (n == 'dodecagon') l = [l, -30, 12];\n\t\treturn l;\n\t}\n\n\tlet spriteProps = [\n\t\t'bounciness',\n\t\t'collider',\n\t\t'color',\n\t\t'density',\n\t\t'd',\n\t\t'debug',\n\t\t'diameter',\n\t\t'direction',\n\t\t// 'directionLock',\n\t\t'drag',\n\t\t'dynamic',\n\t\t'friction',\n\t\t'fill',\n\t\t'h',\n\t\t'height',\n\t\t'heading',\n\t\t'isSuperFast',\n\t\t'kinematic',\n\t\t'layer',\n\t\t'life',\n\t\t'mass',\n\t\t'rotation',\n\t\t'rotationDrag',\n\t\t'rotationLock',\n\t\t'rotationSpeed',\n\t\t'scale',\n\t\t'shape',\n\t\t'speed',\n\t\t'static',\n\t\t'stroke',\n\t\t'strokeWeight',\n\t\t'text',\n\t\t'textColor',\n\t\t'tileSize',\n\t\t'visible',\n\t\t'w',\n\t\t'width',\n\t\t'x',\n\t\t'y'\n\t];\n\n\tlet eventTypes = {\n\t\t_collisions: ['_collides', '_colliding', '_collided'],\n\t\t_overlappers: ['_overlaps', '_overlapping', '_overlapped']\n\t};\n\n\tp5.Vector.prototype._angleBetween = p5.Vector.prototype.angleBetween;\n\tp5.Vector.prototype.angleBetween = function (v) {\n\t\tlet a = this._angleBetween(v);\n\t\tif (!isNaN(a)) return a;\n\t\treturn 0;\n\t};\n\n\t/**\n\t * Look at the Sprite reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/sprite.html\n\t *\n\t * Every sprite you create is added to the allSprites\n\t * group and put on the top layer, in front of all other\n\t * previously created sprites.\n\t *\n\t * @example\n\t *\n\t *   let rectangle = new Sprite(x, y, width, height);\n\t *\n\t *   let circle = new Sprite(x, y, diameter);\n\t *\n\t *   let line = new Sprite(x, y, [length, angle]);\n\t *\n\t * @class Sprite\n\t * @constructor\n\t * @param {String|SpriteAnimation|p5.Image} [aniName|ani|image]\n\t * @param {Number} x Horizontal position of the sprite\n\t * @param {Number} y Vertical position of the sprite\n\t * @param {Number} [width|diameter] Width of the placeholder rectangle and of\n\t * the collider until an image or new collider are set. *OR* If height is not\n\t * set then this parameter becomes the diameter of the placeholder circle.\n\t * @param {Number} [height] Height of the placeholder rectangle and of the collider\n\t * until an image or new collider are set\n\t * @param {String} [physics] collider type is 'dynamic' by default, can be\n\t * 'static', 'kinematic', or 'none'\n\t */\n\tclass Sprite {\n\t\tconstructor(x, y, w, h, collider) {\n\t\t\tthis.p = pInst;\n\t\t\tthis.idNum = this.p.world.spritesCreated;\n\t\t\tthis.p.world.spritesCreated++;\n\n\t\t\tlet args = [...arguments];\n\n\t\t\tlet group, ani;\n\n\t\t\tif (args[0] !== undefined && args[0] instanceof Group) {\n\t\t\t\tgroup = args[0];\n\t\t\t\targs = args.slice(1);\n\t\t\t}\n\n\t\t\tif (!args.length) this._noArgs = true;\n\n\t\t\tif (\n\t\t\t\targs[0] !== undefined &&\n\t\t\t\tisNaN(args[0]) &&\n\t\t\t\t(typeof args[0] == 'string' || args[0] instanceof SpriteAnimation || args[0] instanceof p5.Image)\n\t\t\t) {\n\t\t\t\t// shift\n\t\t\t\tani = args[0];\n\t\t\t\targs = args.slice(1);\n\t\t\t}\n\n\t\t\tif (args.length == 1 && typeof args[0] == 'number') {\n\t\t\t\tthrow new FriendlyError('Sprite', 0, [args[0]]);\n\t\t\t}\n\n\t\t\tx = args[0];\n\t\t\ty = args[1];\n\t\t\tw = args[2];\n\t\t\th = args[3];\n\t\t\tcollider = args[4];\n\t\t\tthis.originMode = 'center';\n\n\t\t\tif (Array.isArray(x)) {\n\t\t\t\tx = undefined;\n\t\t\t\ty = undefined;\n\t\t\t\tw = args[0];\n\t\t\t\th = args[1];\n\t\t\t\tcollider = args[2];\n\t\t\t}\n\n\t\t\t// if (w is chain array) or (diameter/side length and h is a\n\t\t\t// collider type or the name of a regular polygon)\n\t\t\tif (Array.isArray(w) || typeof h == 'string') {\n\t\t\t\tif (!isNaN(w)) w = Number(w);\n\t\t\t\tif (typeof w != 'number' && Array.isArray(w[0])) {\n\t\t\t\t\tthis.originMode = 'start';\n\t\t\t\t}\n\t\t\t\tif (h !== undefined) {\n\t\t\t\t\tif (Array.isArray(h)) {\n\t\t\t\t\t\tthrow new FriendlyError('Sprite', 1, [`[[${w}], [${h}]]`]);\n\t\t\t\t\t}\n\t\t\t\t\tif (isColliderType(h)) {\n\t\t\t\t\t\tcollider = h;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tw = getRegularPolygon(h, w);\n\t\t\t\t\t}\n\t\t\t\t\th = undefined;\n\t\t\t\t}\n\t\t\t} else if (isNaN(w)) {\n\t\t\t\tcollider = w;\n\t\t\t\tw = undefined;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Groups the sprite belongs to, including allSprites\n\t\t\t *\n\t\t\t * @property groups\n\t\t\t * @type {Array}\n\t\t\t * @default [allSprites]\n\t\t\t */\n\t\t\tthis.groups = [];\n\t\t\tthis.p.allSprites.push(this);\n\n\t\t\t/**\n\t\t\t * Keys are the animation label, values are SpriteAnimation objects.\n\t\t\t *\n\t\t\t * @property animations\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tthis.animations = {};\n\n\t\t\t/**\n\t\t\t * If false, animations that are stopped before they are completed,\n\t\t\t * typically by a call to sprite.changeAni, will start at the frame\n\t\t\t * they were stopped at. If true, animations will always start playing from\n\t\t\t * frame 0 unless specified by the user in a separate anim.changeFrame\n\t\t\t * call.\n\t\t\t *\n\t\t\t * @property autoResetAnimations\n\t\t\t * @type {SpriteAnimation}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.autoResetAnimations;\n\n\t\t\t/**\n\t\t\t * True if the sprite was removed from the world\n\t\t\t *\n\t\t\t * @property removed\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.removed = false;\n\n\t\t\tif (group) {\n\t\t\t\tgroup.push(this);\n\t\t\t\tif (!ani) {\n\t\t\t\t\tfor (let _ani in group.animations) {\n\t\t\t\t\t\tani = _ani;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgroup = this.p.allSprites;\n\t\t\t}\n\n\t\t\tif (group.dynamic) collider ??= 'dynamic';\n\t\t\tif (group.kinematic) collider ??= 'kinematic';\n\t\t\tif (group.static) collider ??= 'static';\n\t\t\tcollider ??= group.collider;\n\n\t\t\tthis._shape = group.shape;\n\n\t\t\t/**\n\t\t\t * Cycles before self removal.\n\t\t\t * Set it to initiate a countdown, every draw cycle the property is\n\t\t\t * reduced by 1 unit. If less than or equal to 0, this sprite will be removed.\n\t\t\t *\n\t\t\t * @property life\n\t\t\t * @type {Number}\n\t\t\t * @default 100000000\n\t\t\t */\n\t\t\tthis.life = 100000000;\n\n\t\t\t/**\n\t\t\t * The sprite's visibility.\n\t\t\t *\n\t\t\t * @property visible\n\t\t\t * @type {Boolean}\n\t\t\t * @default true\n\t\t\t */\n\t\t\tthis.visible = true;\n\n\t\t\t/**\n\t\t\t * Contains all the collision callback functions for this sprite\n\t\t\t * when it comes in contact with other sprites or groups.\n\t\t\t */\n\t\t\tthis._collides = {};\n\t\t\tthis._colliding = {};\n\t\t\tthis._collided = {};\n\n\t\t\tthis._overlap = {};\n\t\t\t/**\n\t\t\t * Contains all the overlap callback functions for this sprite\n\t\t\t * when it comes in contact with other sprites or groups.\n\t\t\t */\n\t\t\tthis._overlaps = {};\n\t\t\tthis._overlapping = {};\n\t\t\tthis._overlapped = {};\n\n\t\t\tthis._collisions = new Map();\n\t\t\tthis._overlappers = new Map();\n\n\t\t\tthis.tileSize = group.tileSize || 1;\n\n\t\t\tlet _this = this;\n\n\t\t\t// this.x and this.y are getters and setters that change this._pos internally\n\t\t\t// this.pos and this.position get this._position\n\t\t\tthis._pos = {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t};\n\n\t\t\tthis._position = {\n\t\t\t\tget x() {\n\t\t\t\t\treturn _this.x;\n\t\t\t\t},\n\t\t\t\tset x(val) {\n\t\t\t\t\t_this.x = val;\n\t\t\t\t},\n\t\t\t\tget y() {\n\t\t\t\t\treturn _this.y;\n\t\t\t\t},\n\t\t\t\tset y(val) {\n\t\t\t\t\t_this.y = val;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// this._vel is used if the Sprite has no physics body\n\t\t\tthis._vel = {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t};\n\n\t\t\t// this._velocity extends p5.Vector\n\t\t\tthis._velocity = pInst.createVector.call(pInst);\n\n\t\t\tObject.defineProperty(this._velocity, 'x', {\n\t\t\t\tget() {\n\t\t\t\t\tlet val;\n\t\t\t\t\tif (!_this.body) val = _this._vel.x;\n\t\t\t\t\telse val = _this.body.getLinearVelocity().x;\n\t\t\t\t\treturn fixRound(val / _this.tileSize);\n\t\t\t\t},\n\t\t\t\tset(val) {\n\t\t\t\t\tval *= _this.tileSize;\n\t\t\t\t\tif (_this.body) {\n\t\t\t\t\t\t_this.body.setLinearVelocity(new pl.Vec2(val, _this.body.getLinearVelocity().y));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this._vel.x = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tObject.defineProperty(this._velocity, 'y', {\n\t\t\t\tget() {\n\t\t\t\t\tlet val;\n\t\t\t\t\tif (!_this.body) val = _this._vel.y;\n\t\t\t\t\telse val = _this.body.getLinearVelocity().y;\n\t\t\t\t\treturn fixRound(val / _this.tileSize);\n\t\t\t\t},\n\t\t\t\tset(val) {\n\t\t\t\t\tval *= _this.tileSize;\n\t\t\t\t\tif (_this.body) {\n\t\t\t\t\t\t_this.body.setLinearVelocity(new pl.Vec2(_this.body.getLinearVelocity().x, val));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this._vel.y = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._mirror = {\n\t\t\t\tx: 1,\n\t\t\t\ty: 1\n\t\t\t};\n\n\t\t\tthis.mirror = {\n\t\t\t\tget x() {\n\t\t\t\t\treturn _this._mirror.x < 0;\n\t\t\t\t},\n\t\t\t\tset x(val) {\n\t\t\t\t\t_this._mirror.x = val ? -1 : 1;\n\t\t\t\t},\n\t\t\t\tget y() {\n\t\t\t\t\treturn _this._mirror.y < 0;\n\t\t\t\t},\n\t\t\t\tset y(val) {\n\t\t\t\t\t_this._mirror.y = val ? -1 : 1;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.layer = group.layer;\n\t\t\tthis.layer ??= this.p.allSprites.maxDepth() + 1;\n\t\t\tcollider ??= group.collider;\n\n\t\t\tif (!collider || typeof collider != 'string') {\n\t\t\t\tcollider = 'dynamic';\n\t\t\t}\n\t\t\tthis.collider = collider;\n\n\t\t\tx ??= group.x;\n\t\t\tif (x === undefined) {\n\t\t\t\tx = this.p.width / this.p.allSprites.tileSize / 2;\n\t\t\t\tthis._vertexMode = true;\n\t\t\t}\n\t\t\ty ??= group.y;\n\t\t\tif (y === undefined) y = this.p.height / this.p.allSprites.tileSize / 2;\n\t\t\tw ??= group.w || group.width || group.diameter;\n\t\t\th ??= group.h || group.height;\n\n\t\t\tif (typeof x == 'function') x = x(group.length - 1);\n\t\t\tif (typeof y == 'function') y = y(group.length - 1);\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\tif (ani) {\n\t\t\t\tif (ani instanceof p5.Image) {\n\t\t\t\t\tthis.addAni(ani);\n\t\t\t\t} else {\n\t\t\t\t\tif (typeof ani == 'string') this._changeAni(ani);\n\t\t\t\t\telse this._animation = ani.clone();\n\t\t\t\t}\n\t\t\t\tlet ts = this.tileSize;\n\t\t\t\tif (!w && (this.ani.w != 1 || this.ani.h != 1)) {\n\t\t\t\t\tw = this.ani.w / ts;\n\t\t\t\t\tif (this.shape != 'circle') {\n\t\t\t\t\t\th = this.ani.h / ts;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.mouse = new SpriteMouse();\n\n\t\t\tif (this.collider != 'none') {\n\t\t\t\tif (this._vertexMode) this.addCollider(w, h);\n\t\t\t\telse this.addCollider(0, 0, w, h);\n\t\t\t} else {\n\t\t\t\tthis.w = w || (this.tileSize > 1 ? 1 : 50);\n\t\t\t\tthis.h = h || this.w;\n\t\t\t\tif (w !== undefined && h === undefined) this._shape = 'circle';\n\t\t\t\telse this._shape = 'box';\n\t\t\t}\n\n\t\t\tthis._scale = new Scale();\n\n\t\t\tObject.defineProperty(this._scale, 'x', {\n\t\t\t\tget() {\n\t\t\t\t\treturn this._x;\n\t\t\t\t},\n\t\t\t\tset(val) {\n\t\t\t\t\tif (val == this._x) return;\n\t\t\t\t\tlet scalarX = val / this._x;\n\t\t\t\t\t_this._w *= scalarX;\n\t\t\t\t\t_this._hw *= scalarX;\n\t\t\t\t\t_this._resizeCollider({ x: scalarX, y: 1 });\n\t\t\t\t\tthis._x = val;\n\t\t\t\t\tthis._avg = (this._x + this._y) * 0.5;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tObject.defineProperty(this._scale, 'y', {\n\t\t\t\tget() {\n\t\t\t\t\treturn this._y;\n\t\t\t\t},\n\t\t\t\tset(val) {\n\t\t\t\t\tif (val == this._y) return;\n\t\t\t\t\tlet scalarY = val / this._y;\n\t\t\t\t\tif (_this._h) {\n\t\t\t\t\t\tthis._h *= scalarY;\n\t\t\t\t\t\tthis._hh *= scalarY;\n\t\t\t\t\t}\n\t\t\t\t\t_this._resizeCollider({ x: 1, y: scalarY });\n\t\t\t\t\tthis._y = val;\n\t\t\t\t\tthis._avg = (this._x + this._y) * 0.5;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * The sprite's position on the previous frame.\n\t\t\t *\n\t\t\t * @property prevPos\n\t\t\t * @type {object}\n\t\t\t */\n\t\t\tthis.prevPos = { x, y };\n\n\t\t\tthis._dest = { x, y };\n\t\t\tthis._destIdx = 0;\n\t\t\tthis.drag = 0;\n\n\t\t\t/**\n\t\t\t * When the sprite.debug property is set to true you can see the\n\t\t\t * sprite's physics body collider.\n\t\t\t *\n\t\t\t * @property debug\n\t\t\t * @type {boolean}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.debug = false;\n\n\t\t\tthis._shift = {};\n\n\t\t\tlet gvx = group.vel.x || 0;\n\t\t\tlet gvy = group.vel.y || 0;\n\t\t\tif (typeof gvx == 'function') gvx = gvx(group.length - 1);\n\t\t\tif (typeof gvy == 'function') gvy = gvy(group.length - 1);\n\t\t\tthis.vel.x = gvx;\n\t\t\tthis.vel.y = gvy;\n\n\t\t\tfor (let prop of spriteProps) {\n\t\t\t\tif (prop == 'collider' || prop == 'x' || prop == 'y') continue;\n\t\t\t\tlet val = group[prop];\n\t\t\t\tif (val === undefined) continue;\n\t\t\t\tif (typeof val == 'function') val = val(group.length - 1);\n\t\t\t\tif (typeof val == 'object') {\n\t\t\t\t\tthis[prop] = Object.assign({}, val);\n\t\t\t\t} else {\n\t\t\t\t\tthis[prop] = val;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// custom group properties \"sprite group traits\"\n\t\t\t// that are non-default sprite properties\n\t\t\tfor (let g of this.groups) {\n\t\t\t\tlet traits = {};\n\t\t\t\tlet props = Object.keys(g);\n\t\t\t\tfor (let prop of props) {\n\t\t\t\t\tif (!isNaN(prop) || prop[0] == '_') continue;\n\t\t\t\t\ttraits[prop] = null;\n\t\t\t\t}\n\n\t\t\t\t// delete these traits\n\t\t\t\tlet deletes = [\n\t\t\t\t\t'collider',\n\t\t\t\t\t'idNum',\n\t\t\t\t\t'p',\n\t\t\t\t\t'parent',\n\t\t\t\t\t'length',\n\t\t\t\t\t'_collides',\n\t\t\t\t\t'_colliding',\n\t\t\t\t\t'_collided',\n\t\t\t\t\t'_collisions',\n\t\t\t\t\t'_overlap',\n\t\t\t\t\t'_overlaps',\n\t\t\t\t\t'_overlapping',\n\t\t\t\t\t'_overlapped',\n\t\t\t\t\t'_overlappers',\n\t\t\t\t\t'animation',\n\t\t\t\t\t'animations',\n\t\t\t\t\t'autoCull',\n\t\t\t\t\t'Sprite',\n\t\t\t\t\t'GroupSprite',\n\t\t\t\t\t'Group',\n\t\t\t\t\t'SubGroup',\n\t\t\t\t\t'vel',\n\t\t\t\t\t'mirror',\n\t\t\t\t\t'mouse'\n\t\t\t\t];\n\t\t\t\tfor (let d of deletes) {\n\t\t\t\t\tdelete traits[d];\n\t\t\t\t}\n\n\t\t\t\tfor (let prop in traits) {\n\t\t\t\t\tlet val = g[prop];\n\t\t\t\t\tif (val === undefined) continue;\n\t\t\t\t\tif (typeof val == 'function') {\n\t\t\t\t\t\tif (isArrowFunction(val)) val = val();\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof val == 'object') {\n\t\t\t\t\t\tthis[prop] = Object.assign({}, val);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis[prop] = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @property strokeWeight\n\t\t\t * @type {Number}\n\t\t\t * @default undefined\n\t\t\t */\n\t\t\tthis.strokeWeight;\n\n\t\t\tthis.color ??= this.p.color(this.p.random(30, 245), this.p.random(30, 245), this.p.random(30, 245));\n\n\t\t\tthis.textColor ??= this.p.color(0);\n\t\t\tthis.textSize ??= this.tileSize == 1 ? (this.p.canvas ? this.p.textSize() : 12) : 0.8;\n\n\t\t\tlet shouldCreateSensor = false;\n\t\t\tfor (let g of this.groups) {\n\t\t\t\tif (g._hasOverlaps) {\n\t\t\t\t\tshouldCreateSensor = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (shouldCreateSensor && !this._hasOverlaps) this._createSensors();\n\n\t\t\tthis._dimensionsUndefined = w === undefined && h === undefined;\n\t\t}\n\n\t\t/**\n\t\t * EXPERIMENTAL method! Subject to change!\n\t\t *\n\t\t * Adds a collider (fixture) to the sprite's physics body.\n\t\t *\n\t\t * It accepts parameters in a similar format to the Sprite\n\t\t * constructor except the first two parameters are x and y offsets,\n\t\t * the distance new collider should be from the center of the sprite.\n\t\t *\n\t\t * One limitation of the current implementation is that the collider\n\t\t * type can't be changed without losing every collider added to the\n\t\t * sprite besides the first. This will be fixed in a future release.\n\t\t *\n\t\t * @method addCollider\n\t\t * @param {Number} offsetX distance from the center of the sprite\n\t\t * @param {Number} offsetY distance from the center of the sprite\n\t\t * @param {Number} w width of the collider\n\t\t * @param {Number} h height of the collider\n\t\t */\n\t\taddCollider(offsetX, offsetY, w, h) {\n\t\t\tlet args = [...arguments];\n\t\t\tlet path, shape;\n\n\t\t\tif (args.length < 3) {\n\t\t\t\toffsetX = 0;\n\t\t\t\toffsetY = 0;\n\t\t\t\tw = args[0];\n\t\t\t\th = args[1];\n\t\t\t\tthis._vertexMode = true;\n\t\t\t}\n\n\t\t\toffsetX ??= 0;\n\t\t\toffsetY ??= 0;\n\t\t\tw ??= this._w;\n\t\t\tif (!this.body && this.shape && this.shape != 'circle') {\n\t\t\t\th ??= this._h;\n\t\t\t}\n\n\t\t\t// if (w is chain array) or (diameter/side length and h is a\n\t\t\t// collider type or the name of a regular polygon)\n\t\t\tif (Array.isArray(w) || typeof h == 'string') {\n\t\t\t\tif (!isNaN(w)) w = Number(w);\n\t\t\t\tif (typeof w != 'number' && Array.isArray(w[0])) {\n\t\t\t\t\tthis.originMode = 'start';\n\t\t\t\t}\n\t\t\t\tif (typeof h == 'string') {\n\t\t\t\t\tpath = getRegularPolygon(h, w);\n\t\t\t\t\th = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tpath = w;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (w !== undefined && h === undefined) shape ??= 'circle';\n\t\t\t\tshape ??= 'box';\n\t\t\t}\n\n\t\t\tif (shape == 'box' || shape == 'circle') {\n\t\t\t\tw ??= this.tileSize > 1 ? 1 : 50;\n\t\t\t\th ??= w;\n\t\t\t}\n\n\t\t\tlet props = {};\n\n\t\t\tlet dimensions;\n\n\t\t\t// the actual dimensions of the collider for a box or circle are a\n\t\t\t// little bit smaller so that they can slid past each other\n\t\t\t// when in a tile grid\n\t\t\tif (shape == 'box' || shape == 'circle') {\n\t\t\t\tdimensions = scaleTo({ x: w - 0.08, y: h - 0.08 }, this.tileSize);\n\t\t\t}\n\n\t\t\tlet s;\n\t\t\tif (shape == 'box') {\n\t\t\t\ts = pl.Box(dimensions.x / 2, dimensions.y / 2, scaleTo({ x: offsetX, y: offsetY }, this.tileSize), 0);\n\t\t\t} else if (shape == 'circle') {\n\t\t\t\ts = pl.Circle(scaleTo({ x: offsetX, y: offsetY }, this.tileSize), dimensions.x / 2);\n\t\t\t} else if (path) {\n\t\t\t\tlet vecs = [{ x: 0, y: 0 }];\n\t\t\t\tlet vert = { x: 0, y: 0 };\n\t\t\t\tlet min = { x: 0, y: 0 };\n\t\t\t\tlet max = { x: 0, y: 0 };\n\n\t\t\t\t// if the path is an array of position arrays\n\t\t\t\tlet usesVertices = Array.isArray(path[0]);\n\n\t\t\t\tfunction checkVert() {\n\t\t\t\t\tif (vert.x < min.x) min.x = vert.x;\n\t\t\t\t\tif (vert.y < min.y) min.y = vert.y;\n\t\t\t\t\tif (vert.x > max.x) max.x = vert.x;\n\t\t\t\t\tif (vert.y > max.y) max.y = vert.y;\n\t\t\t\t}\n\n\t\t\t\tlet x, y;\n\t\t\t\tif (usesVertices) {\n\t\t\t\t\tif (this._vertexMode) {\n\t\t\t\t\t\tx = path[0][0];\n\t\t\t\t\t\ty = path[0][1];\n\t\t\t\t\t\t// log(x, y);\n\t\t\t\t\t\tif (!this.body) {\n\t\t\t\t\t\t\tthis.x = x;\n\t\t\t\t\t\t\tthis.y = y;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tx = this.x - this._relativeOrigin.x;\n\t\t\t\t\t\t\ty = this.y - this._relativeOrigin.y;\n\t\t\t\t\t\t\tvecs.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < path.length; i++) {\n\t\t\t\t\t\tif (this._vertexMode) {\n\t\t\t\t\t\t\tif (i == 0 && !this.body) continue;\n\t\t\t\t\t\t\t// verts are relative to the first vert\n\t\t\t\t\t\t\tvert.x = path[i][0] - x;\n\t\t\t\t\t\t\tvert.y = path[i][1] - y;\n\t\t\t\t\t\t\tlog(i, vert.x, vert.y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvert.x += path[i][0];\n\t\t\t\t\t\t\tvert.y += path[i][1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvecs.push({ x: vert.x, y: vert.y });\n\n\t\t\t\t\t\tcheckVert();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet rep = 1;\n\t\t\t\t\tif (path.length % 2) rep = path[path.length - 1];\n\t\t\t\t\tlet mod = rep > 0 ? 1 : -1;\n\t\t\t\t\trep = Math.abs(rep);\n\t\t\t\t\tlet ang = 0;\n\t\t\t\t\tfor (let i = 0; i < rep; i++) {\n\t\t\t\t\t\tfor (let j = 0; j < path.length - 1; j += 2) {\n\t\t\t\t\t\t\tlet len = path[j];\n\t\t\t\t\t\t\tang += path[j + 1];\n\t\t\t\t\t\t\tvert.x += len * this.p.cos(ang);\n\t\t\t\t\t\t\tvert.y += len * this.p.sin(ang);\n\t\t\t\t\t\t\tvecs.push({ x: vert.x, y: vert.y });\n\n\t\t\t\t\t\t\tcheckVert();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tang *= mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tMath.abs(Math.abs(vecs[0].x) - Math.abs(vecs[vecs.length - 1].x)) <= pl.Settings.linearSlop &&\n\t\t\t\t\tMath.abs(Math.abs(vecs[0].y) - Math.abs(vecs[vecs.length - 1].y)) <= pl.Settings.linearSlop\n\t\t\t\t) {\n\t\t\t\t\tshape = 'polygon';\n\t\t\t\t\tthis.originMode = 'center';\n\t\t\t\t} else {\n\t\t\t\t\tshape = 'chain';\n\t\t\t\t}\n\n\t\t\t\tw = max.x - min.x;\n\t\t\t\tthis._hw = w * 0.5;\n\t\t\t\th = max.y - min.y;\n\t\t\t\tthis._hh = h * 0.5;\n\n\t\t\t\tlet isConvex = false;\n\t\t\t\tif (shape == 'polygon' && this._isConvexPoly(vecs.slice(0, -1))) {\n\t\t\t\t\tisConvex = true;\n\t\t\t\t}\n\n\t\t\t\tif (this.originMode == 'start') {\n\t\t\t\t\tfor (let i = 0; i < vecs.length; i++) {\n\t\t\t\t\t\tvecs[i] = scaleTo(vecs[i], this.tileSize);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// the center relative to the first vertex\n\t\t\t\t\tlet centerX = 0;\n\t\t\t\t\tlet centerY = 0;\n\t\t\t\t\t// use centroid of a triangle method to get center\n\t\t\t\t\t// average of all vertices\n\t\t\t\t\tlet sumX = 0;\n\t\t\t\t\tlet sumY = 0;\n\n\t\t\t\t\tlet vl = vecs.length;\n\t\t\t\t\t// last vertex is same as first\n\t\t\t\t\tif (shape == 'polygon' || isConvex) vl--;\n\t\t\t\t\tfor (let i = 0; i < vl; i++) {\n\t\t\t\t\t\tsumX += vecs[i].x;\n\t\t\t\t\t\tsumY += vecs[i].y;\n\t\t\t\t\t}\n\t\t\t\t\tcenterX = sumX / vl;\n\t\t\t\t\tcenterY = sumY / vl;\n\n\t\t\t\t\tif (!this.body) {\n\t\t\t\t\t\tthis._relativeOrigin = { x: centerX, y: centerY };\n\t\t\t\t\t}\n\n\t\t\t\t\t// use bounding box method to get center\n\t\t\t\t\t// not how planck does it!\n\t\t\t\t\t// centerX = this._hw - min.x;\n\t\t\t\t\t// centerY = this._hh - min.y;\n\n\t\t\t\t\tif (this._vertexMode && usesVertices) {\n\t\t\t\t\t\tif (!this.body) {\n\t\t\t\t\t\t\t// repositions the sprite's x, y coordinates\n\t\t\t\t\t\t\t// to be in the center of the shape\n\t\t\t\t\t\t\tthis.x += centerX;\n\t\t\t\t\t\t\tthis.y += centerY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcenterX = this._relativeOrigin.x;\n\t\t\t\t\t\t\tcenterY = this._relativeOrigin.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < vecs.length; i++) {\n\t\t\t\t\t\tlet vec = vecs[i];\n\t\t\t\t\t\tvecs[i] = scaleTo({ x: vec.x + offsetX - centerX, y: vec.y + offsetY - centerY }, this.tileSize);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!isConvex || vecs.length - 1 > pl.Settings.maxPolygonVertices || this._shape == 'chain') {\n\t\t\t\t\tshape = 'chain';\n\t\t\t\t}\n\n\t\t\t\tif (shape == 'polygon') {\n\t\t\t\t\ts = pl.Polygon(vecs);\n\t\t\t\t} else if (shape == 'chain') {\n\t\t\t\t\ts = pl.Chain(vecs, false);\n\t\t\t\t\tprops.density = 0;\n\t\t\t\t\tprops.restitution = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprops.shape = s;\n\t\t\tprops.density ??= this.density || 5;\n\t\t\tprops.friction ??= this.friction || 0.5;\n\t\t\tprops.restitution ??= this.bounciness || 0.2;\n\n\t\t\tif (!this.body) {\n\t\t\t\tthis.body = this.p.world.createBody({\n\t\t\t\t\tposition: scaleTo({ x: this.x, y: this.y }, this.tileSize),\n\t\t\t\t\ttype: this.collider\n\t\t\t\t});\n\t\t\t\tthis.body.sprite = this;\n\t\t\t}\n\t\t\tif (!this._shape) {\n\t\t\t\tthis._shape = shape;\n\t\t\t}\n\t\t\tthis.body.createFixture(props);\n\n\t\t\tthis._w = w;\n\t\t\tthis._hw = w * 0.5;\n\n\t\t\tif (shape == 'circle') {\n\t\t\t\tthis._diameter = w;\n\t\t\t} else {\n\t\t\t\tthis._h = h;\n\t\t\t\tthis._hh = h * 0.5;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Removes the physics body colliders from the sprite but not\n\t\t * overlap sensors.\n\t\t *\n\t\t * @private _removeColliders\n\t\t */\n\t\t_removeColliders() {\n\t\t\tthis._collides = {};\n\t\t\tthis._colliding = {};\n\t\t\tthis._collided = {};\n\t\t\tthis._removeFixtures(false);\n\t\t}\n\n\t\t/**\n\t\t * EXPERIMENTAL! This function doesn't work yet and will be changed.\n\t\t *\n\t\t * Adds a joint between this sprite and another sprite.\n\t\t *\n\t\t * @param {Sprite} spriteB the sprite to add a joint to\n\t\t * @param {String} [type] the type of joint\n\t\t * @param {Object} [props] the joint options\n\t\t */\n\t\taddJoint(spriteB, type, props) {\n\t\t\tlet spriteA = this;\n\t\t\tprops ??= {};\n\t\t\t/*\n\t\t\t * frequencyHz, dampingRatio, collideConnected, userData, ratio,\n\t\t\t * enableLimit, enableMotor, lowerAngle, maxMotorTorque\n\t\t\t * maxMotorForce, motorSpeed, referenceAngle, upperAngle, maxForce\n\t\t\t * maxTorque, localAxisA, angularOffset, joint1, joint2,\n\t\t\t * correctionFactor\n\t\t\t */\n\t\t\tif (props.motorSpeed) props.enableMotor = true;\n\n\t\t\t// function genProps(a, b) {\n\t\t\tprops = Object.assign(props, {\n\t\t\t\tbodyA: spriteA.body,\n\t\t\t\tbodyB: spriteB.body,\n\t\t\t\tlength: props.length != undefined ? scaleXTo(props.length) : null,\n\t\t\t\tmaxLength: props.maxLength != undefined ? scaleXTo(props.maxLength) : null,\n\t\t\t\tlengthA: props.lengthA != undefined ? scaleXTo(props.lengthA) : null,\n\t\t\t\tlengthB: props.lengthB != undefined ? scaleXTo(props.lengthB) : null,\n\t\t\t\tgroundAnchorA: props.groundAnchorA ? scaleXTo(props.groundAnchorA) : new pl.Vec2(0, 0),\n\t\t\t\tgroundAnchorB: props.groundAnchorB ? scaleXTo(props.groundAnchorB) : new pl.Vec2(0, 0),\n\t\t\t\tupperTranslation: props.upperTranslation ? scaleXTo(props.upperTranslation) : 1,\n\t\t\t\tlowerTranslation: props.lowerTranslation ? scaleXTo(props.lowerTranslation) : 1,\n\t\t\t\tlinearOffset: props.linearOffset ? scaleTo(props.linearOffset) : new pl.Vec2(0, 0)\n\t\t\t});\n\t\t\tif (props.anchorA) {\n\t\t\t\tprops.localAnchorA = scaleTo(props.anchorA);\n\t\t\t} else if (props.localAnchorA) {\n\t\t\t\tprops.localAnchorA = scaleTo(props.localAnchorA);\n\t\t\t} else {\n\t\t\t\tprops.localAnchorA = new pl.Vec2(0, 0);\n\t\t\t}\n\t\t\tif (props.anchorB) {\n\t\t\t\tprops.localAnchorB = scaleTo(props.anchorB);\n\t\t\t} else if (props.localAnchorB) {\n\t\t\t\tprops.localAnchorB = scaleTo(props.localAnchorB);\n\t\t\t} else {\n\t\t\t\tprops.localAnchorB = new pl.Vec2(0, 0);\n\t\t\t}\n\t\t\t// \treturn props;\n\t\t\t// }\n\n\t\t\ttype ??= 'distance';\n\t\t\tlet j;\n\t\t\tif (type == 'distance') {\n\t\t\t\tj = pl.DistanceJoint(props);\n\t\t\t} else if (type == 'orbit') {\n\t\t\t\t// let s = new Sprite([\n\t\t\t\t// \t[spriteA.x, spriteA.y],\n\t\t\t\t// \t[spriteB.x, spriteB.y]\n\t\t\t\t// ]);\n\t\t\t\t// s.overlaps(allSprites);\n\t\t\t\t// j = pl.DistanceJoint(genProps(spriteA, s));\n\t\t\t\t// this.p.world.createJoint(j);\n\t\t\t\t// genProps(s, spriteB);\n\t\t\t\t// j = pl.RevoluteJoint(props, s.body, spriteB.body, spriteB.body.getWorldCenter());\n\t\t\t} else if (type == 'pulley') {\n\t\t\t\tj = pl.PulleyJoint(props);\n\t\t\t} else if (type == 'wheel') {\n\t\t\t\tj = pl.WheelJoint(props);\n\t\t\t} else if (type == 'rope') {\n\t\t\t\tj = pl.RopeJoint(props);\n\t\t\t} else if (type == 'weld') {\n\t\t\t\tj = pl.WeldJoint(props);\n\t\t\t} else if (type == 'revolute') {\n\t\t\t\tj = pl.RevoluteJoint(props, spriteA.body, spriteB.body, spriteA.body.getWorldCenter());\n\t\t\t} else if (type == 'gear') {\n\t\t\t\tj = pl.GearJoint(props);\n\t\t\t} else if (type == 'friction') {\n\t\t\t\tj = pl.FrictionJoint(props);\n\t\t\t} else if (type == 'motor') {\n\t\t\t\tj = pl.MotorJoint(props);\n\t\t\t} else if (type == 'prismatic') {\n\t\t\t\tj = pl.PrismaticJoint(props);\n\t\t\t} else if (type == 'mouse') {\n\t\t\t\t/*j = new box2d.b2MouseJointDef();\n        j.bodyA = bodyA!=null?bodyA.body:b2world.CreateBody(new box2d.b2BodyDef());\n        j.bodyB = bodyB.body;\n        j.target = b2scaleTo(props.xy);\n        j.collideConnected = true;\n        j.maxForce = props.maxForce||(1000.0 * bodyB.body.GetMass());\n        j.frequencyHz = props.frequency||5;  // Try a value less than 5 (0 for no elasticity)\n        j.dampingRatio = props.damping||0.9; // Ranges between 0 and 1 (1 for no springiness)\n        bodyB.body.SetAwake(true);\n        bodyA=bodyB;*/\n\t\t\t}\n\t\t\treturn this.p.world.createJoint(j);\n\t\t}\n\n\t\t/**\n\t\t * Removes overlap sensors from the sprite.\n\t\t *\n\t\t * @private _removeSensors\n\t\t */\n\t\t_removeSensors() {\n\t\t\tthis._overlap = {};\n\t\t\tthis._overlaps = {};\n\t\t\tthis._overlapping = {};\n\t\t\tthis._overlapped = {};\n\t\t\tthis._removeFixtures(true);\n\t\t}\n\n\t\t// removes sensors or colliders\n\t\t_removeFixtures(isSensor) {\n\t\t\tlet prevFxt;\n\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\tif (fxt.m_isSensor == isSensor) {\n\t\t\t\t\tlet _fxt = fxt.m_next;\n\t\t\t\t\tfxt.destroyProxies(this.p.world.m_broadPhase);\n\t\t\t\t\tif (!prevFxt) {\n\t\t\t\t\t\tthis.body.m_fixtureList = _fxt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprevFxt.m_next = _fxt;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprevFxt = fxt;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Clones the collider's props to be transferred to a new collider.\n\t\t * @private\n\t\t */\n\t\t_cloneBodyProps() {\n\t\t\tlet body = {};\n\t\t\tlet props = [...spriteProps];\n\t\t\tlet deletes = [\n\t\t\t\t'w',\n\t\t\t\t'h',\n\t\t\t\t'width',\n\t\t\t\t'height',\n\t\t\t\t'shape',\n\t\t\t\t'd',\n\t\t\t\t'diameter',\n\t\t\t\t'dynamic',\n\t\t\t\t'static',\n\t\t\t\t'kinematic',\n\t\t\t\t'collider',\n\t\t\t\t'heading',\n\t\t\t\t'direction'\n\t\t\t];\n\t\t\tfor (let del of deletes) {\n\t\t\t\tlet i = props.indexOf(del);\n\t\t\t\tif (i >= 0) props.splice(i, 1);\n\t\t\t}\n\t\t\tfor (let prop of props) {\n\t\t\t\tbody[prop] = this[prop];\n\t\t\t}\n\t\t\treturn body;\n\t\t}\n\n\t\t// get aabb() {\n\t\t// \treturn getAABB(this);\n\t\t// }\n\n\t\t// set advance(val) {\n\t\t// \tthis.body.advance(val);\n\t\t// }\n\t\t// set angularImpulse(val) {\n\t\t// \tthis.body.applyAngularImpulse(val, true);\n\t\t// }\n\n\t\t/**\n\t\t * This property disables the ability for a sprite to \"sleep\".\n\t\t *\n\t\t * \"Sleeping\" sprites are not included in the physics simulation, a\n\t\t * sprite starts \"sleeping\" when it stops moving and doesn't collide\n\t\t * with anything that it wasn't already _touching.\n\t\t *\n\t\t * @property allowSleeping\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tget allowSleeping() {\n\t\t\treturn this.body.getSleepingAllowed();\n\t\t}\n\n\t\tset allowSleeping(val) {\n\t\t\tthis.body.setSleepingAllowed(val);\n\t\t}\n\n\t\t/**\n\t\t * Reference to the sprite's current animation.\n\t\t *\n\t\t * @property animation\n\t\t * @type {SpriteAnimation}\n\t\t */\n\t\tget animation() {\n\t\t\treturn this._animation;\n\t\t}\n\t\tset animation(val) {\n\t\t\tthis.changeAni(val);\n\t\t}\n\n\t\tget ani() {\n\t\t\treturn this._animation;\n\t\t}\n\t\tset ani(val) {\n\t\t\tthis.changeAni(val);\n\t\t}\n\n\t\tget anis() {\n\t\t\treturn this.animations;\n\t\t}\n\n\t\t/**\n\t\t * The bounciness of the sprite's physics body.\n\t\t *\n\t\t * @property bounciness\n\t\t * @type {Number}\n\t\t * @default 0.2\n\t\t */\n\t\tget bounciness() {\n\t\t\tif (!this.fixture) return;\n\t\t\treturn this.fixture.getRestitution();\n\t\t}\n\t\tset bounciness(val) {\n\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\tfxt.setRestitution(val);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * The center of mass of the sprite's physics body.\n\t\t *\n\t\t * @property centerOfMass\n\t\t * @type {Number}\n\t\t */\n\t\tget centerOfMass() {\n\t\t\treturn scaleFrom(this.body.getWorldCenter(), this.tileSize);\n\t\t}\n\n\t\t/**\n\t\t * The sprite's collider type. Default is 'dynamic'.\n\t\t *\n\t\t * The collider type can be one of the following strings:\n\t\t * 'dynamic', 'static', 'kinematic', 'none'.\n\t\t *\n\t\t * @property collider\n\t\t * @type {String}\n\t\t * @default 'dynamic'\n\t\t */\n\t\tget collider() {\n\t\t\treturn this._collider;\n\t\t}\n\t\tset collider(val) {\n\t\t\tval = val.toLowerCase();\n\t\t\tlet c = val[0];\n\t\t\tif (c == 'd') val = 'dynamic';\n\t\t\tif (c == 's') val = 'static';\n\t\t\tif (c == 'k') val = 'kinematic';\n\t\t\tif (c == 'n') val = 'none';\n\n\t\t\tif (this._collider === undefined) {\n\t\t\t\tthis._collider = val;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (val == this._collider) return;\n\n\t\t\tlet oldCollider = this._collider;\n\n\t\t\tthis._collider = val;\n\t\t\tif (oldCollider !== undefined) this._reset();\n\t\t}\n\n\t\t_reset() {\n\t\t\tlet bodyProps;\n\t\t\tif (this._collider != 'none') {\n\t\t\t\tbodyProps = this._cloneBodyProps();\n\t\t\t}\n\n\t\t\tlet v;\n\t\t\tif (this._shape == 'chain' || this._shape == 'polygon') {\n\t\t\t\tv = this._getVertices(true);\n\t\t\t\tthis._vertexMode = true;\n\t\t\t}\n\n\t\t\t// remove body\n\t\t\tif (this.body) {\n\t\t\t\tthis.p.world.destroyBody(this.body);\n\t\t\t\tthis.body = undefined;\n\t\t\t}\n\n\t\t\t// replace colliders and overlap sensors\n\t\t\tif (this._collider != 'none') {\n\t\t\t\tif (v) {\n\t\t\t\t\tthis.addCollider(0, 0, v);\n\t\t\t\t} else {\n\t\t\t\t\tthis.addCollider();\n\t\t\t\t}\n\t\t\t\tif (this._hasOverlaps) {\n\t\t\t\t\tthis._createSensors();\n\t\t\t\t}\n\t\t\t\tfor (let prop in bodyProps) {\n\t\t\t\t\tif (bodyProps[prop] !== undefined) {\n\t\t\t\t\t\tthis[prop] = bodyProps[prop];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_parseColor(val) {\n\t\t\tif (val instanceof p5.Color) {\n\t\t\t\treturn val;\n\t\t\t} else if (typeof val != 'object') {\n\t\t\t\tif (typeof val == 'string' && val.length == 1) {\n\t\t\t\t\treturn this.p.colorPal(val);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.p.color(val);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.p.color(...val.levels);\n\t\t}\n\n\t\t/**\n\t\t * The sprite's current color. By default sprites get a random color.\n\t\t *\n\t\t * @property color\n\t\t * @type {p5.Color}\n\t\t * @default random color\n\t\t */\n\t\tget color() {\n\t\t\treturn this._color;\n\t\t}\n\t\tset color(val) {\n\t\t\tthis._color = this._parseColor(val);\n\t\t}\n\t\t/**\n\t\t * @deprecated shapeColor\n\t\t */\n\t\tget shapeColor() {\n\t\t\treturn this._color;\n\t\t}\n\t\tset shapeColor(val) {\n\t\t\tthis.color = val;\n\t\t}\n\n\t\t/**\n\t\t * Alias for sprite.fillColor\n\t\t *\n\t\t * @property fill\n\t\t * @type {p5.Color}\n\t\t * @default random color\n\t\t */\n\t\tget fill() {\n\t\t\treturn this._color;\n\t\t}\n\t\tset fill(val) {\n\t\t\tthis._color = this._parseColor(val);\n\t\t}\n\n\t\t/**\n\t\t * Alias for sprite.color\n\t\t *\n\t\t * @property fillColor\n\t\t * @type {p5.Color}\n\t\t * @default random color\n\t\t */\n\t\tget fillColor() {\n\t\t\treturn this._color;\n\t\t}\n\t\tset fillColor(val) {\n\t\t\tthis._color = this._parseColor(val);\n\t\t}\n\n\t\t/**\n\t\t * Alias for sprite.strokeColor\n\t\t *\n\t\t * @property stroke\n\t\t * @type {p5.Color}\n\t\t */\n\t\tget stroke() {\n\t\t\treturn this._stroke;\n\t\t}\n\t\tset stroke(val) {\n\t\t\tthis._stroke = this._parseColor(val);\n\t\t}\n\n\t\t/**\n\t\t * The sprite's stroke current color. By default the stroke of a sprite\n\t\t * indicates its collider type.\n\t\t *\n\t\t * @property strokeColor\n\t\t * @type {p5.Color}\n\t\t */\n\t\tget strokeColor() {\n\t\t\treturn this._stroke;\n\t\t}\n\t\tset strokeColor(val) {\n\t\t\tthis._stroke = this._parseColor(val);\n\t\t}\n\n\t\t/**\n\t\t * The sprite's current text color. Black by default.\n\t\t *\n\t\t * @property textColor\n\t\t * @type {p5.Color}\n\t\t * @default black (#000000)\n\t\t */\n\t\tget textColor() {\n\t\t\treturn this._textColor;\n\t\t}\n\t\tset textColor(val) {\n\t\t\tthis._textColor = this._parseColor(val);\n\t\t}\n\n\t\t/**\n\t\t * The density of the sprite's physics body.\n\t\t *\n\t\t * @property density\n\t\t * @type {Number}\n\t\t */\n\t\tget density() {\n\t\t\tif (!this.fixture) return;\n\t\t\treturn this.fixture.getDensity();\n\t\t}\n\t\tset density(val) {\n\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\tfxt.setDensity(val);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Use .layer instead.\n\t\t *\n\t\t * @deprecated depth\n\t\t */\n\t\tget depth() {\n\t\t\tconsole.warn('sprite.depth is deprecated, use sprite.layer instead');\n\t\t\treturn this.layer;\n\t\t}\n\t\tset depth(val) {\n\t\t\tconsole.warn('sprite.depth is deprecated, use sprite.layer instead');\n\t\t\tthis.layer = val;\n\t\t}\n\n\t\t/**\n\t\t * The angle of the sprite's movement or it's rotation angle if the\n\t\t * sprite is not moving.\n\t\t *\n\t\t * @property direction\n\t\t * @type {Number}\n\t\t * @default 0 (\"right\")\n\t\t */\n\t\tget direction() {\n\t\t\tif (this.body && (this.vel.x !== 0 || this.vel.y !== 0)) {\n\t\t\t\treturn this.p.atan2(this.vel.y, this.vel.x);\n\t\t\t}\n\t\t\tif (!this._direction) return this.rotation;\n\t\t\treturn this._direction;\n\t\t}\n\t\tset direction(val) {\n\t\t\tif (typeof val == 'string') {\n\t\t\t\tthis._heading = val;\n\n\t\t\t\tlet dir = val.toLowerCase().replaceAll(/[ _-]/g, '');\n\t\t\t\tlet dirs = {\n\t\t\t\t\tup: -90,\n\t\t\t\t\tdown: 90,\n\t\t\t\t\tleft: 180,\n\t\t\t\t\tright: 0,\n\t\t\t\t\tupright: -45,\n\t\t\t\t\trightup: -45,\n\t\t\t\t\tupleft: -135,\n\t\t\t\t\tleftup: -135,\n\t\t\t\t\tdownright: 45,\n\t\t\t\t\trightdown: 45,\n\t\t\t\t\tdownleft: 135,\n\t\t\t\t\tleftdown: 135,\n\t\t\t\t\tforward: this.rotation,\n\t\t\t\t\tbackward: this.rotation + 180\n\t\t\t\t};\n\t\t\t\tval = dirs[dir];\n\t\t\t}\n\n\t\t\tthis._direction = val;\n\t\t\tlet speed = this.speed;\n\t\t\tthis.vel.x = this.p.cos(val) * speed;\n\t\t\tthis.vel.y = this.p.sin(val) * speed;\n\t\t}\n\n\t\t/**\n\t\t * The amount of resistance a sprite has to being moved.\n\t\t *\n\t\t * @property drag\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tget drag() {\n\t\t\tif (this.body) return this.body.getLinearDamping();\n\t\t\telse return Infinity;\n\t\t}\n\t\tset drag(val) {\n\t\t\tif (this.body) this.body.setLinearDamping(val);\n\t\t}\n\n\t\t/**\n\t\t * Displays the sprite.\n\t\t *\n\t\t * This function is called automatically at\n\t\t * the end of each p5.js draw function call but it can also be run\n\t\t * separately to customize the order sprites are drawn in relation\n\t\t * to other stuff drawn to the p5.js canvas. Also see the sprite.layer\n\t\t * property.\n\t\t *\n\t\t * A sprite's draw function can be overridden with a\n\t\t * custom draw function, in which the center of the sprite is\n\t\t * at (0, 0).\n\t\t *\n\t\t * @example\n\t\t * sprite.draw = function() {\n\t\t *   // an oval\n\t\t *   ellipse(0,0,20,10);\n\t\t * }\n\t\t *\n\t\t * @method draw\n\t\t */\n\t\tget draw() {\n\t\t\treturn this._display;\n\t\t}\n\n\t\tset draw(val) {\n\t\t\tthis._draw = val;\n\t\t}\n\n\t\t/**\n\t\t * True if the sprite's physics body is dynamic.\n\t\t *\n\t\t * @property dynamic\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tget dynamic() {\n\t\t\tif (!this.body) return undefined;\n\t\t\treturn this.body.isDynamic();\n\t\t}\n\t\tset dynamic(val) {\n\t\t\tif (val) this.collider = 'dynamic';\n\t\t}\n\n\t\t/**\n\t\t * If true the sprite can not rotate.\n\t\t *\n\t\t * @property rotationLock\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tget rotationLock() {\n\t\t\tif (!this.body) return undefined;\n\t\t\treturn this.body.isFixedRotation();\n\t\t}\n\t\tset rotationLock(val) {\n\t\t\tif (this.body) this.body.setFixedRotation(val);\n\t\t}\n\n\t\t/**\n\t\t * Returns the first node in a linked list of the planck physics\n\t\t * body's fixtures.\n\t\t */\n\t\tget fixture() {\n\t\t\treturn this.fixtureList;\n\t\t}\n\t\t/**\n\t\t * Returns the first node in a linked list of the planck physics\n\t\t * body's fixtures.\n\t\t */\n\t\tget fixtureList() {\n\t\t\tif (!this.body) return null;\n\t\t\treturn this.body.getFixtureList();\n\t\t}\n\n\t\t/**\n\t\t * The amount the sprite's physics body resists moving\n\t\t * when rubbing against another physics body.\n\t\t *\n\t\t * @property friction\n\t\t * @type {Number}\n\t\t * @default 0.5\n\t\t */\n\t\tget friction() {\n\t\t\tif (!this.fixture) return;\n\t\t\treturn this.fixture.getFriction();\n\t\t}\n\t\tset friction(val) {\n\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\tfxt.setFriction(val);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * The sprite's heading. This is a string that can be set to\n\t\t * \"up\", \"down\", \"left\", \"right\", \"upRight\", \"upLeft\", \"downRight\"\n\t\t *\n\t\t * It ignores cardinal direction word order, capitalization, spaces,\n\t\t * underscores, and dashes.\n\t\t *\n\t\t * @property heading\n\t\t * @type {String}\n\t\t * @default undefined\n\t\t */\n\t\tget heading() {\n\t\t\treturn this._heading;\n\t\t}\n\t\tset heading(val) {\n\t\t\tthis.direction = val;\n\t\t}\n\n\t\t/**\n\t\t * Use .static instead.\n\t\t *\n\t\t * @deprecated immovable\n\t\t */\n\t\tget immovable() {\n\t\t\tconsole.warn('sprite.immovable is deprecated, use sprite.static instead');\n\t\t\treturn this.body.isStatic();\n\t\t}\n\t\tset immovable(val) {\n\t\t\tconsole.warn('sprite.immovable is deprecated, use sprite.static instead');\n\t\t\tif (val) this.body.setStatic();\n\t\t}\n\t\t// set impulse(val) {\n\t\t// \tthis.body.applyLinearImpulse(val, this.body.getWorldCenter(), true);\n\t\t// }\n\t\t// get inertia() {\n\t\t// \treturn this.body.getInertia();\n\t\t// }\n\n\t\t/**\n\t\t * A reference to the sprite's current image.\n\t\t *\n\t\t * @property img\n\t\t * @type {SpriteAnimation}\n\t\t */\n\t\tget img() {\n\t\t\treturn this._animation.frameImage;\n\t\t}\n\t\tset img(val) {\n\t\t\tthis.changeAni(val);\n\t\t}\n\n\t\t/**\n\t\t * A reference to the sprite's current image.\n\t\t *\n\t\t * @property image\n\t\t * @type {SpriteAnimation}\n\t\t */\n\t\tget image() {\n\t\t\treturn this._animation.frameImage;\n\t\t}\n\t\tset image(val) {\n\t\t\tthis.changeAni(val);\n\t\t}\n\n\t\t/**\n\t\t * True if the sprite is moving.\n\t\t *\n\t\t * @property isMoving\n\t\t * @type {Boolean}\n\t\t * @readonly\n\t\t */\n\t\tget isMoving() {\n\t\t\treturn this.vel.x != 0 || this.vel.y != 0;\n\t\t}\n\n\t\t/**\n\t\t * Set this to true if the sprite goes really fast to prevent\n\t\t * inaccurate physics simulation.\n\t\t *\n\t\t * @property isSuperFast\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tget isSuperFast() {\n\t\t\tif (!this.body) return undefined;\n\t\t\treturn this.body.isBullet();\n\t\t}\n\t\tset isSuperFast(val) {\n\t\t\tif (this.body) this.body.setBullet(val);\n\t\t}\n\n\t\t// get joint() {\n\t\t// \treturn this.body.getJointList().joint;\n\t\t// }\n\t\t// get jointList() {\n\t\t// \treturn this.body.getJointList();\n\t\t// }\n\n\t\t/**\n\t\t * True if the sprite's physics body is kinematic.\n\t\t *\n\t\t * @property kinematic\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tget kinematic() {\n\t\t\tif (!this.body) return undefined;\n\t\t\treturn this.body.isKinematic();\n\t\t}\n\t\tset kinematic(val) {\n\t\t\tif (val) this.collider = 'kinematic';\n\t\t}\n\t\t/**\n\t\t * The mass of the sprite's physics body.\n\t\t *\n\t\t * @property mass\n\t\t * @type {Number}\n\t\t */\n\t\tget mass() {\n\t\t\tif (!this.body) return undefined;\n\t\t\treturn this.body.getMass();\n\t\t}\n\t\tset mass(val) {\n\t\t\tif (!this.body) return;\n\t\t\tlet t = this.massData;\n\t\t\tt.mass = val;\n\t\t\tthis.body.setMassData(t);\n\t\t}\n\n\t\tget massData() {\n\t\t\tconst t = { I: 0, center: new pl.Vec2(0, 0), mass: 0 };\n\t\t\tthis.body.getMassData(t);\n\t\t\tt.center = scaleFrom(t.center, this.tileSize);\n\t\t\treturn t;\n\t\t}\n\t\t// set massData(val) {\n\t\t// \tval.center = scaleTo(val.center);\n\t\t// \tthis.body.setMassData(val);\n\t\t// }\n\n\t\t// get next() {\n\t\t// \treturn this.body.getNext();\n\t\t// }\n\n\t\t/**\n\t\t * Verbose alias for sprite.prevPos\n\t\t *\n\t\t * @property previousPosition\n\t\t * @type {object}\n\t\t */\n\t\tget previousPosition() {\n\t\t\treturn this.prevPos;\n\t\t}\n\t\tset previousPosition(val) {\n\t\t\tthis.prevPos = val;\n\t\t}\n\n\t\t/**\n\t\t * The angle of the sprite's rotation, not the direction it is moving.\n\t\t *\n\t\t * @property rotation\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tget rotation() {\n\t\t\tif (!this.body) return this._angle || 0;\n\t\t\tif (this.p._angleMode === p5.prototype.DEGREES) {\n\t\t\t\treturn p5.prototype.degrees(this.body.getAngle());\n\t\t\t}\n\t\t\treturn this.body.getAngle();\n\t\t}\n\t\tset rotation(val) {\n\t\t\tif (this.body) {\n\t\t\t\tif (this.p._angleMode === p5.prototype.DEGREES) {\n\t\t\t\t\tthis.body.setAngle(p5.prototype.radians(val));\n\t\t\t\t} else {\n\t\t\t\t\tthis.body.setAngle(val);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._angle = val;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * The amount the sprite resists rotating.\n\t\t *\n\t\t * @property rotationDrag\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tget rotationDrag() {\n\t\t\tif (!this.body) return undefined;\n\t\t\treturn this.body.getAngularDamping();\n\t\t}\n\t\tset rotationDrag(val) {\n\t\t\tif (this.body) this.body.setAngularDamping(val);\n\t\t}\n\t\t/**\n\t\t * The speed of the sprite's rotation.\n\t\t *\n\t\t * @property rotationSpeed\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tget rotationSpeed() {\n\t\t\tif (this.body) return this.body.getAngularVelocity();\n\t\t\treturn this._rotationSpeed || 0;\n\t\t}\n\t\tset rotationSpeed(val) {\n\t\t\tif (this.body) this.body.setAngularVelocity(val);\n\t\t\telse this._rotationSpeed = val;\n\t\t}\n\n\t\t/**\n\t\t * Scale of the sprite's physics body. Default is {x: 1, y: 1}\n\t\t *\n\t\t * The getter for sprite.scale returns the scale as an object with\n\t\t * x and y properties.\n\t\t *\n\t\t * The valueOf function for sprite.scale returns the scale as a\n\t\t * number. This enables users to do things like `sprite.scale *= 2`\n\t\t * to double the sprite's scale.\n\t\t *\n\t\t * @property scale\n\t\t * @type {Number|Object}\n\t\t * @default 1\n\t\t */\n\t\tget scale() {\n\t\t\treturn this._scale;\n\t\t}\n\t\tset scale(val) {\n\t\t\tif (val <= 0) val = 0.01;\n\t\t\tif (typeof val === 'number') {\n\t\t\t\tval = { x: val, y: val };\n\t\t\t}\n\t\t\tif (val.x == this._scale._x && val.y == this._scale._y) return;\n\n\t\t\tlet scalars = {\n\t\t\t\tx: val.x / this._scale._x,\n\t\t\t\ty: val.y / this._scale._y\n\t\t\t};\n\n\t\t\tthis._w *= scalars.x;\n\t\t\tthis._hw *= scalars.x;\n\t\t\tif (this._h) {\n\t\t\t\tthis._h *= scalars.y;\n\t\t\t\tthis._hh *= scalars.y;\n\t\t\t}\n\t\t\tthis._resizeCollider(scalars);\n\n\t\t\tthis._scale._x = val.x;\n\t\t\tthis._scale._y = val.y;\n\t\t\tthis._scale._avg = val.x;\n\t\t}\n\n\t\t/**\n\t\t * Wake a sprite up or put it to sleep.\n\t\t *\n\t\t * \"Sleeping\" sprites are not included in the physics simulation, a\n\t\t * sprite starts \"sleeping\" when it stops moving and doesn't collide\n\t\t * with anything that it wasn't already _touching.\n\t\t *\n\t\t * @property sleeping\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tget sleeping() {\n\t\t\tif (this.body) return !this.body.isAwake();\n\t\t\treturn undefined;\n\t\t}\n\n\t\tset sleeping(val) {\n\t\t\tif (this.body) this.body.setAwake(!val);\n\t\t}\n\n\t\t/**\n\t\t * @deprecated\n\t\t */\n\t\tgetSpeed() {\n\t\t\tconsole.warn('getSpeed() is deprecated, use sprite.speed instead');\n\t\t\treturn this.speed;\n\t\t}\n\n\t\t/**\n\t\t * The sprite's speed.\n\t\t *\n\t\t * @property speed\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tget speed() {\n\t\t\treturn this.p.createVector(this.vel.x, this.vel.y).mag();\n\t\t}\n\t\tset speed(val) {\n\t\t\tlet angle = this.direction;\n\t\t\tthis.vel.x = this.p.cos(angle) * val;\n\t\t\tthis.vel.y = this.p.sin(angle) * val;\n\t\t}\n\n\t\t/**\n\t\t * Is the sprite's physics collider static?\n\t\t *\n\t\t * @property static\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tget static() {\n\t\t\tif (!this.body) return undefined;\n\t\t\treturn this.body.isStatic();\n\t\t}\n\t\tset static(val) {\n\t\t\tif (val) this.collider = 'static';\n\t\t}\n\n\t\t/**\n\t\t * The sprite's vertices.\n\t\t *\n\t\t * @property vertices\n\t\t * @type {Array} An array of p5.Vector objects.\n\t\t * @readonly\n\t\t */\n\t\tget vertices() {\n\t\t\treturn this._getVertices();\n\t\t}\n\n\t\t_getVertices(output2DArrays) {\n\t\t\tlet f = this.fixture;\n\t\t\twhile (f.m_next) f = f.m_next;\n\t\t\tlet s = f.getShape();\n\t\t\tlet v = [...s.m_vertices];\n\t\t\tif (s.m_type == 'polygon') v.unshift(v.at(-1));\n\t\t\tlet x = this.x;\n\t\t\tlet y = this.y;\n\t\t\tfor (let i = 0; i < v.length; i++) {\n\t\t\t\tlet arr = [fixRound((v[i].x / this.tileSize) * plScale + x), fixRound((v[i].y / this.tileSize) * plScale + y)];\n\t\t\t\tlog(arr);\n\t\t\t\tif (output2DArrays) v[i] = arr;\n\t\t\t\telse v[i] = pInst.createVector(arr[0], arr[1]);\n\t\t\t}\n\t\t\treturn v;\n\t\t}\n\n\t\t// TODO set vertices\n\n\t\t/**\n\t\t * The horizontal position of the sprite.\n\t\t * @property x\n\t\t * @type {Number}\n\t\t */\n\t\tget x() {\n\t\t\tif (!this.body) return this._pos.x;\n\t\t\tlet x = (this.body.getPosition().x / this.tileSize) * plScale;\n\t\t\treturn fixRound(x);\n\t\t}\n\t\tset x(val) {\n\t\t\tif (this.body) {\n\t\t\t\tlet pos = new pl.Vec2((val * this.tileSize) / plScale, this.body.getPosition().y);\n\t\t\t\tthis.body.setPosition(pos);\n\t\t\t}\n\t\t\tthis._pos.x = val;\n\t\t}\n\t\t/**\n\t\t * The vertical position of the sprite.\n\t\t * @property y\n\t\t * @type {Number}\n\t\t */\n\t\tget y() {\n\t\t\tif (!this.body) return this._pos.y;\n\t\t\tlet y = (this.body.getPosition().y / this.tileSize) * plScale;\n\t\t\treturn fixRound(y);\n\t\t}\n\t\tset y(val) {\n\t\t\tif (this.body) {\n\t\t\t\tlet pos = new pl.Vec2(this.body.getPosition().x, (val * this.tileSize) / plScale);\n\t\t\t\tthis.body.setPosition(pos);\n\t\t\t}\n\t\t\tthis._pos.y = val;\n\t\t}\n\t\t/**\n\t\t * Set the position vector {x, y}\n\t\t *\n\t\t * @property pos\n\t\t * @type {Object}\n\t\t */\n\t\tset pos(val) {\n\t\t\tlet pos = new pl.Vec2((val.x * this.tileSize) / plScale, (val.y * this.tileSize) / plScale);\n\t\t\t_this.body.setPosition(pos);\n\t\t}\n\t\t/**\n\t\t * The width of the sprite.\n\t\t * @property w\n\t\t * @type {Number}\n\t\t */\n\t\tget w() {\n\t\t\treturn this._w;\n\t\t}\n\t\tset w(val) {\n\t\t\tif (val < 0) val = 0.01;\n\t\t\tif (val == this._w) return;\n\t\t\tthis._dimensionsUndefined = false;\n\t\t\tlet scalarX = val / this._w;\n\t\t\tthis._w = val;\n\t\t\tthis._hw = val * 0.5;\n\t\t\tthis._resizeCollider({ x: scalarX, y: 1 });\n\t\t}\n\t\t/**\n\t\t * Half the width of the sprite.\n\t\t * @property hw\n\t\t * @type {Number}\n\t\t */\n\t\tget hw() {\n\t\t\treturn this._hw;\n\t\t}\n\t\tset hw(val) {\n\t\t\tthrow new FriendlyError('Sprite.hw');\n\t\t}\n\t\t/**\n\t\t * The width of the sprite.\n\t\t * @property width\n\t\t * @type {Number}\n\t\t */\n\t\tget width() {\n\t\t\treturn this.w;\n\t\t}\n\t\tset width(val) {\n\t\t\tthis.w = val;\n\t\t}\n\t\t/**\n\t\t * Half the width of the sprite.\n\t\t * @property halfWidth\n\t\t * @type {Number}\n\t\t */\n\t\tget halfWidth() {\n\t\t\treturn this.hw;\n\t\t}\n\t\tset halfWidth(val) {\n\t\t\tthrow new FriendlyError('Sprite.hw');\n\t\t}\n\t\t/**\n\t\t * The height of the sprite.\n\t\t * @property h\n\t\t * @type {Number}\n\t\t */\n\t\tget h() {\n\t\t\tif (this.shape == 'circle') return this._w;\n\t\t\treturn this._h;\n\t\t}\n\t\tset h(val) {\n\t\t\tif (val < 0) val = 0.01;\n\t\t\tif (this.shape == 'circle') {\n\t\t\t\tthis.w = val;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (val == this._h) return;\n\t\t\tthis._dimensionsUndefined = false;\n\t\t\tlet scalarY = val / this._h;\n\t\t\tthis._h = val;\n\t\t\tthis._hh = val * 0.5;\n\t\t\tthis._resizeCollider({ x: 1, y: scalarY });\n\t\t}\n\t\t/**\n\t\t * Half the height of the sprite.\n\t\t * @property hh\n\t\t * @type {Number}\n\t\t */\n\t\tget hh() {\n\t\t\treturn this._hh || this._hw;\n\t\t}\n\t\tset hh(val) {\n\t\t\tthrow new FriendlyError('Sprite.hh');\n\t\t}\n\t\t/**\n\t\t * The height of the sprite.\n\t\t * @property height\n\t\t * @type {Number}\n\t\t */\n\t\tget height() {\n\t\t\treturn this.h;\n\t\t}\n\t\tset height(val) {\n\t\t\tthis.h = val;\n\t\t}\n\t\t/**\n\t\t * Half the height of the sprite.\n\t\t * @property halfHeight\n\t\t * @type {Number}\n\t\t */\n\t\tget halfHeight() {\n\t\t\treturn this.hh;\n\t\t}\n\t\tset halfHeight(val) {\n\t\t\tthrow new FriendlyError('Sprite.hh');\n\t\t}\n\t\t/**\n\t\t * The diameter of a circular sprite.\n\t\t * @property d\n\t\t * @type {Number}\n\t\t */\n\t\tget d() {\n\t\t\tthis._diameter ??= this.w;\n\t\t\treturn this._diameter;\n\t\t}\n\t\tset d(val) {\n\t\t\tif (val < 0) {\n\t\t\t\tthis.remove();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet shapeChange = this.shape != 'circle';\n\t\t\tif (!shapeChange) {\n\t\t\t\tif (this._diameter == val) return;\n\t\t\t\tthis._diameter = val;\n\t\t\t} else {\n\t\t\t\tlet bodyProps;\n\t\t\t\tif (this._collider == 'none') {\n\t\t\t\t\tbodyProps = this._cloneBodyProps();\n\t\t\t\t}\n\t\t\t\tthis._removeSensors();\n\t\t\t\tthis._removeColliders();\n\t\t\t\tthis._h = undefined;\n\t\t\t\tthis._shape = undefined;\n\t\t\t\tif (this._collider != 'none') {\n\t\t\t\t\tthis.addCollider(0, 0, val);\n\t\t\t\t\tfor (let prop in bodyProps) {\n\t\t\t\t\t\tif (bodyProps[prop] !== undefined) {\n\t\t\t\t\t\t\tthis[prop] = bodyProps[prop];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._shape = 'circle';\n\t\t\t}\n\t\t\tlet scalar = val / this._w;\n\t\t\tthis._w = val;\n\t\t\tthis._hw = val * 0.5;\n\t\t\tthis._h = val;\n\t\t\tthis._hh = this._hw;\n\t\t\tif (shapeChange) return;\n\t\t\tthis._resizeCollider({ x: scalar, y: scalar });\n\t\t}\n\t\t/**\n\t\t * The diameter of a circular sprite.\n\t\t * @property diameter\n\t\t * @type {Number}\n\t\t */\n\t\tget diameter() {\n\t\t\treturn this.d;\n\t\t}\n\t\tset diameter(val) {\n\t\t\tthis.d = val;\n\t\t}\n\n\t\t/**\n\t\t * The radius of a circular sprite.\n\t\t * @property r\n\t\t * @type {Number}\n\t\t */\n\t\tget r() {\n\t\t\treturn this._hw;\n\t\t}\n\t\tset r(val) {\n\t\t\tthis.d = val * 2;\n\t\t}\n\n\t\t/**\n\t\t * The radius of a circular sprite.\n\t\t * @property radius\n\t\t * @type {Number}\n\t\t */\n\t\tget radius() {\n\t\t\treturn this._hw;\n\t\t}\n\t\tset radius(val) {\n\t\t\tthis.d = val * 2;\n\t\t}\n\n\t\t/**\n\t\t * Resizes the collider of the sprite.\n\t\t *\n\t\t * @private _resizeCollider\n\t\t * @param {*} scalars The x and y scalars to resize the collider by.\n\t\t */\n\t\t_resizeCollider(scalars) {\n\t\t\tif (!this.body) return;\n\n\t\t\tif (this.shape == 'circle') {\n\t\t\t\tlet fxt = this.fixture;\n\t\t\t\tlet sh = fxt.m_shape;\n\t\t\t\tsh.m_radius *= scalars.x;\n\t\t\t} else {\n\t\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\t\tif (fxt.m_isSensor) continue;\n\t\t\t\t\tlet sh = fxt.m_shape;\n\t\t\t\t\tfor (let vert of sh.m_vertices) {\n\t\t\t\t\t\tvert.x *= scalars.x;\n\t\t\t\t\t\tvert.y *= scalars.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.collider == 'static') this.body.synchronizeFixtures();\n\t\t}\n\n\t\t/**\n\t\t * Validate convexity.\n\t\t *\n\t\t * @private _isConvexPoly\n\t\t * @param vecs {Array} an array of planck.Vec2 vertices\n\t\t * @returns true if the polygon is convex\n\t\t */\n\t\t_isConvexPoly(vecs) {\n\t\t\tloopk: for (let k = 0; k < 2; k++) {\n\t\t\t\tif (k == 1) vecs = vecs.reverse();\n\t\t\t\tfor (let i = 0; i < vecs.length; ++i) {\n\t\t\t\t\tconst i1 = i;\n\t\t\t\t\tconst i2 = i < vecs.length - 1 ? i1 + 1 : 0;\n\t\t\t\t\tconst p = vecs[i1];\n\t\t\t\t\tconst e = pl.Vec2.sub(vecs[i2], p);\n\n\t\t\t\t\tfor (let j = 0; j < vecs.length; ++j) {\n\t\t\t\t\t\tif (j == i1 || j == i2) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst v = pl.Vec2.sub(vecs[j], p);\n\t\t\t\t\t\tconst c = pl.Vec2.cross(e, v);\n\t\t\t\t\t\tif (c < 0.0) {\n\t\t\t\t\t\t\tif (k == 0) continue loopk;\n\t\t\t\t\t\t\telse return false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * The kind of shape: 'box', 'circle', 'chain', or 'polygon'.\n\t\t *\n\t\t * @property shape\n\t\t * @type {String}\n\t\t * @default box\n\t\t */\n\t\tget shape() {\n\t\t\treturn this._shape;\n\t\t}\n\n\t\tset shape(val) {\n\t\t\tif (val == this._shape) return;\n\n\t\t\tlet validShapes = ['box', 'circle', 'chain', 'polygon'];\n\t\t\tif (validShapes.indexOf(val) == -1) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Invalid shape type: \"' + val + '\"\\nThe valid shape types are: \"' + validShapes.join('\", \"') + '\"'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (val == 'circle') {\n\t\t\t\tthis.d = this.w;\n\t\t\t} else {\n\t\t\t\tthis._shape = val;\n\t\t\t\tthis._reset();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * You can set the sprite's update function to your own custom\n\t\t * update function that will be run after every draw call or when\n\t\t * the updateSprites function is called.\n\t\t *\n\t\t * @method update\n\t\t */\n\t\tget update() {\n\t\t\treturn this._update;\n\t\t}\n\n\t\tset update(val) {\n\t\t\tthis._customUpdate = val;\n\t\t}\n\n\t\tget pos() {\n\t\t\treturn this._position;\n\t\t}\n\n\t\tset pos(val) {\n\t\t\tthis.x = val.x;\n\t\t\tthis.y = val.y;\n\t\t}\n\n\t\tget position() {\n\t\t\treturn this._position;\n\t\t}\n\n\t\tset position(val) {\n\t\t\tthis.pos = val;\n\t\t}\n\n\t\tget vel() {\n\t\t\treturn this._velocity;\n\t\t}\n\n\t\tset vel(val) {\n\t\t\tthis.vel.x = val.x;\n\t\t\tthis.vel.y = val.y;\n\t\t}\n\n\t\tset velocity(val) {\n\t\t\tthis.vel = val;\n\t\t}\n\n\t\tget velocity() {\n\t\t\treturn this._velocity;\n\t\t}\n\n\t\t/**\n\t\t * Updates the sprite. Called automatically at the end of the draw\n\t\t * cycle.\n\t\t *\n\t\t * @private _update\n\t\t */\n\t\t_update() {\n\t\t\tif (this.animation) this.animation.update();\n\n\t\t\tif (!this.body) {\n\t\t\t\tthis.rotation += this._rotationSpeed;\n\t\t\t\tthis.x += this.vel.x;\n\t\t\t\tthis.y += this.vel.y;\n\t\t\t}\n\n\t\t\tfor (let prop in this.mouse) {\n\t\t\t\tif (this.mouse[prop] == -1) this.mouse[prop] = 0;\n\t\t\t}\n\n\t\t\tlet a = this;\n\t\t\tfor (let event in eventTypes) {\n\t\t\t\tfor (let entry of this[event]) {\n\t\t\t\t\tlet contactType;\n\t\t\t\t\tlet b = entry[0];\n\t\t\t\t\tlet f = entry[1] + 1;\n\t\t\t\t\tthis[event].set(b, f);\n\t\t\t\t\tif (f == 0) {\n\t\t\t\t\t\tthis[event].delete(b);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (f == -1) {\n\t\t\t\t\t\tcontactType = eventTypes[event][2];\n\t\t\t\t\t} else if (f == 1) {\n\t\t\t\t\t\tcontactType = eventTypes[event][0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontactType = eventTypes[event][1];\n\t\t\t\t\t}\n\t\t\t\t\tif (b instanceof Group) continue;\n\n\t\t\t\t\tlet cb = _findContactCB(contactType, a, b);\n\t\t\t\t\tif (typeof cb == 'function') cb(a, b, f);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._customUpdate) this._customUpdate();\n\t\t}\n\n\t\t/**\n\t\t * Default draw\n\t\t *\n\t\t * @private _draw\n\t\t */\n\t\t_draw() {\n\t\t\tif (this.strokeWeight) this.p.strokeWeight(this.strokeWeight);\n\t\t\tif (this.animation && !this.debug) {\n\t\t\t\tthis.animation.draw(0, 0, 0, this._scale.x, this._scale.y);\n\t\t\t} else if (this.fixture != null) {\n\t\t\t\tif (this._shape == 'chain') this.p.stroke(this.stroke || this.color);\n\t\t\t\telse if (this._stroke) this.p.stroke(this._stroke);\n\t\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\t\tthis._drawFixture(fxt);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.p.stroke(this._stroke || 120);\n\t\t\t\tif (this._shape == 'box') {\n\t\t\t\t\tthis.p.rect(0, 0, this.w * this.tileSize, this.h * this.tileSize);\n\t\t\t\t} else if (this._shape == 'circle') {\n\t\t\t\t\tthis.p.circle(0, 0, this.d * this.tileSize);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.text !== undefined) {\n\t\t\t\tthis.p.textAlign(this.p.CENTER, this.p.CENTER);\n\t\t\t\tthis.p.fill(this.textColor);\n\t\t\t\tthis.p.textSize(this.textSize * this.tileSize);\n\t\t\t\tthis.p.text(this.text, 0, 0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Displays the Sprite with rotation and scaling applied before\n\t\t * the sprite's draw function is called.\n\t\t *\n\t\t * @private _display\n\t\t */\n\t\t_display() {\n\t\t\tlet x = this.p.width * 0.5 - this.p.world.origin.x + this.x * this.tileSize;\n\t\t\tlet y = this.p.height * 0.5 - this.p.world.origin.y + this.y * this.tileSize;\n\n\t\t\t// skip drawing for out-of-view bodies, but\n\t\t\t// edges can be very long, so they still should be drawn\n\t\t\tif (\n\t\t\t\tthis.shape != 'chain' &&\n\t\t\t\tthis.p.camera.active &&\n\t\t\t\t(x + this.w < this.p.camera.bound.min.x ||\n\t\t\t\t\tx - this.w > this.p.camera.bound.max.x ||\n\t\t\t\t\ty + this.h < this.p.camera.bound.min.y ||\n\t\t\t\t\ty - this.h > this.p.camera.bound.max.y)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tx = fixRound(x);\n\t\t\tx -= (this.w * this.tileSize) % 2 ? 0.5 : 0;\n\t\t\ty = fixRound(y);\n\t\t\ty -= (this.h * this.tileSize) % 2 ? 0.5 : 0;\n\n\t\t\t// x += this.tileSize * 0.015;\n\t\t\t// y += this.tileSize * 0.015;\n\n\t\t\tthis.p.push();\n\t\t\tthis.p.imageMode(p5.prototype.CENTER);\n\t\t\tthis.p.rectMode(p5.prototype.CENTER);\n\t\t\tthis.p.ellipseMode(p5.prototype.CENTER);\n\n\t\t\tthis.p.translate(x, y);\n\t\t\tif (this.rotation) this.p.rotate(this.rotation);\n\t\t\tthis.p.scale(this._mirror.x, this._mirror.y);\n\n\t\t\tthis.p.fill(this.color);\n\n\t\t\tthis._draw();\n\n\t\t\tthis.p.pop();\n\t\t\tthis.p.p5play.autoDrawSprites = false;\n\n\t\t\tthis._cameraActiveWhenDrawn = this.p.camera.active;\n\t\t}\n\n\t\t/**\n\t\t * Draws a fixture. Used to draw the sprite's physics body.\n\t\t *\n\t\t * @private _drawFixture\n\t\t */\n\t\t_drawFixture(fxt) {\n\t\t\tconst sh = fxt.m_shape;\n\t\t\tif (sh.m_type == 'polygon' || sh.m_type == 'chain') {\n\t\t\t\tif (sh.m_type == 'chain') {\n\t\t\t\t\tthis.p.push();\n\t\t\t\t\tthis.p.noFill();\n\t\t\t\t}\n\t\t\t\tlet v = sh.m_vertices;\n\t\t\t\tthis.p.beginShape();\n\t\t\t\tfor (let i = 0; i < v.length; i++) {\n\t\t\t\t\tthis.p.vertex(v[i].x * plScale, v[i].y * plScale);\n\t\t\t\t}\n\t\t\t\tif (sh.m_type != 'chain') this.p.endShape(p5.prototype.CLOSE);\n\t\t\t\telse {\n\t\t\t\t\tthis.p.endShape();\n\t\t\t\t\tthis.p.pop();\n\t\t\t\t}\n\t\t\t} else if (sh.m_type == 'circle') {\n\t\t\t\tconst d = sh.m_radius * 2 * plScale;\n\t\t\t\tthis.p.ellipse(sh.m_p.x * plScale, sh.m_p.y * plScale, d, d);\n\t\t\t} else if (sh.m_type == 'edge') {\n\t\t\t\tthis.p.line(\n\t\t\t\t\tsh.m_vertex1.x * plScale,\n\t\t\t\t\tsh.m_vertex1.y * plScale,\n\t\t\t\t\tsh.m_vertex2.x * plScale,\n\t\t\t\t\tsh.m_vertex2.y * plScale\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Apply a force that is scaled to the sprite's mass.\n\t\t *\n\t\t * @method applyForce\n\t\t * @param {p5.Vector|Array} forceVector force vector\n\t\t * @param {p5.Vector|Array} [forceOrigin] force origin\n\t\t */\n\t\tapplyForce(forceVector, forceOrigin) {\n\t\t\tif (!this.body) return;\n\t\t\tif (Array.isArray(forceVector)) {\n\t\t\t\tforceVector = new pl.Vec2(forceVector[0], forceVector[1]);\n\t\t\t} else {\n\t\t\t\tforceVector = new pl.Vec2(forceVector.x || 0, forceVector.y || 0);\n\t\t\t}\n\t\t\tif (forceOrigin) {\n\t\t\t\tif (Array.isArray(forceOrigin)) {\n\t\t\t\t\tforceOrigin = new pl.Vec2(forceOrigin[0], forceOrigin[1]);\n\t\t\t\t} else {\n\t\t\t\t\tforceOrigin = new pl.Vec2(forceOrigin.x || 0, forceOrigin.y || 0);\n\t\t\t\t}\n\t\t\t\tthis.body.applyForce(forceVector.mul(this.body.m_mass), forceOrigin, false);\n\t\t\t} else {\n\t\t\t\tthis.body.applyForceToCenter(forceVector.mul(this.body.m_mass), false);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Apply a torque on the sprite's physics body.\n\t\t * Torque is the force that causes rotation.\n\t\t * A positive torque will rotate the sprite clockwise.\n\t\t * A negative torque will rotate the sprite counter-clockwise.\n\t\t *\n\t\t * @method applyTorque\n\t\t * @param {Number} torque The amount of torque to apply.\n\t\t */\n\t\tapplyTorque(val) {\n\t\t\tthis.body.applyTorque(val, true);\n\t\t}\n\n\t\t/**\n\t\t * Deprecated: set sprite.vel instead.\n\t\t *\n\t\t * Sets the velocity vector.\n\t\t *\n\t\t * @deprecated setVelocity\n\t\t * @param {Number} vector|x vector or horizontal velocity\n\t\t * @param {Number} y vertical velocity\n\t\t * @example\n\t\t * sprite.vel = createVector(1, 2);\n\t\t * // OR\n\t\t * sprite.vel.x = 1;\n\t\t * sprite.vel.y = 2;\n\t\t */\n\t\tsetVelocity(x, y) {\n\t\t\tconsole.warn('setVelocity() is deprecated. Set sprite.vel instead.');\n\t\t\tif (typeof x == 'object') {\n\t\t\t\ty = x.y;\n\t\t\t\tx = x.x;\n\t\t\t}\n\t\t\tthis.vel.x = x;\n\t\t\tthis.vel.y = y;\n\t\t}\n\n\t\t/**\n\t\t * Deprecated: set direction and set speed separately\n\t\t *\n\t\t * Sets the speed of the sprite.\n\t\t * The action overwrites the current velocity.\n\t\t * If direction is not supplied, the current direction is maintained.\n\t\t * If direction is not supplied and there is no current velocity, the\n\t\t * current rotation angle used for the direction.\n\t\t *\n\t\t * @deprecated setSpeed\n\t\t * @param {Number} speed Scalar speed\n\t\t * @param {Number} [direction] angle\n\t\t */\n\t\tsetSpeed(speed, direction) {\n\t\t\tconsole.warn('setSpeed is deprecated. Set sprite.direction and sprite.speed separately instead.');\n\t\t\tif (direction) this.direction = direction;\n\t\t\tthis.speed = speed;\n\t\t}\n\n\t\t/**\n\t\t * Add to the speed of the sprite.\n\t\t * If direction is not supplied, the current direction is maintained.\n\t\t * If direction is not supplied and there is no current velocity, the * current rotation angle used for the direction.\n\t\t *\n\t\t * @method addSpeed\n\t\t * @param {Number} speed Scalar speed\n\t\t * @param {Number} [angle] Direction in degrees\n\t\t */\n\t\taddSpeed(speed, angle) {\n\t\t\tangle ??= this.direction;\n\n\t\t\tthis.vel.x += this.p.cos(angle) * speed;\n\t\t\tthis.vel.y += this.p.sin(angle) * speed;\n\t\t}\n\n\t\t/**\n\t\t * Move a sprite towards a position.\n\t\t *\n\t\t * @method moveTowards\n\t\t * @param {Number|Object} x|position destination x or any object with x and y properties\n\t\t * @param {Number} y destination y\n\t\t * @param {Number} tracking [optional] 1 represents 1:1 tracking, the mouse moves to the destination immediately, 0 represents no tracking. Default is 0.1 (10% tracking).\n\t\t */\n\t\tmoveTowards(x, y, tracking) {\n\t\t\tif (typeof x != 'number') {\n\t\t\t\tlet obj = x;\n\t\t\t\tif (obj == this.p.mouse && !this.p.mouse.active) return;\n\t\t\t\tif (obj.x === undefined || obj.y === undefined) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'sprite.moveTowards/moveAway ERROR: movement destination not defined, object given with no x or y properties'\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttracking = y;\n\t\t\t\ty = obj.y;\n\t\t\t\tx = obj.x;\n\t\t\t}\n\t\t\tif (x === undefined && y === undefined) return;\n\t\t\ttracking ??= 0.1;\n\n\t\t\t// let vec = new pl.Vec2(0, 0);\n\t\t\tif (x !== undefined && x !== null) {\n\t\t\t\t// vec.x = (destX - this.x) * tracking * this.tileSize * this.mass;\n\t\t\t\tthis.vel.x = (x - this.x) * tracking * this.tileSize;\n\t\t\t}\n\t\t\tif (y !== undefined && y !== null) {\n\t\t\t\t// vec.y = (destY - this.y) * tracking * this.tileSize * this.mass;\n\t\t\t\tthis.vel.y = (y - this.y) * tracking * this.tileSize;\n\t\t\t}\n\t\t\t// this.body.applyForce(vec, new pl.Vec2(0, 0));\n\t\t}\n\n\t\t/**\n\t\t * Move a sprite away from a position.\n\t\t *\n\t\t * @method moveAway\n\t\t * @param {Number|Object} x|position x or any object with x and y properties\n\t\t * @param {Number} y\n\t\t * @param {Number} repel [optional] the higher the value, the faster the sprite moves away. Default is 0.1 (10% repel).\n\t\t */\n\t\tmoveAway(x, y, repel) {\n\t\t\tthis.moveTowards(...arguments);\n\t\t\tthis.vel.x *= -1;\n\t\t\tthis.vel.y *= -1;\n\t\t}\n\n\t\t/**\n\t\t * Move the sprite a certain distance from its current position.\n\t\t *\n\t\t * @method move\n\t\t * @param {Number} distance [optional]\n\t\t * @param {Number|String} direction [optional]\n\t\t * @param {Number} speed [optional]\n\t\t * @returns {Promise} resolves when the movement is complete or cancelled\n\t\t *\n\t\t * @example\n\t\t * sprite.move(distance);\n\t\t * sprite.move(distance, direction);\n\t\t * sprite.move(distance, direction, speed);\n\t\t *\n\t\t * sprite.move(directionName);\n\t\t * sprite.move(directionName, speed);\n\t\t * sprite.move(directionName, speed, distance); // deprecated usage\n\t\t */\n\t\tmove(distance, direction, speed) {\n\t\t\tlet dirNameMode = isNaN(arguments[0]);\n\t\t\tif (dirNameMode) {\n\t\t\t\tdirection = arguments[0];\n\t\t\t\tspeed = arguments[1];\n\t\t\t\tdistance = arguments[2];\n\t\t\t\tif (distance !== undefined) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`In p5.play v3.3.0 the parameter ordering for the move() function was changed to: move(distance, direction, speed).`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdirNameMode = isNaN(direction);\n\t\t\t}\n\t\t\tif (direction !== undefined) this.direction = direction;\n\t\t\tdistance ??= 1;\n\t\t\tlet x = this.x + this.p.cos(this.direction) * distance;\n\t\t\tlet y = this.y + this.p.sin(this.direction) * distance;\n\t\t\tif (dirNameMode) {\n\t\t\t\tx = Math.round(x);\n\t\t\t\ty = Math.round(y);\n\t\t\t}\n\t\t\treturn this.moveTo(x, y, speed);\n\t\t}\n\n\t\t/**\n\t\t * Move the sprite to a position.\n\t\t *\n\t\t * @method moveTo\n\t\t * @param {Number|Object} x|position destination x or any object with x and y properties\n\t\t * @param {Number} y destination y\n\t\t * @param {Number} speed [optional]\n\t\t * @returns {Promise} resolves when the movement is complete or cancelled\n\t\t */\n\t\tmoveTo(x, y, speed) {\n\t\t\tif (typeof x == 'undefined') {\n\t\t\t\tconsole.error('sprite.move ERROR: movement direction or destination not defined');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (typeof x != 'number') {\n\t\t\t\tlet obj = x;\n\t\t\t\tif (obj == this.p.mouse && !this.p.mouse.active) return;\n\t\t\t\tif (obj.x === undefined || obj.y === undefined) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'sprite.moveTo ERROR: movement destination not defined, object given with no x or y properties'\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tspeed = y;\n\t\t\t\ty = obj.y;\n\t\t\t\tx = obj.x;\n\t\t\t}\n\t\t\tthis._dest.x = this.x;\n\t\t\tthis._dest.y = this.y;\n\n\t\t\tlet direction = true;\n\n\t\t\tif (x == this.x) x = false;\n\t\t\telse {\n\t\t\t\tthis._dest.x = x;\n\t\t\t\tx = true;\n\t\t\t}\n\t\t\tif (y == this.y) y = false;\n\t\t\telse {\n\t\t\t\tthis._dest.y = y;\n\t\t\t\ty = true;\n\t\t\t}\n\n\t\t\tthis._destIdx++;\n\t\t\tif (!x && !y) return true;\n\n\t\t\tif (this.speed) speed ??= this.speed;\n\t\t\tif (this.tileSize > 1) speed ??= 0.1;\n\t\t\tspeed ??= 1;\n\t\t\tif (speed <= 0) {\n\t\t\t\tconsole.warn('sprite.move: speed should be a positive number');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet a = this._dest.y - this.y;\n\t\t\tlet b = this._dest.x - this.x;\n\t\t\tlet c = Math.sqrt(a * a + b * b);\n\n\t\t\tlet percent = speed / c;\n\n\t\t\tthis.vel.x = b * percent;\n\t\t\tthis.vel.y = a * percent;\n\n\t\t\t// estimate how many frames it will take for the sprite\n\t\t\t// to reach its destination\n\t\t\tlet frames = Math.floor(c / speed) - 5;\n\n\t\t\t// margin of error\n\t\t\tlet margin = speed + 0.01;\n\n\t\t\tlet destIdx = this._destIdx;\n\n\t\t\treturn (async () => {\n\t\t\t\tlet distX = margin + margin;\n\t\t\t\tlet distY = margin + margin;\n\t\t\t\tdo {\n\t\t\t\t\tif (destIdx != this._destIdx) return false;\n\n\t\t\t\t\tawait p5.prototype.delay();\n\n\t\t\t\t\t// skip calculations if not close enough to destination yet\n\t\t\t\t\tif (frames > 0) {\n\t\t\t\t\t\tframes--;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// check if the sprite has reached its destination\n\t\t\t\t\tdistX = Math.abs(this.x - this._dest.x);\n\t\t\t\t\tdistY = Math.abs(this.y - this._dest.y);\n\t\t\t\t} while ((x && distX > margin) || (y && distY > margin));\n\t\t\t\t// stop moving the sprite, snap to destination\n\t\t\t\tif (distX < margin) this.x = this._dest.x;\n\t\t\t\tif (distY < margin) this.y = this._dest.y;\n\t\t\t\tthis.vel.x = 0;\n\t\t\t\tthis.vel.y = 0;\n\t\t\t\treturn true;\n\t\t\t})();\n\t\t}\n\n\t\t/**\n\t\t * Pushes the sprite toward a point.\n\t\t * The force is added to the current velocity.\n\t\t *\n\t\t * Legacy method, use moveTo or moveTowards instead.\n\t\t *\n\t\t * @deprecated\n\t\t * @param {Number}  magnitude Scalar speed to add\n\t\t * @param {Number}  x Direction x coordinate\n\t\t * @param {Number}  y Direction y coordinate\n\t\t */\n\t\tattractionPoint(magnitude, x, y) {\n\t\t\tconsole.warn('sprite.attractionPoint is deprecated, use sprite.moveTowards instead');\n\t\t\tlet angle = this.p.atan2(y - this.y, x - this.x);\n\t\t\tthis.vel.x += this.p.cos(angle) * magnitude;\n\t\t\tthis.vel.y += this.p.sin(angle) * magnitude;\n\t\t}\n\n\t\tsnap(o, dist) {\n\t\t\tif (o.isMoving || o.x != o._dest.x || o.y != o._dest.y || !this.isMoving) return;\n\t\t\tdist ??= 1 || this.tileSize * 0.1;\n\t\t\tif (Math.abs(this.x) % 1 >= dist || Math.abs(this.y) % 1 >= dist) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.vel.x = 0;\n\t\t\tthis.vel.y = 0;\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t}\n\n\t\t/**\n\t\t * @method rotateTowards\n\t\t * @param {*} x position to rotate towards\n\t\t * @param {*} y position to rotate towards\n\t\t * @param {*} tracking percent of the distance to rotate on each frame towards the target angle, default is 0.1 (10%)\n\t\t * @param {*} facing rotation angle the sprite should be at when \"facing\" the position, default is 0\n\t\t */\n\t\trotateTowards(x, y, tracking, facing) {\n\t\t\tif (typeof x != 'number') {\n\t\t\t\tfacing = tracking;\n\t\t\t\ttracking = y;\n\t\t\t\ty = facing;\n\t\t\t}\n\t\t\tlet angle = this.angleTo(x, y, facing);\n\t\t\ttracking ??= 0.1;\n\t\t\tthis.rotationSpeed = angle * tracking;\n\t\t}\n\n\t\t/**\n\t\t * Finds the minimium amount the sprite would have to rotate to\n\t\t * \"face\" a position at a rotation.\n\t\t *\n\t\t * @method angleTo\n\t\t * @param {Number|Object} x|position\n\t\t * @param {Number} y\n\t\t * @param {Number} facing rotation angle the sprite should be at when \"facing\" the position, default is 0\n\t\t * @returns {Number} minimum angle of rotation to face the position\n\t\t */\n\t\tangleTo(x, y, facing) {\n\t\t\tif (typeof x != 'number') {\n\t\t\t\tlet obj = x;\n\t\t\t\tif (obj == this.p.mouse && !this.p.mouse.active) return 0;\n\t\t\t\tif (obj.x === undefined || obj.y === undefined) {\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'sprite.angleTo ERROR: rotation destination not defined, object given with no x or y properties'\n\t\t\t\t\t);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tfacing = y;\n\t\t\t\ty = obj.y;\n\t\t\t\tx = obj.x;\n\t\t\t}\n\n\t\t\tif (Math.abs(x - this.x) < 0.01 && Math.abs(y - this.y) < 0.01) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tfacing ??= 0;\n\n\t\t\tlet ang = this.p.atan2(y - this.y, x - this.x) + facing;\n\t\t\tlet dist1 = ang - (this.rotation % 360);\n\t\t\tlet dist2 = 360 - Math.abs(dist1);\n\t\t\tdist2 *= dist1 < 0 ? 1 : -1;\n\t\t\treturn Math.abs(dist1) < Math.abs(dist2) ? dist1 : dist2;\n\t\t}\n\n\t\t/**\n\t\t * Rotates the sprite to a position at a rotation.\n\t\t *\n\t\t * @method rotateTo\n\t\t * @param {Number|Object} x|position\n\t\t * @param {Number} y\n\t\t * @param {Number} speed the amount of rotation per frame, default is 1\n\t\t * @param {Number} facing rotation angle the sprite should be at when \"facing\" the position, default is 0\n\t\t * @returns {Promise} a promise that resolves when the rotation is complete\n\t\t */\n\t\trotateTo(x, y, speed, facing) {\n\t\t\tif (typeof x != 'number') {\n\t\t\t\tfacing = speed;\n\t\t\t\tspeed = y;\n\t\t\t\ty = facing;\n\t\t\t}\n\n\t\t\tlet angle = this.angleTo(x, y, facing);\n\n\t\t\treturn this.rotate(angle, speed);\n\t\t}\n\n\t\t/**\n\t\t * Rotates the sprite by an amount at a specified angles per frame speed.\n\t\t *\n\t\t * @method rotate\n\t\t * @param {Number} angle the amount to rotate the sprite\n\t\t * @param {Number} speed the amount of rotation per frame, default is 1\n\t\t * @returns {Promise} a promise that resolves when the rotation is complete\n\t\t */\n\t\trotate(angle, speed) {\n\t\t\tif (isNaN(angle)) throw new FriendlyError();\n\t\t\tif (angle == 0) return;\n\t\t\tlet absA = Math.abs(angle);\n\t\t\tspeed ??= 1;\n\t\t\tif (speed > absA) speed = absA;\n\n\t\t\tlet ang = this.rotation + angle;\n\t\t\tlet cw = angle > 0;\n\t\t\tthis.rotationSpeed = speed * (cw ? 1 : -1);\n\n\t\t\tlet frames = Math.ceil(absA / speed);\n\t\t\tthis._rotateIdx ??= 0;\n\t\t\tthis._rotateIdx++;\n\t\t\tlet _rotateIdx = this._rotateIdx;\n\n\t\t\treturn (async () => {\n\t\t\t\tif (frames > 1) {\n\t\t\t\t\twhile (frames > 0) {\n\t\t\t\t\t\tif (this._rotateIdx != _rotateIdx) return;\n\t\t\t\t\t\tawait p5.prototype.delay();\n\t\t\t\t\t\tframes--;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (Math.abs(this.rotationSpeed) < Math.abs(ang - this.rotation)) {\n\t\t\t\t\t\tawait p5.prototype.delay();\n\t\t\t\t\t}\n\t\t\t\t\tif (Math.abs(ang - this.rotation) > 0.01) {\n\t\t\t\t\t\tthis.rotationSpeed = ang - this.rotation;\n\t\t\t\t\t\tawait p5.prototype.delay();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait p5.prototype.delay();\n\t\t\t\t}\n\t\t\t\tthis.rotationSpeed = 0;\n\t\t\t\tthis.rotation = ang;\n\t\t\t})();\n\t\t}\n\n\t\t/**\n\t\t * Changes the sprite's animation. Use `addAni` to define the\n\t\t * animation(s) first.\n\t\t *\n\t\t * @method changeAni\n\t\t * @param {...String} anis the names of one or many animations to be played in\n\t\t * sequence\n\t\t * @returns A promise that fulfills when the animation or sequence of animations\n\t\t * completes\n\t\t */\n\t\tasync changeAni(...anis) {\n\t\t\tif (anis.length == 1 && Array.isArray(anis[0])) {\n\t\t\t\tanis = anis[0];\n\t\t\t}\n\n\t\t\tlet _ani = (name, start, end) => {\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\tthis._changeAni(name);\n\t\t\t\t\tif (start < 0) start = this._animation.length + start;\n\t\t\t\t\tif (start) this._animation.frame = start;\n\n\t\t\t\t\tif (end !== undefined) this._animation.goToFrame(end);\n\t\t\t\t\telse if (this.frame == this.lastFrame) resolve();\n\n\t\t\t\t\tthis._animation.onComplete = () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tfor (let i = 0; i < anis.length; i++) {\n\t\t\t\tlet ani = anis[i];\n\t\t\t\tif (\n\t\t\t\t\tani instanceof SpriteAnimation ||\n\t\t\t\t\tani instanceof p5.Image ||\n\t\t\t\t\t(typeof ani == 'string' && ani.length != 1 && ani.includes('.'))\n\t\t\t\t) {\n\t\t\t\t\tanis[i] = this.addAni(ani);\n\t\t\t\t\tani = anis[i];\n\t\t\t\t}\n\t\t\t\tif (typeof ani == 'string') {\n\t\t\t\t\tanis[i] = { name: ani };\n\t\t\t\t\tani = anis[i];\n\t\t\t\t}\n\t\t\t\tif (ani.name[0] == '!') {\n\t\t\t\t\tani.name = ani.name.slice(1);\n\t\t\t\t\tani.start = -1;\n\t\t\t\t\tani.end = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// let count = ++this._aniChanged;\n\n\t\t\tfor (let i = 0; i < anis.length; i++) {\n\t\t\t\tlet ani = anis[i];\n\t\t\t\t// if () { // TODO repeat\n\t\t\t\t// \tif (count == this._aniChanged) i = 0;\n\t\t\t\t// \tcontinue;\n\t\t\t\t// }\n\t\t\t\tlet { name, start, end } = ani;\n\t\t\t\tawait _ani(name, start, end);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Changes the sprite's animation. Use `addAni` to define the\n\t\t * animation(s) first. Alt for `changeAni`.\n\t\t *\n\t\t * @method changeAnimation\n\t\t * @param {...String} anis the names of one or many animations to be played in\n\t\t * sequence\n\t\t * @returns A promise that fulfills when the animation or sequence of animations\n\t\t * completes\n\t\t */\n\t\tchangeAnimation() {\n\t\t\treturn this.changeAni(...arguments);\n\t\t}\n\n\t\t/**\n\t\t * Changes the displayed animation. The animation must be added first\n\t\t * using the sprite.addAnimation method. The animation could also be\n\t\t * added using the group.addAnimation method to a group the sprite\n\t\t * has been added to.\n\t\t *\n\t\t * See SpriteAnimation for more control over the sequence.\n\t\t *\n\t\t * @method changeAnimation\n\t\t * @param {String} label SpriteAnimation identifier\n\t\t */\n\t\t_changeAni(label) {\n\t\t\tlet ani = this.animations[label];\n\t\t\tif (!ani) {\n\t\t\t\tfor (let i = this.groups.length - 1; i >= 0; i--) {\n\t\t\t\t\tlet g = this.groups[i];\n\t\t\t\t\tani = g.animations[label];\n\t\t\t\t\tif (ani) {\n\t\t\t\t\t\tani = ani.clone();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ani) {\n\t\t\t\tthis.p.noLoop();\n\t\t\t\tthrow new FriendlyError('Sprite.changeAnimation', [label]);\n\t\t\t}\n\t\t\tthis._animation = ani;\n\t\t\tthis.animation.name = label;\n\t\t\t// reset to frame 0 of that animation\n\t\t\tif (this.autoResetAnimations || (this.autoResetAnimations !== false && this.p.world.autoResetAnimations)) {\n\t\t\t\tthis.animation.frame = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Removes the Sprite from the sketch.\n\t\t * The removed Sprite will not be drawn or updated anymore.\n\t\t *\n\t\t * @method remove\n\t\t */\n\t\tremove() {\n\t\t\tif (this.body) this.p.world.destroyBody(this.body);\n\t\t\tthis.body = null;\n\t\t\tthis.removed = true;\n\n\t\t\t//when removed from the \"scene\" also remove all the references in all the groups\n\t\t\twhile (this.groups.length > 0) {\n\t\t\t\tthis.groups[0].remove(this);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Returns the sprite's unique identifier\n\t\t *\n\t\t * @method toString\n\t\t * @returns the sprite's id\n\t\t */\n\t\ttoString() {\n\t\t\treturn 's' + this.idNum;\n\t\t}\n\n\t\t_ensureCollide(target, callback) {\n\t\t\tif (!target) {\n\t\t\t\tthrow new FriendlyError('Sprite.collide', 2);\n\t\t\t}\n\t\t\tif (!(target instanceof Sprite) && !(target instanceof Group)) {\n\t\t\t\tthrow new FriendlyError('Sprite.collide', 0, [target]);\n\t\t\t}\n\t\t\tif (callback && typeof callback != 'function') {\n\t\t\t\tthrow new FriendlyError('Sprite.collide', 1, [callback]);\n\t\t\t}\n\t\t}\n\n\t\tcollide(target, callback) {\n\t\t\treturn this.collides(target, callback);\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the sprite collides with the\n\t\t * target sprite or group.\n\t\t *\n\t\t * Custom collision event handling can be done by using this function\n\t\t * in an if statement or adding a callback as the second parameter.\n\t\t *\n\t\t * @method collides\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t */\n\t\tcollides(target, callback) {\n\t\t\tthis._ensureCollide(target, callback);\n\t\t\tthis._collides[target] = callback || true;\n\t\t\treturn this._collisions.get(target) == 1;\n\t\t}\n\n\t\t/**\n\t\t * Returns a truthy value while the sprite is colliding with the\n\t\t * target sprite or group. The value is the number of frames that\n\t\t * the sprite has been colliding with the target.\n\t\t *\n\t\t * @method colliding\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Number} frames\n\t\t */\n\t\tcolliding(target, callback) {\n\t\t\tthis._ensureCollide(target, callback);\n\t\t\tthis._colliding[target] = callback || true;\n\t\t\tlet val = this._collisions.get(target);\n\t\t\treturn val > 0 ? val : 0;\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the sprite no longer overlaps\n\t\t * with the target sprite or group.\n\t\t *\n\t\t * @method collided\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Boolean}\n\t\t */\n\t\tcollided(target, callback) {\n\t\t\tthis._ensureCollide(target, callback);\n\t\t\tthis._collided[target] = callback || true;\n\t\t\treturn this._collisions.get(target) == -1;\n\t\t}\n\n\t\t_ensureOverlap(target, callback) {\n\t\t\tif (!target) {\n\t\t\t\tthrow new FriendlyError('Sprite.overlap', 2);\n\t\t\t}\n\t\t\tif (!(target instanceof Sprite) && !(target instanceof Group)) {\n\t\t\t\tthrow new FriendlyError('Sprite.overlap', 0, [target]);\n\t\t\t}\n\t\t\tif (callback && typeof callback != 'function') {\n\t\t\t\tthrow new FriendlyError('Sprite.overlap', 1, [callback]);\n\t\t\t}\n\t\t\tif (!this._hasOverlaps) this._createSensors();\n\t\t\tif (target instanceof Sprite) {\n\t\t\t\tif (!target._hasOverlaps) target._createSensors();\n\t\t\t} else if (target instanceof Group) {\n\t\t\t\tif (!target._hasOverlaps) {\n\t\t\t\t\tfor (let s of target) {\n\t\t\t\t\t\tif (!s._hasOverlaps) s._createSensors();\n\t\t\t\t\t}\n\t\t\t\t\ttarget._hasOverlaps = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._overlap[target] = true;\n\t\t}\n\n\t\toverlap(target, callback) {\n\t\t\treturn this.overlaps(target, callback);\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the sprite overlaps with the\n\t\t * target sprite or group.\n\t\t *\n\t\t * Custom overlap event handling can be done by using this function\n\t\t * in an if statement or adding a callback as the second parameter.\n\t\t *\n\t\t * @method overlaps\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t */\n\t\toverlaps(target, callback) {\n\t\t\tthis._ensureOverlap(target, callback);\n\t\t\tthis._overlaps[target] = callback || true;\n\t\t\treturn this._overlappers.get(target) == 1;\n\t\t}\n\n\t\t/**\n\t\t * Returns a truthy value while the sprite is overlapping with the\n\t\t * target sprite or group. The value returned is the number of\n\t\t * frames the sprite has been overlapping with the target.\n\t\t *\n\t\t * @method overlapping\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Number} frames\n\t\t */\n\t\toverlapping(target, callback) {\n\t\t\tthis._ensureOverlap(target, callback);\n\t\t\tthis._overlapping[target] = callback || true;\n\t\t\tlet val = this._overlappers.get(target);\n\t\t\treturn val > 0 ? val : 0;\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the sprite no longer overlaps\n\t\t * with the target sprite or group.\n\t\t *\n\t\t * @method overlapped\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Boolean}\n\t\t */\n\t\toverlapped(target, callback) {\n\t\t\tthis._ensureOverlap(target, callback);\n\t\t\tthis._overlapped[target] = callback || true;\n\t\t\treturn this._overlappers.get(target) == -1;\n\t\t}\n\n\t\t_createSensors() {\n\t\t\tlet shape;\n\t\t\tfor (let fxt = this.fixtureList; fxt; fxt = fxt.getNext()) {\n\t\t\t\tshape = fxt.m_shape;\n\t\t\t\tthis.body.createFixture({\n\t\t\t\t\tshape: shape,\n\t\t\t\t\tisSensor: true\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._hasOverlaps = true;\n\t\t}\n\n\t\t/**\n\t\t * Use sprite.animation.name instead.\n\t\t *\n\t\t * @deprecated getAnimationLabel\n\t\t * @returns the name of the sprite's current animation\n\t\t */\n\t\tgetAnimationLabel() {\n\t\t\tconsole.warn('sprite.getAnimationLabel is deprecated. Use sprite.animation.name instead.');\n\t\t\treturn this.animation.name;\n\t\t}\n\t}\n\n\tthis.Turtle = function (size) {\n\t\tif (pInst.allSprites.tileSize > 1) {\n\t\t\tthrow new Error(`Turtle can't be used when allSprites.tileSize is greater than 1.`);\n\t\t}\n\t\tsize ??= 25;\n\t\tlet t = new Sprite(size, size, [\n\t\t\t[size, size * 0.4],\n\t\t\t[-size, size * 0.4],\n\t\t\t[0, -size * 0.8]\n\t\t]);\n\t\tt.color = 'green';\n\t\tt._isTurtleSprite = true;\n\t\tt._prevPos = { x: t.x, y: t.y };\n\t\tlet _move = t.move;\n\t\tt.move = async function () {\n\t\t\tthis._prevPos.x = this.x;\n\t\t\tthis._prevPos.y = this.y;\n\t\t\tawait _move.call(this, ...arguments);\n\t\t};\n\t\treturn t;\n\t};\n\n\t/**\n\t * Look at the Animation reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/sprite_animation.html\n\t *\n\t * A SpriteAnimation object contains a series of images (p5.Image objects)\n\t * that can be displayed sequentially.\n\t *\n\t * A sprite can have multiple labeled animations, see Sprite.addAnimation\n\t * and Sprite.changeAnimation, but you can also create animations that\n\t * can be used without being added to a sprite first.\n\t *\n\t * An animation can be created either from a list of images or sequentially\n\t * numbered images. p5.play will try to detect the sequence pattern.\n\t *\n\t * For example if the image file path is \"image1.png\" and the last frame\n\t * index is 3 then \"image2.png\" and \"image3.png\" will be loaded as well.\n\t *\n\t * @example\n\t *\n\t * let shapeShifter = new SpriteAnimation(\"dog.png\", \"cat.png\", \"snake.png\");\n\t * let walking = new SpriteAnimation(\"walking0001.png\", 5);\n\t *\n\t * @class SpriteAnimation\n\t * @constructor\n\t */\n\tclass SpriteAnimation extends Array {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.p = pInst;\n\t\t\tlet args = [...arguments];\n\n\t\t\t/**\n\t\t\t * The name of the animation\n\t\t\t *\n\t\t\t * @property name\n\t\t\t * @type {String}\n\t\t\t */\n\t\t\tthis.name = 'default';\n\n\t\t\tlet parent;\n\n\t\t\tif (args[0] instanceof Sprite || args[0] instanceof Group) {\n\t\t\t\tparent = args[0];\n\t\t\t\targs = args.slice(1);\n\t\t\t}\n\t\t\tparent ??= this.p.allSprites;\n\n\t\t\tif (typeof args[0] == 'string' && (args[0].length == 1 || !args[0].includes('.'))) {\n\t\t\t\tthis.name = args[0];\n\t\t\t\targs = args.slice(1);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * The index of the current frame that the animation is on.\n\t\t\t *\n\t\t\t * @property frame\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\tthis.frame = 0;\n\n\t\t\tthis.cycles = 0;\n\n\t\t\tthis.targetFrame = -1;\n\n\t\t\t/**\n\t\t\t * The offset is how far the animation should be placed from\n\t\t\t * the location it is played at.\n\t\t\t *\n\t\t\t * @property offset\n\t\t\t * @type {Object} x and y keys\n\t\t\t *\n\t\t\t * @example\n\t\t\t * offset.x = 16;\n\t\t\t */\n\t\t\tthis.offset = { x: 0, y: 0 };\n\n\t\t\tthis._frameDelay = 4;\n\n\t\t\t/**\n\t\t\t * True if the animation is currently playing.\n\t\t\t *\n\t\t\t * @property playing\n\t\t\t * @type {Boolean}\n\t\t\t * @default true\n\t\t\t */\n\t\t\tthis.playing = true;\n\n\t\t\t/**\n\t\t\t * Animation visibility.\n\t\t\t *\n\t\t\t * @property visible\n\t\t\t * @type {Boolean}\n\t\t\t * @default true\n\t\t\t */\n\t\t\tthis.visible = true;\n\n\t\t\t/**\n\t\t\t * If set to false the animation will stop after reaching the last frame\n\t\t\t *\n\t\t\t * @property looping\n\t\t\t * @type {Boolean}\n\t\t\t * @default true\n\t\t\t */\n\t\t\tthis.looping = true;\n\n\t\t\t/**\n\t\t\t * Ends the loop on frame 0 instead of the last frame.\n\t\t\t * This is useful for animations that are symmetric.\n\t\t\t * For example a walking cycle where the first frame is the\n\t\t\t * same as the last frame.\n\t\t\t *\n\t\t\t * @property endOnFirstFrame\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.endOnFirstFrame = false;\n\n\t\t\t/**\n\t\t\t * True if frame changed during the last draw cycle\n\t\t\t *\n\t\t\t * @property frameChanged\n\t\t\t * @type {Boolean}\n\t\t\t */\n\t\t\tthis.frameChanged = false;\n\n\t\t\tthis.rotation = 0;\n\t\t\tthis._scale = new Scale();\n\n\t\t\tif (args.length == 0 || typeof args[0] == 'number') return;\n\n\t\t\tparent.addAni(this);\n\n\t\t\t// sequence mode\n\t\t\tif (\n\t\t\t\targs.length == 2 &&\n\t\t\t\ttypeof args[0] == 'string' &&\n\t\t\t\t(typeof args[1] == 'string' || typeof args[1] == 'number')\n\t\t\t) {\n\t\t\t\tlet from = args[0];\n\t\t\t\tlet to, num2;\n\t\t\t\tif (!isNaN(args[1])) num2 = Number(args[1]);\n\t\t\t\telse to = args[1];\n\n\t\t\t\t// print(\"sequence mode \"+from+\" -> \"+to);\n\n\t\t\t\t// make sure the extensions are fine\n\t\t\t\tif (from.slice(-4) != '.png' || (to && to.slice(-4) != '.png')) {\n\t\t\t\t\tthrow new FriendlyError('SpriteAnimation', 0, [from]);\n\t\t\t\t}\n\n\t\t\t\tlet digits1 = 0;\n\t\t\t\tlet digits2 = 0;\n\n\t\t\t\t// skip extension work backwards to find the numbers\n\t\t\t\tfor (let i = from.length - 5; i >= 0; i--) {\n\t\t\t\t\tif (!isNaN(from.charAt(i))) digits1++;\n\t\t\t\t\telse break;\n\t\t\t\t}\n\n\t\t\t\tif (to) {\n\t\t\t\t\tfor (let i = to.length - 5; i >= 0; i--) {\n\t\t\t\t\t\tif (!isNaN(to.charAt(i))) digits2++;\n\t\t\t\t\t\telse break;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet prefix1 = from.slice(0, -4 - digits1);\n\t\t\t\tlet prefix2;\n\t\t\t\tif (to) prefix2 = to.slice(0, -4 - digits2);\n\n\t\t\t\t// images don't belong to the same sequence\n\t\t\t\t// they are just two separate images with numbers\n\t\t\t\tif (to && prefix1 != prefix2) {\n\t\t\t\t\tthis.push(this.p.loadImage(from));\n\t\t\t\t\tthis.push(this.p.loadImage(to));\n\t\t\t\t} else {\n\t\t\t\t\t// Our numbers likely have leading zeroes, which means that some\n\t\t\t\t\t// browsers (e.g., PhantomJS) will interpret them as base 8 (octal)\n\t\t\t\t\t// instead of decimal. To fix this, we'll explicity tell parseInt to\n\t\t\t\t\t// use a base of 10 (decimal). For more details on this issue, see\n\t\t\t\t\t// http://stackoverflow.com/a/8763427/2422398.\n\t\t\t\t\tlet num1 = parseInt(from.slice(-4 - digits1, -4), 10);\n\t\t\t\t\tnum2 ??= parseInt(to.slice(-4 - digits2, -4), 10);\n\n\t\t\t\t\t// swap if inverted\n\t\t\t\t\tif (num2 < num1) {\n\t\t\t\t\t\tlet t = num2;\n\t\t\t\t\t\tnum2 = num1;\n\t\t\t\t\t\tnum1 = t;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fileName;\n\t\t\t\t\tif (!to || digits1 == digits2) {\n\t\t\t\t\t\t// load all images\n\t\t\t\t\t\tfor (let i = num1; i <= num2; i++) {\n\t\t\t\t\t\t\t// Use nf() to number format 'i' into the amount of digits\n\t\t\t\t\t\t\t// ex: 14 with 4 digits is 0014\n\t\t\t\t\t\t\tfileName = prefix1 + this.p.nf(i, digits1) + '.png';\n\t\t\t\t\t\t\tthis.push(this.p.loadImage(fileName));\n\t\t\t\t\t\t}\n\t\t\t\t\t} // case: case img1, img2\n\t\t\t\t\telse {\n\t\t\t\t\t\tfor (let i = num1; i <= num2; i++) {\n\t\t\t\t\t\t\t// Use nf() to number format 'i' into four digits\n\t\t\t\t\t\t\tfileName = prefix1 + i + '.png';\n\t\t\t\t\t\t\tthis.push(this.p.loadImage(fileName));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // end sequence mode\n\n\t\t\t// SpriteSheet mode\n\t\t\telse if (typeof args[args.length - 1] != 'string' && !(args[args.length - 1] instanceof p5.Image)) {\n\t\t\t\tlet sheet = parent.spriteSheet;\n\t\t\t\tlet atlas;\n\t\t\t\tif (args[0] instanceof p5.Image || typeof args[0] == 'string') {\n\t\t\t\t\tif (args.length >= 3) {\n\t\t\t\t\t\tthrow new FriendlyError('SpriteAnimation', 1);\n\t\t\t\t\t}\n\t\t\t\t\tsheet = args[0];\n\t\t\t\t\tatlas = args[1];\n\t\t\t\t} else {\n\t\t\t\t\tatlas = args[0];\n\t\t\t\t}\n\n\t\t\t\tlet _this = this;\n\n\t\t\t\tif (sheet instanceof p5.Image && sheet.width != 1 && sheet.height != 1) {\n\t\t\t\t\tthis.spriteSheet = sheet;\n\t\t\t\t\t_generateSheetFrames();\n\t\t\t\t} else {\n\t\t\t\t\tlet url;\n\t\t\t\t\tif (typeof sheet == 'string') url = sheet;\n\t\t\t\t\telse url = sheet.url;\n\t\t\t\t\tthis.spriteSheet = this.p.loadImage(url, () => {\n\t\t\t\t\t\t_generateSheetFrames();\n\t\t\t\t\t});\n\t\t\t\t\t// parent.spriteSheet = this.spriteSheet;\n\t\t\t\t}\n\n\t\t\t\tfunction _generateSheetFrames() {\n\t\t\t\t\tif (Array.isArray(atlas) || Array.isArray(atlas.frames)) {\n\t\t\t\t\t\tif (typeof atlas[0] == 'number') {\n\t\t\t\t\t\t\tif (atlas.length == 4) {\n\t\t\t\t\t\t\t\tatlas = { pos: atlas.slice(0, 2), size: atlas.slice(2) };\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tatlas = { pos: atlas };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet frames = atlas;\n\t\t\t\t\t\t\tif (Array.isArray(atlas.frames)) {\n\t\t\t\t\t\t\t\tframes = atlas.frames;\n\t\t\t\t\t\t\t\tdelete atlas.frames;\n\t\t\t\t\t\t\t\tfor (let i = 0; i < frames.length; i++) {\n\t\t\t\t\t\t\t\t\tframes[i] = {\n\t\t\t\t\t\t\t\t\t\tpos: frames[i]\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tObject.assign(frames[i], atlas);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (let frame of frames) {\n\t\t\t\t\t\t\t\tatlas = frame;\n\t\t\t\t\t\t\t\t_generateSheetFrames();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet { w, h, width, height, frameSize, size, pos, line, x, y, frames, delay, rotation } = atlas;\n\t\t\t\t\tsize ??= frameSize;\n\t\t\t\t\tif (delay) _this.frameDelay = delay;\n\t\t\t\t\tif (rotation) _this.rotation = rotation;\n\n\t\t\t\t\tw ??= width;\n\t\t\t\t\th ??= height;\n\n\t\t\t\t\tlet tileSize;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tw ??= parent.w;\n\t\t\t\t\t\th ??= parent.h;\n\t\t\t\t\t\ttileSize = parent.tileSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tx ??= 0;\n\t\t\t\t\ty ??= 0;\n\t\t\t\t\tpos ??= line;\n\t\t\t\t\t// if pos is a number or only y is defined but not x\n\t\t\t\t\t// the animation's first frame is at x = 0\n\t\t\t\t\t// the line number is the location of the animation line\n\t\t\t\t\t// given as a distance from the top of the image\n\t\t\t\t\tif (typeof pos == 'number') {\n\t\t\t\t\t\ty = pos;\n\t\t\t\t\t} else if (pos) {\n\t\t\t\t\t\t// pos is the location of the animation line\n\t\t\t\t\t\t// given as a [row,column] coordinate pair of distances in tiles\n\t\t\t\t\t\t// from the top left corner of the image\n\t\t\t\t\t\tx = pos[0]; // column\n\t\t\t\t\t\ty = pos[1]; // row\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof size == 'number') {\n\t\t\t\t\t\tw = h = size;\n\t\t\t\t\t} else if (size) {\n\t\t\t\t\t\tw = size[0];\n\t\t\t\t\t\th = size[1];\n\t\t\t\t\t}\n\n\t\t\t\t\t// get the real dimensions and position of the frame\n\t\t\t\t\t// in the sheet\n\t\t\t\t\tx *= tileSize;\n\t\t\t\t\ty *= tileSize;\n\n\t\t\t\t\tif (!w || !h) {\n\t\t\t\t\t\tif (tileSize) {\n\t\t\t\t\t\t\tw = h = 1 * tileSize;\n\t\t\t\t\t\t} else if (_this.spriteSheet.width < _this.spriteSheet.height) {\n\t\t\t\t\t\t\tw = h = _this.spriteSheet.width;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tw = h = _this.spriteSheet.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tw *= tileSize;\n\t\t\t\t\t\th *= tileSize;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet frameCount = frames || 1;\n\n\t\t\t\t\t// add all the frames in the animation to the frames array\n\t\t\t\t\tfor (let i = 0; i < frameCount; i++) {\n\t\t\t\t\t\t_this.push({ x, y, w, h });\n\t\t\t\t\t\tx += w;\n\t\t\t\t\t\tif (x >= _this.spriteSheet.width) {\n\t\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\t\ty += h;\n\t\t\t\t\t\t\tif (y >= _this.spriteSheet.height) y = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // end SpriteSheet mode\n\t\t\telse {\n\t\t\t\t// list of images\n\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\tif (args[i] instanceof p5.Image) this.push(args[i]);\n\t\t\t\t\telse this.push(this.p.loadImage(args[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Delay between frames in number of draw cycles.\n\t\t * If set to 4 the framerate of the animation would be the\n\t\t * sketch framerate divided by 4 (60fps = 15fps)\n\t\t *\n\t\t * @property frameDelay\n\t\t * @type {Number}\n\t\t * @default 4\n\t\t */\n\t\tget frameDelay() {\n\t\t\treturn this._frameDelay;\n\t\t}\n\t\tset frameDelay(val) {\n\t\t\tif (val <= 0) val = 1;\n\t\t\tthis._frameDelay = val;\n\t\t}\n\t\t/**\n\t\t * TODO frameRate\n\t\t * Another way to set the animation's frame delay.\n\t\t */\n\t\t// get frameRate() {\n\n\t\t// }\n\t\t// set frameRate(val) {\n\n\t\t// }\n\n\t\t/**\n\t\t * The animation's scale.\n\t\t *\n\t\t * Can be set to a number to scale both x and y\n\t\t * or an object with x and/or y properties.\n\t\t *\n\t\t * @property scale\n\t\t * @type {Number|Object}\n\t\t * @default 1\n\t\t */\n\t\tget scale() {\n\t\t\treturn this._scale;\n\t\t}\n\t\tset scale(val) {\n\t\t\tif (typeof val == 'number') {\n\t\t\t\tval = { x: val, y: val };\n\t\t\t}\n\t\t\tthis._scale._x = val.x;\n\t\t\tthis._scale._y = val.y;\n\t\t\tthis._scale._avg = val.x;\n\t\t}\n\n\t\t/**\n\t\t * Make a copy of the animation.\n\t\t *\n\t\t * @method clone\n\t\t * @return {SpriteAnimation} A copy of the animation.\n\t\t */\n\t\tclone() {\n\t\t\tlet ani = new SpriteAnimation();\n\t\t\tani.spriteSheet = this.spriteSheet;\n\t\t\tfor (let i = 0; i < this.length; i++) {\n\t\t\t\tani.push(this[i]);\n\t\t\t}\n\t\t\tani.offset.x = this.offset.x;\n\t\t\tani.offset.y = this.offset.y;\n\t\t\tani.frameDelay = this.frameDelay;\n\t\t\tani.playing = this.playing;\n\t\t\tani.looping = this.looping;\n\t\t\tani.rotation = this.rotation;\n\t\t\treturn ani;\n\t\t}\n\n\t\t/**\n\t\t * Draws the animation at coordinate x and y.\n\t\t * Updates the frames automatically.\n\t\t *\n\t\t * Optional parameters effect the current draw cycle only and\n\t\t * are not saved between draw cycles.\n\t\t *\n\t\t * @method draw\n\t\t * @param {Number} x horizontal position\n\t\t * @param {Number} y vertical position\n\t\t * @param {Number} [r] rotation\n\t\t * @param {Number} [sx] scale x\n\t\t * @param {Number} [sy] scale y\n\t\t */\n\t\tdraw(x, y, r, sx, sy) {\n\t\t\tthis.x = x || 0;\n\t\t\tthis.y = y || 0;\n\n\t\t\tif (!this.visible) return;\n\n\t\t\tsx ??= 1;\n\t\t\tsy ??= 1;\n\n\t\t\tthis.p.push();\n\t\t\tthis.p.imageMode(p5.prototype.CENTER);\n\t\t\tthis.p.translate(this.x, this.y);\n\t\t\tthis.p.rotate(r || this.rotation);\n\t\t\tthis.p.scale(sx * this._scale.x, sy * this._scale.y);\n\t\t\tlet img = this[this.frame];\n\t\t\tif (img !== undefined) {\n\t\t\t\tif (this.spriteSheet) {\n\t\t\t\t\tlet { x, y, w, h } = img; // image info\n\t\t\t\t\tthis.p.image(this.spriteSheet, this.offset.x, this.offset.y, w, h, x, y, w, h);\n\t\t\t\t} else {\n\t\t\t\t\tthis.p.image(img, this.offset.x, this.offset.y);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlog(\n\t\t\t\t\t'Warning: ' +\n\t\t\t\t\t\tthis.name +\n\t\t\t\t\t\t' animation not loaded yet or frame ' +\n\t\t\t\t\t\tthis.frame +\n\t\t\t\t\t\t' does not exist. Load this animation in the p5.js preload function if you need to use it at the start of your program.'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.p.pop();\n\t\t}\n\n\t\tupdate() {\n\t\t\tthis.cycles++;\n\t\t\tvar previousFrame = this.frame;\n\t\t\tthis.frameChanged = false;\n\n\t\t\t//go to frame\n\t\t\tif (this.length === 1) {\n\t\t\t\tthis.playing = false;\n\t\t\t\tthis.frame = 0;\n\t\t\t}\n\n\t\t\tif (this.playing && this.cycles % this.frameDelay === 0) {\n\t\t\t\tthis.frameChanged = true;\n\n\t\t\t\tif ((this.targetFrame == -1 && this.frame == this.lastFrame) || this.frame == this.targetFrame) {\n\t\t\t\t\tif (this.endOnFirstFrame) this.frame = 0;\n\t\t\t\t\tif (this.looping) this.targetFrame = -1;\n\t\t\t\t\telse this.playing = false;\n\t\t\t\t\tthis.onComplete(); //fire when on last frame\n\t\t\t\t\tif (!this.looping) return;\n\t\t\t\t}\n\n\t\t\t\t//going to target frame up\n\t\t\t\tif (this.targetFrame > this.frame && this.targetFrame !== -1) {\n\t\t\t\t\tthis.frame++;\n\t\t\t\t}\n\t\t\t\t//going to target frame down\n\t\t\t\telse if (this.targetFrame < this.frame && this.targetFrame !== -1) {\n\t\t\t\t\tthis.frame--;\n\t\t\t\t} else if (this.targetFrame === this.frame && this.targetFrame !== -1) {\n\t\t\t\t\tthis.playing = false;\n\t\t\t\t} else if (this.looping) {\n\t\t\t\t\t//advance frame\n\t\t\t\t\t//if next frame is too high\n\t\t\t\t\tif (this.frame >= this.lastFrame) {\n\t\t\t\t\t\tthis.frame = 0;\n\t\t\t\t\t} else this.frame++;\n\t\t\t\t} else {\n\t\t\t\t\t//if next frame is too high\n\t\t\t\t\tif (this.frame < this.lastFrame) this.frame++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Plays the animation, starting from the specified frame.\n\t\t *\n\t\t * @method play\n\t\t * @returns [Promise] a promise that resolves when the animation completes\n\t\t */\n\t\tplay(frame) {\n\t\t\tthis.playing = true;\n\t\t\tif (frame !== undefined) this.frame = frame;\n\t\t\tthis.targetFrame = -1;\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tthis.onComplete = () => {\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Pauses the animation.\n\t\t *\n\t\t * @method pause\n\t\t */\n\t\tpause(frame) {\n\t\t\tthis.playing = false;\n\t\t\tif (frame) this.frame = frame;\n\t\t}\n\n\t\t/**\n\t\t * Stops the animation. Alt for pause.\n\t\t *\n\t\t * @method stop\n\t\t */\n\t\tstop(frame) {\n\t\t\tthis.playing = false;\n\t\t\tif (frame) this.frame = frame;\n\t\t}\n\n\t\t/**\n\t\t * Plays the animation backwards.\n\t\t * Equivalent to ani.goToFrame(0)\n\t\t *\n\t\t * @method rewind\n\t\t * @returns [Promise] a promise that resolves when the animation completes\n\t\t * rewinding\n\t\t */\n\t\trewind() {\n\t\t\tthis.looping = false;\n\t\t\treturn this.goToFrame(0);\n\t\t}\n\n\t\t/**\n\t\t * Plays the animation forwards and loops it.\n\t\t *\n\t\t * @method loop\n\t\t */\n\t\tloop() {\n\t\t\tthis.looping = true;\n\t\t\tthis.playing = true;\n\t\t}\n\n\t\t/**\n\t\t * Prevents the animation from looping\n\t\t *\n\t\t * @method noLoop\n\t\t */\n\t\tnoLoop() {\n\t\t\tthis.looping = false;\n\t\t}\n\n\t\t/**\n\t\t * fire when animation ends\n\t\t *\n\t\t * @method onComplete\n\t\t * @return {SpriteAnimation}\n\t\t */\n\t\tonComplete() {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t/**\n\t\t * Deprecated, change the frame property directly.\n\t\t *\n\t\t * Changes the current frame.\n\t\t *\n\t\t * @deprecated\n\t\t * @param {Number} frame Frame number (starts from 0).\n\t\t */\n\t\tchangeFrame(f) {\n\t\t\tconsole.warn('Deprecated, change the ani.frame property directly.');\n\t\t\tif (f < this.length) this.frame = f;\n\t\t\telse this.frame = this.length - 1;\n\n\t\t\tthis.targetFrame = -1;\n\t\t\t//this.playing = false;\n\t\t}\n\n\t\t/**\n\t\t * Goes to the next frame and stops.\n\t\t *\n\t\t * @method nextFrame\n\t\t */\n\t\tnextFrame() {\n\t\t\tif (this.frame < this.length - 1) this.frame = this.frame + 1;\n\t\t\telse if (this.looping) this.frame = 0;\n\n\t\t\tthis.targetFrame = -1;\n\t\t\tthis.playing = false;\n\t\t}\n\n\t\t/**\n\t\t * Goes to the previous frame and stops.\n\t\t *\n\t\t * @method previousFrame\n\t\t */\n\t\tpreviousFrame() {\n\t\t\tif (this.frame > 0) this.frame = this.frame - 1;\n\t\t\telse if (this.looping) this.frame = this.length - 1;\n\n\t\t\tthis.targetFrame = -1;\n\t\t\tthis.playing = false;\n\t\t}\n\n\t\t/**\n\t\t * Plays the animation forward or backward toward a target frame.\n\t\t *\n\t\t * @method goToFrame\n\t\t * @param {Number} toFrame Frame number destination (starts from 0)\n\t\t * @returns [Promise] a promise that resolves when the animation completes\n\t\t */\n\t\tgoToFrame(toFrame) {\n\t\t\tif (toFrame < 0 || toFrame >= this.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// targetFrame gets used by the update() method to decide what frame to\n\t\t\t// select next.  When it's not being used it gets set to -1.\n\t\t\tthis.targetFrame = toFrame;\n\n\t\t\tif (this.targetFrame !== this.frame) {\n\t\t\t\tthis.playing = true;\n\t\t\t}\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tthis.onComplete = () => {\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Use .frame instead.\n\t\t *\n\t\t * Returns the current frame number.\n\t\t *\n\t\t * @deprecated\n\t\t * @return {Number} Current frame (starts from 0)\n\t\t */\n\t\tgetFrame() {\n\t\t\tconsole.warn('Deprecated, use ani.frame instead.');\n\t\t\treturn this.frame;\n\t\t}\n\n\t\t/**\n\t\t * Use .lastFrame instead.\n\t\t *\n\t\t * Returns the last frame number.\n\t\t *\n\t\t * @deprecated\n\t\t * @return {Number} Last frame number (starts from 0)\n\t\t */\n\t\tgetLastFrame() {\n\t\t\tconsole.warn('Deprecated, use ani.lastFrame instead.');\n\t\t\treturn this.lastFrame;\n\t\t}\n\n\t\t/**\n\t\t * Returns the index of the last frame.\n\t\t *\n\t\t * @property lastFrame\n\t\t * @type {Number}\n\t\t * @readonly\n\t\t */\n\t\tget lastFrame() {\n\t\t\treturn this.length - 1;\n\t\t}\n\n\t\t/**\n\t\t * Returns the current frame as p5.Image.\n\t\t *\n\t\t * @method frameImage\n\t\t * @return {p5.Image} Current frame image\n\t\t * @readonly\n\t\t */\n\t\tget frameImage() {\n\t\t\tlet f = this.frame;\n\t\t\tlet img = this[f];\n\t\t\tif (img instanceof p5.Image) return img;\n\n\t\t\tlet { x, y, w, h } = img; // image info\n\t\t\tlet g = createGraphics(w, h);\n\t\t\tg.image(this.spriteSheet, this.offset.x, this.offset.y, w, h, x, y, w, h);\n\t\t\treturn g;\n\t\t}\n\n\t\t/**\n\t\t * Width of the animation.\n\t\t *\n\t\t * @property w\n\t\t * @type {Number}\n\t\t */\n\t\tget w() {\n\t\t\treturn this.width;\n\t\t}\n\t\t/**\n\t\t * Width of the animation.\n\t\t *\n\t\t * @property width\n\t\t * @type {Number}\n\t\t */\n\t\tget width() {\n\t\t\tif (this[this.frame] instanceof p5.Image) {\n\t\t\t\treturn this[this.frame].width;\n\t\t\t} else if (this[this.frame]) {\n\t\t\t\treturn this[this.frame].w;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\n\t\t/**\n\t\t * Height of the animation.\n\t\t *\n\t\t * @property h\n\t\t * @type {Number}\n\t\t */\n\t\tget h() {\n\t\t\treturn this.height;\n\t\t}\n\t\t/**\n\t\t * Height of the animation.\n\t\t *\n\t\t * @property height\n\t\t * @type {Number}\n\t\t */\n\t\tget height() {\n\t\t\tif (this[this.frame] instanceof p5.Image) {\n\t\t\t\treturn this[this.frame].height;\n\t\t\t} else if (this[this.frame]) {\n\t\t\t\treturn this[this.frame].h;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\n\t\t/**\n\t\t * The frames of the animation.\n\t\t *\n\t\t * @property frames\n\t\t * @type {Array}\n\t\t */\n\t\tget frames() {\n\t\t\tlet frames = [];\n\t\t\tfor (let i = 0; i < this.length; i++) {\n\t\t\t\tframes.push(this[i]);\n\t\t\t}\n\t\t\treturn frames;\n\t\t}\n\n\t\t/**\n\t\t * The frames of the animation. Alt for ani.frames\n\t\t *\n\t\t * @property images\n\t\t * @type {Array}\n\t\t */\n\t\tget images() {\n\t\t\treturn this.frames;\n\t\t}\n\t}\n\n\t/**\n\t * Look at the Group reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/group.html\n\t *\n\t * In p5.play groups are collections of sprites with similar behavior.\n\t * For example a group may contain all the coin sprites that the\n\t * player can collect.\n\t *\n\t * Group extends Array. You can use them in for loops just like arrays\n\t * since they inherit all the functions and properties of standard\n\t * arrays such as group.length\n\t *\n\t * Since groups just contain references to sprites, a sprite can be in\n\t * multiple groups.\n\t *\n\t * sprite.remove() removes the sprite from all the groups\n\t * it belongs to. group.removeAll() removes all the sprites from\n\t * a group.\n\t *\n\t * The top level group is a p5 instance level variable named\n\t * 'allSprites' that contains all the sprites added to the sketch.\n\t *\n\t * @class Group\n\t * @constructor\n\t */\n\tclass Group extends Array {\n\t\tconstructor(...args) {\n\t\t\tlet parent;\n\t\t\tif (args[0] instanceof Group) {\n\t\t\t\tparent = args[0];\n\t\t\t\targs = args.slice(1);\n\t\t\t}\n\t\t\tsuper(...args);\n\t\t\tthis.idNum = 0;\n\t\t\tthis.p = pInst;\n\n\t\t\t// if all sprites doesn't exist yet,\n\t\t\t// this group is the allSprites group\n\t\t\tif (!this.p.allSprites) this._isAllSpritesGroup = true;\n\n\t\t\tif (!this._isAllSpritesGroup) this.parent = 0;\n\t\t\tif (parent) this.parent = parent.idNum;\n\n\t\t\t/**\n\t\t\t * Keys are the animation label, values are SpriteAnimation objects.\n\t\t\t *\n\t\t\t * @property animations\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tthis.animations = {};\n\n\t\t\t/**\n\t\t\t * Contains all the collision callback functions for this group\n\t\t\t * when it comes in contact with other sprites or groups.\n\t\t\t */\n\t\t\tthis._collides = {};\n\t\t\tthis._colliding = {};\n\t\t\tthis._collided = {};\n\n\t\t\tthis._overlap = {};\n\t\t\t/**\n\t\t\t * Contains all the overlap callback functions for this group\n\t\t\t * when it comes in contact with other sprites or groups.\n\t\t\t */\n\t\t\tthis._overlaps = {};\n\t\t\tthis._overlapping = {};\n\t\t\tthis._overlapped = {};\n\n\t\t\tthis._collisions = new Map();\n\t\t\tthis._overlappers = new Map();\n\n\t\t\t// mainly for internal use\n\t\t\t// autoCull as a property of allSprites only refers to the default allSprites cull\n\t\t\t// in the post draw function, if the user calls cull on allSprites it should work\n\t\t\t// for any other group made by users autoCull affects whether cull removes sprites or not\n\t\t\t// by default for allSprites it is set to true, for all other groups it is undefined\n\t\t\tthis.autoCull;\n\n\t\t\tif (this.p.world) {\n\t\t\t\tthis.idNum = this.p.world.groupsCreated;\n\t\t\t\tthis.p.world.groups[this.idNum] = this;\n\t\t\t\tthis.p.world.groupsCreated++;\n\t\t\t}\n\n\t\t\tlet _this = this;\n\n\t\t\tclass GroupSprite extends Sprite {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper(_this, ...arguments);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.GroupSprite = GroupSprite;\n\t\t\tthis.Sprite = GroupSprite;\n\n\t\t\tclass SubGroup extends Group {\n\t\t\t\tconstructor() {\n\t\t\t\t\tsuper(_this, ...arguments);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.SubGroup = SubGroup;\n\t\t\tthis.Group = SubGroup;\n\n\t\t\tthis.mouse = {\n\t\t\t\tpresses: null,\n\t\t\t\tpressing: null,\n\t\t\t\tpressed: null,\n\t\t\t\tholds: null,\n\t\t\t\tholding: null,\n\t\t\t\theld: null,\n\t\t\t\treleased: null,\n\t\t\t\thovers: null,\n\t\t\t\thovering: null,\n\t\t\t\thovered: null\n\t\t\t};\n\t\t\tfor (let state in this.mouse) {\n\t\t\t\tthis.mouse[state] = function (inp) {\n\t\t\t\t\tfor (let s of _this) {\n\t\t\t\t\t\tif (s.mouse[state](inp)) return true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tlet props = [...spriteProps, 'spriteSheet'];\n\t\t\tfor (let prop of props) {\n\t\t\t\tObject.defineProperty(this, prop, {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tlet val = _this['_' + prop];\n\t\t\t\t\t\tlet i = _this.length - 1;\n\t\t\t\t\t\tif (val === undefined && this.p.world && !_this._isAllSpritesGroup) {\n\t\t\t\t\t\t\tlet parent = this.p.world.groups[_this.parent];\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tval = parent[prop];\n\t\t\t\t\t\t\t\ti = parent.length - 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn val;\n\t\t\t\t\t},\n\t\t\t\t\tset(val) {\n\t\t\t\t\t\t_this['_' + prop] = val;\n\n\t\t\t\t\t\t// change the prop in all the sprite of this group\n\t\t\t\t\t\tfor (let i = 0; i < _this.length; i++) {\n\t\t\t\t\t\t\tlet s = _this[i];\n\t\t\t\t\t\t\tlet v = val;\n\t\t\t\t\t\t\tif (typeof val == 'function') v = val(i);\n\t\t\t\t\t\t\ts[prop] = v;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.vel = pInst.createVector.call(pInst);\n\t\t\tthis.mirror = {};\n\n\t\t\tlet objProps = { vel: ['x', 'y'], mirror: ['x', 'y'] };\n\t\t\tfor (let objProp in objProps) {\n\t\t\t\tfor (let prop of objProps[objProp]) {\n\t\t\t\t\tObject.defineProperty(this[objProp], prop, {\n\t\t\t\t\t\tget() {\n\t\t\t\t\t\t\tlet val = _this[objProp]['_' + prop];\n\t\t\t\t\t\t\tlet i = _this.length - 1;\n\t\t\t\t\t\t\tif (val === undefined && _this.p.world && !_this._isAllSpritesGroup) {\n\t\t\t\t\t\t\t\tlet parent = _this.p.world.groups[_this.parent];\n\t\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\t\tval = parent[objProp][prop];\n\t\t\t\t\t\t\t\t\ti = parent.length - 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn val;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tset(val) {\n\t\t\t\t\t\t\t_this[objProp]['_' + prop] = val;\n\n\t\t\t\t\t\t\t// change the prop in all the sprite of this group\n\t\t\t\t\t\t\tfor (let i = 0; i < _this.length; i++) {\n\t\t\t\t\t\t\t\tlet s = _this[i];\n\t\t\t\t\t\t\t\tlet v = val;\n\t\t\t\t\t\t\t\tif (typeof val == 'function') v = val(i);\n\t\t\t\t\t\t\t\ts[objProp][prop] = v;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.orbitAngle = 0;\n\t\t}\n\n\t\t/**\n\t\t * Reference to the group's current animation.\n\t\t *\n\t\t * @property ani\n\t\t * @type {SpriteAnimation}\n\t\t */\n\t\tget ani() {\n\t\t\treturn this._animation;\n\t\t}\n\t\tset ani(val) {\n\t\t\tthis.addAni(val);\n\t\t\tfor (let s of this) s.changeAni(val);\n\t\t}\n\t\t/**\n\t\t * Reference to the group's current animation.\n\t\t *\n\t\t * @property animation\n\t\t * @type {SpriteAnimation}\n\t\t */\n\t\tget animation() {\n\t\t\treturn this._animation;\n\t\t}\n\t\tset animation(val) {\n\t\t\tthis.ani = val;\n\t\t}\n\n\t\t/**\n\t\t * The group's animations.\n\t\t *\n\t\t * @property anis\n\t\t * @type {SpriteAnimation}\n\t\t */\n\t\tget anis() {\n\t\t\treturn this.animations;\n\t\t}\n\t\t/**\n\t\t * Reference to the group's current image.\n\t\t *\n\t\t * @property img\n\t\t * @type {SpriteAnimation}\n\t\t */\n\t\tget img() {\n\t\t\treturn this._animation.frameImage;\n\t\t}\n\t\tset img(val) {\n\t\t\tthis.ani = val;\n\t\t}\n\t\t/**\n\t\t * Reference to the group's current image.\n\t\t *\n\t\t * @property image\n\t\t * @type {SpriteAnimation}\n\t\t */\n\t\tget image() {\n\t\t\treturn this._animation.frameImage;\n\t\t}\n\t\tset image(val) {\n\t\t\tthis.ani = val;\n\t\t}\n\t\t/**\n\t\t * Depending on the value that the amount property is set to, the group will\n\t\t * either add or remove sprites.\n\t\t *\n\t\t * @property amount\n\t\t * @type {Number}\n\t\t */\n\t\tset amount(val) {\n\t\t\tlet diff = val - this.length;\n\t\t\tlet shouldAdd = diff > 0;\n\t\t\tdiff = Math.abs(diff);\n\t\t\tfor (let i = 0; i < diff; i++) {\n\t\t\t\tif (shouldAdd) this.add(new this.Sprite());\n\t\t\t\telse this[this.length - 1].remove();\n\t\t\t}\n\t\t}\n\n\t\tresetCentroid() {\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\t\t\tfor (let s of this) {\n\t\t\t\tx += s.x;\n\t\t\t\ty += s.y;\n\t\t\t}\n\t\t\tthis.centroid = { x: x / this.length, y: y / this.length };\n\t\t\treturn this.centroid;\n\t\t}\n\n\t\tresetDistancesFromCentroid() {\n\t\t\tfor (let s of this) {\n\t\t\t\ts.distCentroid = {\n\t\t\t\t\tx: s.x - this.centroid.x,\n\t\t\t\t\ty: s.y - this.centroid.y\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tsnap(o, dist) {\n\t\t\tdist ??= 1 || this.tileSize * 0.1;\n\t\t\tfor (let s of this) {\n\t\t\t\ts.snap(o, dist);\n\t\t\t}\n\t\t}\n\n\t\t_ensureCollide(target, callback) {\n\t\t\tif (!target) {\n\t\t\t\tthrow new FriendlyError('Group.collide', 2);\n\t\t\t}\n\t\t\tif (!(target instanceof Sprite) && !(target instanceof Group)) {\n\t\t\t\tthrow new FriendlyError('Group.collide', 0, [target]);\n\t\t\t}\n\t\t\tif (callback && typeof callback != 'function') {\n\t\t\t\tthrow new FriendlyError('Group.collide', 1, [callback]);\n\t\t\t}\n\t\t}\n\n\t\tcollide(target, callback) {\n\t\t\treturn this.collides(target, callback);\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the group collides with the\n\t\t * target sprite or group.\n\t\t *\n\t\t * Custom collision event handling can be done by using this function\n\t\t * in an if statement or adding a callback as the second parameter.\n\t\t *\n\t\t * @method collides\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t */\n\t\tcollides(target, callback) {\n\t\t\tthis._ensureCollide(target, callback);\n\t\t\tthis._collides[target] = callback || true;\n\t\t\treturn this._collisions.get(target) == 1;\n\t\t}\n\n\t\t/**\n\t\t * Returns a truthy value while the group is colliding with the\n\t\t * target sprite or group. The value is the number of frames that\n\t\t * the group has been colliding with the target.\n\t\t *\n\t\t * @method colliding\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Number} frames\n\t\t */\n\t\tcolliding(target, callback) {\n\t\t\tthis._ensureCollide(target, callback);\n\t\t\tthis._colliding[target] = callback || true;\n\t\t\tlet val = this._collisions.get(target);\n\t\t\treturn val > 0 ? val : 0;\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the group no longer overlaps\n\t\t * with the target sprite or group.\n\t\t *\n\t\t * @method collided\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Boolean}\n\t\t */\n\t\tcollided(target, callback) {\n\t\t\tthis._ensureCollide(target, callback);\n\t\t\tthis._collided[target] = callback || true;\n\t\t\treturn this._collisions.get(target) == -1;\n\t\t}\n\n\t\t_ensureOverlap(target, callback) {\n\t\t\tif (!target) {\n\t\t\t\tthrow new FriendlyError('Group.overlap', 2);\n\t\t\t}\n\t\t\tif (!(target instanceof Sprite) && !(target instanceof Group)) {\n\t\t\t\tthrow new FriendlyError('Group.overlap', 0, [target]);\n\t\t\t}\n\t\t\tif (callback && typeof callback != 'function') {\n\t\t\t\tthrow new FriendlyError('Group.overlap', 1, [callback]);\n\t\t\t}\n\t\t\tif (!this._hasOverlaps) {\n\t\t\t\tfor (let s of this) {\n\t\t\t\t\tif (!s._hasOverlaps) s._createSensors();\n\t\t\t\t}\n\t\t\t\tthis._hasOverlaps = true;\n\t\t\t}\n\t\t\tif (target instanceof Sprite) {\n\t\t\t\tif (!target._hasOverlaps) target._createSensors();\n\t\t\t} else if (target instanceof Group) {\n\t\t\t\tif (!target._hasOverlaps) {\n\t\t\t\t\tfor (let s of target) {\n\t\t\t\t\t\tif (!s._hasOverlaps) s._createSensors();\n\t\t\t\t\t}\n\t\t\t\t\ttarget._hasOverlaps = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._overlap[target] = true;\n\t\t}\n\n\t\toverlap(target, callback) {\n\t\t\treturn this.overlaps(target, callback);\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the group overlaps with the\n\t\t * target sprite or group.\n\t\t *\n\t\t * Custom overlap event handling can be done by using this function\n\t\t * in an if statement or adding a callback as the second parameter.\n\t\t *\n\t\t * @method overlaps\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t */\n\t\toverlaps(target, callback) {\n\t\t\tthis._ensureOverlap(target, callback);\n\t\t\tthis._overlaps[target] = callback || true;\n\t\t\treturn this._overlappers.get(target) == 1;\n\t\t}\n\n\t\t/**\n\t\t * Returns a truthy value while the group is overlapping with the\n\t\t * target sprite or group. The value returned is the number of\n\t\t * frames the group has been overlapping with the target.\n\t\t *\n\t\t * @method overlapping\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Number} frames\n\t\t */\n\t\toverlapping(target, callback) {\n\t\t\tthis._ensureOverlap(target, callback);\n\t\t\tthis._overlapping[target] = callback || true;\n\t\t\tlet val = this._overlappers.get(target);\n\t\t\treturn val > 0 ? val : 0;\n\t\t}\n\n\t\t/**\n\t\t * Returns true on the first frame that the group no longer overlaps\n\t\t * with the target sprite or group.\n\t\t *\n\t\t * @method overlapped\n\t\t * @param {Sprite|Group} target\n\t\t * @param {Function} [callback]\n\t\t * @return {Boolean}\n\t\t */\n\t\toverlapped(target, callback) {\n\t\t\tthis._ensureOverlap(target, callback);\n\t\t\tthis._overlapped[target] = callback || true;\n\t\t\treturn this._overlappers.get(target) == -1;\n\t\t}\n\n\t\t/**\n\t\t * EXPERIMENTAL implementation for beta testing!\n\t\t *\n\t\t * Apply a force that is scaled to the sprite's mass.\n\t\t *\n\t\t * @method applyForce\n\t\t * @param {p5.Vector|Array} forceVector force vector\n\t\t * @param {p5.Vector|Array} [forceOrigin] force origin\n\t\t */\n\t\tapplyForce(forceVector, forceOrigin) {\n\t\t\tfor (let s of this) {\n\t\t\t\ts.applyForce(forceVector, forceOrigin);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @method move\n\t\t */\n\t\tmove(distance, direction, speed) {\n\t\t\tlet movements = [];\n\t\t\tfor (let s of this) {\n\t\t\t\tmovements.push(s.move(distance, direction, speed));\n\t\t\t}\n\t\t\treturn Promise.all(movements);\n\t\t}\n\n\t\t/**\n\t\t * @method moveTo\n\t\t */\n\t\tmoveTo(x, y, speed) {\n\t\t\tif (typeof x != 'number') {\n\t\t\t\tlet obj = x;\n\t\t\t\tif (obj == this.p.mouse && !this.p.mouse.active) return;\n\t\t\t\tspeed = y;\n\t\t\t\ty = obj.y;\n\t\t\t\tx = obj.x;\n\t\t\t}\n\t\t\tlet centroid = this.resetCentroid();\n\t\t\tlet movements = [];\n\t\t\tfor (let s of this) {\n\t\t\t\tlet dest = {\n\t\t\t\t\tx: s.x - centroid.x + x,\n\t\t\t\t\ty: s.y - centroid.y + y\n\t\t\t\t};\n\t\t\t\tmovements.push(s.moveTo(dest.x, dest.y, speed));\n\t\t\t}\n\t\t\treturn Promise.all(movements);\n\t\t}\n\n\t\t/**\n\t\t * @method moveTowards\n\t\t */\n\t\tmoveTowards(x, y, tracking) {\n\t\t\tif (typeof x != 'number') {\n\t\t\t\tlet obj = x;\n\t\t\t\tif (obj == this.p.mouse && !this.p.mouse.active) return;\n\t\t\t\ttracking = y;\n\t\t\t\ty = obj.y;\n\t\t\t\tx = obj.x;\n\t\t\t}\n\t\t\tif (x === undefined && y === undefined) return;\n\t\t\tthis.resetCentroid();\n\t\t\tfor (let s of this) {\n\t\t\t\tif (s.distCentroid === undefined) this.resetDistancesFromCentroid();\n\t\t\t\tlet dest = {\n\t\t\t\t\tx: s.distCentroid.x + x,\n\t\t\t\t\ty: s.distCentroid.y + y\n\t\t\t\t};\n\t\t\t\ts.moveTowards(dest.x, dest.y, tracking);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @method moveAway\n\t\t */\n\t\tmoveAway(x, y, tracking) {\n\t\t\tif (typeof x != 'number') {\n\t\t\t\tlet obj = x;\n\t\t\t\tif (obj == this.p.mouse && !this.p.mouse.active) return;\n\t\t\t\ttracking = y;\n\t\t\t\ty = obj.y;\n\t\t\t\tx = obj.x;\n\t\t\t}\n\t\t\tif (x === undefined && y === undefined) return;\n\t\t\tthis.resetCentroid();\n\t\t\tfor (let s of this) {\n\t\t\t\tif (s.distCentroid === undefined) this.resetDistancesFromCentroid();\n\t\t\t\tlet dest = {\n\t\t\t\t\tx: s.distCentroid.x + x,\n\t\t\t\t\ty: s.distCentroid.y + y\n\t\t\t\t};\n\t\t\t\ts.moveAway(dest.x, dest.y, tracking);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * EXPERIMENTAL! Subject to change in the future!\n\t\t *\n\t\t * Rotates the group around its centroid.\n\t\t *\n\t\t * @method orbit\n\t\t * @param {Number} amount Amount of rotation\n\t\t */\n\t\torbit(amount) {\n\t\t\tif (this.frame == 0) console.warn('group.orbit is experimental and is subject to change in the future!');\n\t\t\tif (!this.centroid) this.resetCentroid();\n\t\t\tthis.orbitAngle += amount;\n\t\t\tlet angle = this.orbitAngle;\n\t\t\tfor (let s of this) {\n\t\t\t\tif (s.distCentroid === undefined) this.resetDistancesFromCentroid();\n\t\t\t\tlet x = s.distCentroid.x;\n\t\t\t\tlet y = s.distCentroid.y;\n\t\t\t\tlet x2 = x * this.p.cos(angle) - y * this.p.sin(angle);\n\t\t\t\tlet y2 = x * this.p.sin(angle) + y * this.p.cos(angle);\n\t\t\t\tx2 += this.centroid.x;\n\t\t\t\ty2 += this.centroid.y;\n\t\t\t\ts.vel.x = (x2 - s.x) * 0.1 * s.tileSize;\n\t\t\t\ts.vel.y = (y2 - s.y) * 0.1 * s.tileSize;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Gets the member at index i.\n\t\t *\n\t\t * @deprecated get\n\t\t * @param {Number} i The index of the object to retrieve\n\t\t */\n\t\tget(i) {\n\t\t\tconsole.warn('Deprecated: use group[i] instead of group.get(i)');\n\t\t\treturn this[i];\n\t\t}\n\n\t\t/**\n\t\t * Check if a sprite is in the group.\n\t\t *\n\t\t * @method includes\n\t\t * @param {Sprite} sprite\n\t\t * @return {Number} index of the sprite or -1 if not found\n\t\t */\n\n\t\t/**\n\t\t * Use group.includes(sprite) instead.\n\t\t *\n\t\t * @deprecated contains\n\t\t * @param {Sprite} sprite The sprite to search\n\t\t * @return {Number} Index or -1 if not found\n\t\t */\n\t\tcontains(sprite) {\n\t\t\tconsole.warn('Deprecated: use group.includes(sprite) instead of group.contains(sprite)');\n\t\t\treturn this.indexOf(sprite) > -1;\n\t\t}\n\n\t\t/**\n\t\t * Adds a sprite to the group. Returns true if the sprite was added\n\t\t * because it was not already in the group.\n\t\t *\n\t\t * @method push\n\t\t * @param {Sprite} s The sprite to be added\n\t\t */\n\t\tpush(s) {\n\t\t\tif (!(s instanceof Sprite)) {\n\t\t\t\tthrow new Error('you can only add sprites to a group');\n\t\t\t}\n\n\t\t\tif (this.indexOf(s) == -1) {\n\t\t\t\tsuper.push(s);\n\t\t\t\tif (this.parent) this.p.world.groups[this.parent].push(s);\n\t\t\t\ts.groups.push(this);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Alias for push.\n\t\t *\n\t\t * @method add\n\t\t * @param {Sprite} s The sprite to be added\n\t\t */\n\t\tadd(s) {\n\t\t\tthis.push(s);\n\t\t}\n\n\t\t/**\n\t\t * @property length\n\t\t * @return {Number} The amount of sprites in the group\n\t\t */\n\n\t\t/**\n\t\t * Alias for group.length\n\t\t * @deprecated size\n\t\t */\n\t\tsize() {\n\t\t\treturn this.length;\n\t\t}\n\n\t\t/**\n\t\t * Returns the group's unique identifier.\n\t\t *\n\t\t * @returns {String} groupID\n\t\t */\n\t\ttoString() {\n\t\t\treturn 'g' + this.idNum;\n\t\t}\n\n\t\t/**\n\t\t * Remove sprites that go outside the given culling boundary\n\t\t * relative to the camera.\n\t\t *\n\t\t * @method cull\n\t\t * @param {Number} top|size The distance that sprites can move below the p5.js canvas before they are removed. *OR* The distance sprites can travel outside the screen on all sides before they get removed.\n\t\t * @param {Number} bottom|cb The distance that sprites can move below the p5.js canvas before they are removed.\n\t\t * @param {Number} [left] The distance that sprites can move beyond the left side of the p5.js canvas before they are removed.\n\t\t * @param {Number} [right] The distance that sprites can move beyond the right side of the p5.js canvas before they are removed.\n\t\t * @param {Function} [cb(sprite)] The callback is given the sprite that\n\t\t * passed the cull boundary, if no callback is given the sprite is\n\t\t * removed by default\n\t\t */\n\t\tcull(top, bottom, left, right, cb) {\n\t\t\tif (left === undefined) {\n\t\t\t\tlet size = top;\n\t\t\t\tcb = bottom;\n\t\t\t\ttop = bottom = left = right = size;\n\t\t\t}\n\t\t\tif (isNaN(top) || isNaN(bottom) || isNaN(left) || isNaN(right)) {\n\t\t\t\tthrow new TypeError('The culling boundary must be defined with numbers');\n\t\t\t}\n\t\t\tif (cb && typeof cb != 'function') {\n\t\t\t\tthrow new TypeError('The callback to group.cull must be a function');\n\t\t\t}\n\n\t\t\tlet cx = this.p.camera.x - this.p.world.hw / this.p.camera.zoom;\n\t\t\tlet cy = this.p.camera.y - this.p.world.hh / this.p.camera.zoom;\n\n\t\t\tlet minX = -left + cx;\n\t\t\tlet minY = -top + cy;\n\t\t\tlet maxX = this.p.width + right + cx;\n\t\t\tlet maxY = this.p.height + bottom + cy;\n\n\t\t\tfor (let s of this) {\n\t\t\t\tif (s.x < minX || s.y < minY || s.x > maxX || s.y > maxY) {\n\t\t\t\t\tif (cb) cb(s);\n\t\t\t\t\telse s.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * If no input is given all sprites in the group are removed.\n\t\t *\n\t\t * If a sprite or index is given, that sprite is removed from this\n\t\t * group and any group this group inherits from except for the\n\t\t * allSprites group.\n\t\t *\n\t\t * @method remove\n\t\t * @param {Sprite} item The sprite to be removed\n\t\t * @return {Boolean} true if sprite was found and removed\n\t\t */\n\t\tremove(item) {\n\t\t\tif (item === undefined) {\n\t\t\t\twhile (this.length > 0) {\n\t\t\t\t\tthis[0].remove();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet idx;\n\t\t\tif (typeof item == 'number') {\n\t\t\t\tidx = item;\n\t\t\t} else {\n\t\t\t\tfor (let i = this.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (this[i] === item) {\n\t\t\t\t\t\tidx = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (idx !== undefined) {\n\t\t\t\tlet removed = this[idx];\n\t\t\t\tlet gIdx = this[idx].groups.findIndex((g) => g.idNum == this.idNum);\n\t\t\t\tthis[idx].groups.splice(gIdx, 1);\n\t\t\t\tthis.splice(idx, 1);\n\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t\tthrow new Error('Sprite not found in group');\n\t\t}\n\n\t\t/**\n\t\t * Removes all sprites from the group and destroys the group.\n\t\t *\n\t\t * @method removeAll\n\t\t */\n\t\tremoveAll() {\n\t\t\tthis.remove();\n\t\t}\n\n\t\t/**\n\t\t * Returns the highest depth in a group\n\t\t *\n\t\t * @deprecated maxDepth\n\t\t * @return {Number} The depth of the sprite drawn on the top\n\t\t */\n\t\tmaxDepth() {\n\t\t\tif (this.length == 0) return 0;\n\t\t\tif (this.length == 1 && this[0].layer === undefined) return 0;\n\t\t\tlet max = this[0].layer;\n\t\t\tfor (let s of this) {\n\t\t\t\tif (s.layer > max) max = s.layer;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\n\t\t/**\n\t\t * Returns the lowest depth in a group\n\t\t *\n\t\t * @deprecated minDepth\n\t\t * @return {Number} The depth of the sprite drawn on the bottom\n\t\t */\n\t\tminDepth() {\n\t\t\tif (this.length === 0) {\n\t\t\t\treturn 99999;\n\t\t\t}\n\n\t\t\treturn this.reduce(function (minDepth, sprite) {\n\t\t\t\treturn Math.min(minDepth, sprite.depth);\n\t\t\t}, Infinity);\n\t\t}\n\n\t\t/**\n\t\t * Draws all the sprites in the group.\n\t\t *\n\t\t * @method draw\n\t\t */\n\t\tdraw() {\n\t\t\tlet g = [...this];\n\t\t\tg.sort((a, b) => a.layer - b.layer);\n\t\t\tfor (let i = 0; i < g.length; i++) {\n\t\t\t\tlet sprite = g[i];\n\t\t\t\tif (sprite.life-- < 0) {\n\t\t\t\t\tsprite.remove();\n\t\t\t\t\tg.splice(i, 1);\n\t\t\t\t\ti--;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (sprite.visible) sprite.draw();\n\t\t\t}\n\t\t}\n\n\t\tupdate() {\n\t\t\tthrow new Error('Use the updateSprites function instead to control whether sprites are updated or not.');\n\t\t}\n\t}\n\n\t/**\n\t * Adds an animation to the sprite. Use this function in the preload p5.js\n\t * function. You don't need to name the animation if the sprite will only\n\t * use one animation. See SpriteAnimation for more information.\n\t *\n\t * @example\n\t * sprite.addAni(name, animation);\n\t * sprite.addAni(name, frame1, frame2, frame3...);\n\t * sprite.addAni(name, atlas);\n\t *\n\t * @method addAni\n\t * @param {String} name SpriteAnimation identifier\n\t * @param {SpriteAnimation} animation The preloaded animation\n\t */\n\tSprite.prototype.addAnimation =\n\t\tGroup.prototype.addAnimation =\n\t\tSprite.prototype.addAni =\n\t\tGroup.prototype.addAni =\n\t\tSprite.prototype.addImage =\n\t\tGroup.prototype.addImage =\n\t\tSprite.prototype.addImg =\n\t\tGroup.prototype.addImg =\n\t\t\tfunction () {\n\t\t\t\tlet args = [...arguments];\n\t\t\t\tlet name, ani;\n\t\t\t\tif (args[0] instanceof SpriteAnimation) {\n\t\t\t\t\tani = args[0];\n\t\t\t\t\tname = ani.name || 'default';\n\t\t\t\t\tani.name = name;\n\t\t\t\t} else if (args[1] instanceof SpriteAnimation) {\n\t\t\t\t\tname = args[0];\n\t\t\t\t\tani = args[1];\n\t\t\t\t\tani.name = name;\n\t\t\t\t} else {\n\t\t\t\t\tani = new SpriteAnimation(this, ...args);\n\t\t\t\t\tname = ani.name;\n\t\t\t\t}\n\t\t\t\tthis.animations[name] = ani;\n\t\t\t\tthis._animation = ani;\n\n\t\t\t\t// only works if the animation was loaded in preload\n\t\t\t\tif (this._dimensionsUndefined && (ani.w != 1 || ani.h != 1)) {\n\t\t\t\t\tthis.w = ani.w;\n\t\t\t\t\tthis.h = ani.h;\n\t\t\t\t}\n\t\t\t\treturn ani;\n\t\t\t};\n\n\t/**\n\t * Add multiple animations\n\t *\n\t * @method addAnis\n\t */\n\tSprite.prototype.addAnis =\n\t\tGroup.prototype.addAnis =\n\t\tSprite.prototype.addAnimations =\n\t\tGroup.prototype.addAnimations =\n\t\tSprite.prototype.addImages =\n\t\tGroup.prototype.addImages =\n\t\tSprite.prototype.addImgs =\n\t\tGroup.prototype.addImgs =\n\t\t\tfunction () {\n\t\t\t\tlet args = arguments;\n\t\t\t\tlet atlases;\n\t\t\t\tif (args.length == 1) {\n\t\t\t\t\tatlases = args[0];\n\t\t\t\t} else {\n\t\t\t\t\tthis.spriteSheet = args[0];\n\t\t\t\t\tatlases = args[1];\n\t\t\t\t}\n\t\t\t\tfor (let name in atlases) {\n\t\t\t\t\tlet atlas = atlases[name];\n\t\t\t\t\tthis.addAni(name, atlas);\n\t\t\t\t}\n\t\t\t};\n\n\t/**\n\t * Look at the World reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/world.html\n\t *\n\t * @class World\n\t * @constructor\n\t */\n\tclass World extends pl.World {\n\t\tconstructor() {\n\t\t\tsuper(new pl.Vec2(0, 0), true);\n\t\t\tthis.p = pInst;\n\t\t\tthis.width = this.p.width;\n\t\t\tthis.height = this.p.height;\n\t\t\tthis._offset = { x: 0, y: 0 };\n\t\t\tlet _this = this;\n\t\t\tthis.offset = {\n\t\t\t\tget x() {\n\t\t\t\t\treturn -_this._offset.x;\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * @property offset.x\n\t\t\t\t */\n\t\t\t\tset x(val) {\n\t\t\t\t\t_this._offset.x = val;\n\t\t\t\t\t_this.resize();\n\t\t\t\t},\n\t\t\t\tget y() {\n\t\t\t\t\treturn -_this._offset.y;\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * @property offset.y\n\t\t\t\t */\n\t\t\t\tset y(val) {\n\t\t\t\t\t_this._offset.y = val;\n\t\t\t\t\t_this.resize();\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.resize();\n\n\t\t\t/**\n\t\t\t * If false, animations that are stopped before they are completed,\n\t\t\t * typically by a call to sprite.changeAni, will restart at the\n\t\t\t * frame they were stopped at. If true, animations will always\n\t\t\t * start playing from frame 0 unless specified by the user in a\n\t\t\t * separate `anim.changeFrame` call.\n\t\t\t *\n\t\t\t * @property autoResetAnimations\n\t\t\t * @type {SpriteAnimation}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.autoResetAnimations = false;\n\n\t\t\tthis.palettes = this.p.world?.palettes || [\n\t\t\t\t{\n\t\t\t\t\t// a\n\t\t\t\t\tb: 'black',\n\t\t\t\t\tc: 'crimson',\n\t\t\t\t\td: 'dark blue',\n\t\t\t\t\t// e\n\t\t\t\t\tf: 'fuchsia',\n\t\t\t\t\tg: 'green',\n\t\t\t\t\th: 'hot pink',\n\t\t\t\t\ti: 'blue', // indigo\n\t\t\t\t\t// j\n\t\t\t\t\tk: 'black',\n\t\t\t\t\tl: 'lavender',\n\t\t\t\t\tm: 'magenta',\n\t\t\t\t\tn: 'brown',\n\t\t\t\t\to: 'orange',\n\t\t\t\t\tp: 'pink',\n\t\t\t\t\t// q\n\t\t\t\t\tr: 'red',\n\t\t\t\t\ts: 'sky blue',\n\t\t\t\t\tt: 'turquoise',\n\t\t\t\t\tu: 'blue',\n\t\t\t\t\tv: 'violet',\n\t\t\t\t\tw: 'white',\n\t\t\t\t\t// x\n\t\t\t\t\ty: 'yellow'\n\t\t\t\t\t// z\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tthis.groups = [this.p.allSprites];\n\t\t\tthis.groupsCreated = 1;\n\t\t\tthis.spritesCreated = 0;\n\t\t\tthis.contacts = [];\n\n\t\t\tthis.on('begin-contact', this._beginContact);\n\t\t\tthis.on('end-contact', this._endContact);\n\n\t\t\t/**\n\t\t\t * Gravity vector (x, y)\n\t\t\t *\n\t\t\t * All sprites getting\n\t\t\t *\n\t\t\t * @property gravity\n\t\t\t */\n\t\t\tthis.gravity = {\n\t\t\t\tget x() {\n\t\t\t\t\treturn _this.m_gravity.x;\n\t\t\t\t},\n\t\t\t\tset x(val) {\n\t\t\t\t\tfor (let s of _this.p.allSprites) {\n\t\t\t\t\t\ts.sleeping = false;\n\t\t\t\t\t}\n\t\t\t\t\t_this.m_gravity.x = _this.p.round(val || 0);\n\t\t\t\t},\n\t\t\t\tget y() {\n\t\t\t\t\treturn _this.m_gravity.y;\n\t\t\t\t},\n\t\t\t\tset y(val) {\n\t\t\t\t\tfor (let s of _this.p.allSprites) {\n\t\t\t\t\t\ts.sleeping = false;\n\t\t\t\t\t}\n\t\t\t\t\t_this.m_gravity.y = _this.p.round(val || 0);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tresize(w, h) {\n\t\t\tw ??= this.p.width;\n\t\t\th ??= this.p.height;\n\t\t\tthis.origin = {\n\t\t\t\tx: w * 0.5 + this.offset.x,\n\t\t\t\ty: h * 0.5 + this.offset.y\n\t\t\t};\n\t\t\tif (this.p.allSprites.tileSize != 1) {\n\t\t\t\tthis.origin.x -= this.p.allSprites.tileSize * 0.5;\n\t\t\t\tthis.origin.y -= this.p.allSprites.tileSize * 0.5;\n\t\t\t}\n\t\t\tthis.hw = w * 0.5;\n\t\t\tthis.hh = h * 0.5;\n\t\t}\n\n\t\t_beginContact(contact) {\n\t\t\t// Get both fixtures\n\t\t\tlet a = contact.m_fixtureA;\n\t\t\tlet b = contact.m_fixtureB;\n\t\t\tlet t = '_collisions';\n\t\t\tif (a.isSensor()) t = '_overlappers';\n\t\t\ta = a.m_body.sprite;\n\t\t\tb = b.m_body.sprite;\n\n\t\t\ta[t].set(b, 0);\n\t\t\tb[t].set(a, 0);\n\n\t\t\tfor (let g of b.groups) {\n\t\t\t\tg[t].set(a, g[t].get(a) || 0);\n\t\t\t\ta[t].set(g, a[t].get(g) || 0);\n\t\t\t}\n\n\t\t\tfor (let g of a.groups) {\n\t\t\t\tg[t].set(b, g[t].get(b) || 0);\n\t\t\t\tb[t].set(g, b[t].get(g) || 0);\n\t\t\t\tfor (let g2 of b.groups) {\n\t\t\t\t\tg[t].set(g2, g[t].get(g2) || 0);\n\t\t\t\t\tg2[t].set(g, g2[t].get(g) || 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_endContact(contact) {\n\t\t\tlet a = contact.m_fixtureA;\n\t\t\tlet b = contact.m_fixtureB;\n\t\t\tlet contactType = '_collisions';\n\t\t\tif (a.isSensor()) contactType = '_overlappers';\n\t\t\ta = a.m_body.sprite;\n\t\t\tb = b.m_body.sprite;\n\n\t\t\ta[contactType].set(b, -2);\n\t\t\tb[contactType].set(a, -2);\n\n\t\t\tfor (let g of b.groups) {\n\t\t\t\tlet inContact = false;\n\t\t\t\tfor (let s of g) {\n\t\t\t\t\tif (s[contactType].get(a) >= 0) {\n\t\t\t\t\t\tinContact = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!inContact) {\n\t\t\t\t\tg[contactType].set(a, -2);\n\t\t\t\t\ta[contactType].set(g, -2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let g of a.groups) {\n\t\t\t\tlet inContact = false;\n\t\t\t\tfor (let s of g) {\n\t\t\t\t\tif (s[contactType].get(b) >= 0) {\n\t\t\t\t\t\tinContact = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!inContact) {\n\t\t\t\t\tg[contactType].set(b, -2);\n\t\t\t\t\tb[contactType].set(g, -2);\n\t\t\t\t\tfor (let g2 of b.groups) {\n\t\t\t\t\t\tg[contactType].set(g2, -2);\n\t\t\t\t\t\tg2[contactType].set(g, -2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget autoCull() {\n\t\t\treturn this.p.allSprites.autoCull;\n\t\t}\n\n\t\tset autoCull(val) {\n\t\t\tthis.p.allSprites.autoCull = val;\n\t\t}\n\n\t\tget allowSleeping() {\n\t\t\treturn this.getAllowSleeping();\n\t\t}\n\n\t\tset allowSleeping(val) {\n\t\t\tthis.setAllowSleeping(val);\n\t\t}\n\t}\n\n\t/**\n\t * Look at the Camera reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/camera.html\n\t *\n\t * A camera facilitates scrolling and zooming for scenes extending beyond\n\t * the canvas. A camera has a position, a zoom factor, and the mouse\n\t * coordinates relative to the view.\n\t * The camera is automatically created on the first draw cycle.\n\t *\n\t * In p5.js terms the camera wraps the whole drawing cycle in a\n\t * transformation matrix but it can be disable anytime during the draw\n\t * cycle for example to draw interface elements in an absolute position.\n\t *\n\t * @class Camera\n\t * @constructor\n\t * @param {Number} x Initial x coordinate\n\t * @param {Number} y Initial y coordinate\n\t * @param {Number} zoom magnification\n\t **/\n\tclass Camera {\n\t\tconstructor(x, y, zoom) {\n\t\t\tthis.p = pInst;\n\t\t\tlet _this = this;\n\n\t\t\tthis._pos = { x: 0, y: 0 };\n\n\t\t\t/**\n\t\t\t * Camera zoom.\n\t\t\t *\n\t\t\t * A scale of 1 will be the normal size. Setting it to 2 will\n\t\t\t * make everything twice the size. .5 will make everything half\n\t\t\t * size.\n\t\t\t *\n\t\t\t * @property zoom\n\t\t\t * @type {Number}\n\t\t\t * @default 1\n\t\t\t */\n\t\t\tthis.zoom = zoom || 1;\n\n\t\t\t/**\n\t\t\t * Get the translated mouse position relative to the camera view.\n\t\t\t * Offsetting and scaling the canvas will not change the sprites' position\n\t\t\t * nor the mouseX and mouseY variables. Use this property to read the mouse\n\t\t\t * position if the camera moved or zoomed.\n\t\t\t *\n\t\t\t * @property mouse\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tthis.mouse = {\n\t\t\t\tx: this.p.mouseX,\n\t\t\t\ty: this.p.mouseY\n\t\t\t};\n\t\t\t/**\n\t\t\t * @property mouse.x\n\t\t\t * @type {Number}\n\t\t\t */\n\t\t\t/**\n\t\t\t * @property mouse.y\n\t\t\t * @type {Number}\n\t\t\t */\n\n\t\t\t/**\n\t\t\t * True if the camera is active.\n\t\t\t * Read only property. Use the methods Camera.on() and Camera.off()\n\t\t\t * to enable or disable the camera.\n\t\t\t *\n\t\t\t * @property active\n\t\t\t * @type {Boolean}\n\t\t\t * @default false\n\t\t\t */\n\t\t\tthis.active = false;\n\n\t\t\tthis.bound = {\n\t\t\t\tmin: { x: 0, y: 0 },\n\t\t\t\tmax: { x: 0, y: 0 }\n\t\t\t};\n\n\t\t\tif (x) this.x = x;\n\t\t\tif (y) this.y = y;\n\t\t}\n\n\t\t/**\n\t\t * The camera's position. {x, y}\n\t\t *\n\t\t * @property pos\n\t\t * @type {Object}\n\t\t */\n\t\tget pos() {\n\t\t\treturn this._pos;\n\t\t}\n\t\t/**\n\t\t * The camera's position. Alias for pos.\n\t\t *\n\t\t * @property position\n\t\t * @type {Object}\n\t\t */\n\t\tget position() {\n\t\t\treturn this._pos;\n\t\t}\n\n\t\t/**\n\t\t * The camera x position.\n\t\t *\n\t\t * @property x\n\t\t * @type {Number}\n\t\t */\n\t\tget x() {\n\t\t\treturn this._pos.x;\n\t\t}\n\t\tset x(val) {\n\t\t\tthis._pos.x = val;\n\t\t\tthis.bound.min.x = this.x - this.p.world.hw / this.zoom - 100;\n\t\t\tthis.bound.max.x = this.x + this.p.world.hw / this.zoom + 100;\n\t\t}\n\n\t\t/**\n\t\t * The camera y position.\n\t\t *\n\t\t * @property y\n\t\t * @type {Number}\n\t\t */\n\t\tget y() {\n\t\t\treturn this._pos.y;\n\t\t}\n\t\tset y(val) {\n\t\t\tthis._pos.y = val;\n\t\t\tthis.bound.min.y = this.y - this.p.world.hh / this.zoom - 100;\n\t\t\tthis.bound.max.y = this.y + this.p.world.hh / this.zoom + 100;\n\t\t}\n\n\t\t/**\n\t\t * Activates the camera.\n\t\t * The canvas will be drawn according to the camera position and scale until\n\t\t * camera.off() is called\n\t\t *\n\t\t * @method on\n\t\t */\n\t\ton() {\n\t\t\tif (!this.active) {\n\t\t\t\tthis.p.push();\n\t\t\t\tthis.p.scale(this.zoom);\n\t\t\t\tthis.p.translate(-this.x + this.p.world.hw / this.zoom, -this.y + this.p.world.hh / this.zoom);\n\t\t\t\tthis.active = true;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Deactivates the camera.\n\t\t * The canvas will be drawn normally, ignoring the camera's position\n\t\t * and scale until camera.on() is called\n\t\t *\n\t\t * @method off\n\t\t */\n\t\toff() {\n\t\t\tif (this.active) {\n\t\t\t\tthis.p.pop();\n\t\t\t\tthis.active = false;\n\t\t\t}\n\t\t}\n\t} //end camera class\n\n\t/**\n\t * Used internally to find a contact callback between two sprites.\n\t *\n\t * @private _findContactCB\n\t * @param {String} type \"collide\" or \"overlap\"\n\t * @param {Sprite} s0\n\t * @param {Sprite} s1\n\t * @returns contact cb if one can be found between the two sprites\n\t */\n\tfunction _findContactCB(type, s0, s1) {\n\t\tlet cb = s0[type][s1];\n\t\tif (cb) return cb;\n\n\t\tlet s1IsSprite = s1 instanceof Sprite;\n\n\t\tif (s1IsSprite) {\n\t\t\tfor (let g1 of s1.groups) {\n\t\t\t\tcb = s0[type][g1];\n\t\t\t\tif (cb) return cb;\n\t\t\t}\n\t\t}\n\n\t\tif (s0 instanceof Sprite) {\n\t\t\tfor (let g0 of s0.groups) {\n\t\t\t\tcb = g0[type][s1];\n\t\t\t\tif (cb) return cb;\n\t\t\t\tif (s1IsSprite) {\n\t\t\t\t\tfor (let g1 of s1.groups) {\n\t\t\t\t\t\tcb = g0[type][g1];\n\t\t\t\t\t\tif (cb) return cb;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * This planck function should've be named \"shouldContact\", because that's what\n\t * it actually decides.\n\t *\n\t * Here we override it to allow for overlap events between sprites.\n\t */\n\tpl.Fixture.prototype.shouldCollide = function (that) {\n\t\t// should this and that produce a contact event?\n\t\tlet a = this;\n\t\tlet b = that;\n\n\t\t// sensors overlap (returning true doesn't mean they will collide it means\n\t\t// they're included in begin contact and end contact events)\n\t\tif (a.isSensor() && b.isSensor()) return true;\n\t\t// ignore contact events between a sensor and a non-sensor\n\t\tif (a.isSensor() || b.isSensor()) return false;\n\t\t// else test if the two non-sensor colliders should overlap\n\n\t\ta = a.m_body.sprite;\n\t\tb = b.m_body.sprite;\n\n\t\t// if `a` has an overlap enabled with `b` their colliders should not produce a\n\t\t// contact event, the overlap contact event is between their sensors\n\t\tlet shouldOverlap = _findContactCB('_overlap', a, b);\n\t\tif (!shouldOverlap) shouldOverlap = _findContactCB('_overlap', b, a);\n\t\tif (shouldOverlap) return false;\n\t\treturn true;\n\t};\n\n\t/**\n\t * Look at the Tiles reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/tiles.html\n\t *\n\t * @class Tiles\n\t * @constructor\n\t * @param {String} tiles\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @param {Number} w\n\t * @param {Number} h\n\t */\n\tclass Tiles {\n\t\tconstructor(tiles, x, y, w, h) {\n\t\t\tif (typeof tiles == 'string') tiles = tiles.split('\\n');\n\n\t\t\tx ??= 0;\n\t\t\ty ??= 0;\n\t\t\tw ??= 1;\n\t\t\th ??= 1;\n\n\t\t\tfor (let row = 0; row < tiles.length; row++) {\n\t\t\t\tfor (let col = 0; col < tiles[row].length; col++) {\n\t\t\t\t\tlet t = tiles[row][col];\n\t\t\t\t\tif (t == ' ' || t == '.') continue;\n\t\t\t\t\tlet ani, g;\n\t\t\t\t\tfor (g of pInst.world.groups) {\n\t\t\t\t\t\tani = g.animations[t];\n\t\t\t\t\t\tif (ani) break;\n\t\t\t\t\t}\n\t\t\t\t\tif (ani) {\n\t\t\t\t\t\tnew g.Sprite(ani, x + col * w, y + row * h);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet wasFound = false;\n\t\t\t\t\tfor (g of pInst.world.groups) {\n\t\t\t\t\t\tif (g.tile == t) {\n\t\t\t\t\t\t\twasFound = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (wasFound) {\n\t\t\t\t\t\tnew g.Sprite(x + col * w, y + row * h);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet s;\n\t\t\t\t\tfor (s of pInst.allSprites) {\n\t\t\t\t\t\tif (s.tile == t) {\n\t\t\t\t\t\t\twasFound = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (wasFound) {\n\t\t\t\t\t\ts.x = x + col * w;\n\t\t\t\t\t\ts.y = y + row * h;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.error('Tile not found: ' + t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tthis.Tiles = Tiles;\n\n\t/**\n\t * Look at the p5.play reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn\n\t *\n\t * @class p5.play\n\t */\n\n\t/**\n\t * Equivalent to `new Tiles`\n\t *\n\t * @method createTiles\n\t * @param {String|Array} tiles String or array of strings\n\t */\n\tthis.createTiles = function (tiles, x, y, w, h) {\n\t\treturn new Tiles(tiles, x, y, w, h);\n\t};\n\n\tclass Scale {\n\t\tconstructor() {\n\t\t\tthis._x = 1;\n\t\t\tthis._y = 1;\n\t\t\tthis._avg = 1;\n\t\t}\n\n\t\tvalueOf() {\n\t\t\treturn this._avg;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\t\tset x(val) {\n\t\t\tif (val == this._x) return;\n\t\t\tthis._x = val;\n\t\t\tthis._avg = (this._x + this._y) * 0.5;\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\t\tset y(val) {\n\t\t\tif (val == this._y) return;\n\t\t\tthis._y = val;\n\t\t\tthis._avg = (this._x + this._y) * 0.5;\n\t\t}\n\t}\n\n\t/**\n\t * This function is automatically called at the end of the p5.js draw\n\t * loop, unless it was already called in the draw loop.\n\t *\n\t * @method updateSprites\n\t * @param {Number} timeStep\n\t * @param {Number} velocityIterations\n\t * @param {Number} positionIterations\n\t */\n\tthis.updateSprites = function (timeStep, velocityIterations, positionIterations) {\n\t\tfor (let s of this.allSprites) {\n\t\t\ts.prevPos.x = s.x;\n\t\t\ts.prevPos.y = s.y;\n\t\t}\n\n\t\t// 2nd and 3rd arguments are velocity and position iterations\n\t\tthis.world.step(timeStep || 1 / 60, velocityIterations || 8, positionIterations || 3);\n\n\t\tfor (let s of this.allSprites) {\n\t\t\ts.update();\n\t\t}\n\t\tthis.p5play.autoUpdateSprites = false;\n\t};\n\n\t/**\n\t * Returns the sprites at a position.\n\t *\n\t * @method getSpriteAt\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @returns\n\t */\n\tthis.getSpritesAt = function (x, y, group, cameraActiveWhenDrawn) {\n\t\tcameraActiveWhenDrawn ??= true;\n\t\tconst convertedPoint = new pl.Vec2(x / plScale, y / plScale);\n\t\tconst aabb = new pl.AABB();\n\t\taabb.lowerBound = new pl.Vec2(convertedPoint.x - 0.001, convertedPoint.y - 0.001);\n\t\taabb.upperBound = new pl.Vec2(convertedPoint.x + 0.001, convertedPoint.y + 0.001);\n\n\t\t// Query the world for overlapping shapes.\n\t\tlet fxts = [];\n\t\tpInst.world.queryAABB(aabb, (fxt) => {\n\t\t\tif (fxt.getShape().testPoint(fxt.getBody().getTransform(), convertedPoint)) {\n\t\t\t\tfxts.push(fxt);\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\n\t\tgroup ??= pInst.allSprites;\n\n\t\tlet sprites = [];\n\t\tif (fxts.length > 0) {\n\t\t\tfor (let s of group) {\n\t\t\t\tif (!s.body) continue;\n\t\t\t\tif (fxts.includes(s.body.m_fixtureList)) {\n\t\t\t\t\tif (s._cameraActiveWhenDrawn == cameraActiveWhenDrawn) sprites.push(s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sprites;\n\t};\n\n\t/**\n\t * Returns the sprite at the top most layer position where\n\t * the mouse click occurs\n\t *\n\t * @method getSpriteAt\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @returns\n\t */\n\tthis.getSpriteAt = function (x, y, group) {\n\t\tlet sprites = this.getSpritesAt(x, y, group);\n\t\tsprites.sort((a, b) => (a.layer - b.layer) * -1);\n\t\treturn sprites[0];\n\t};\n\n\t// TODO implement planck joints\n\t// the following code is from https://github.com/bobcgausa/cook-js\n\n\t// const debugDraw = (canvas, scale, world) => {\n\t// \tconst context = canvas.getContext('2d');\n\t// \t//context.fillStyle = '#DDD';\n\t// \t//context.fillRect(0, 0, canvas.width, canvas.height);\n\n\t// \t// Draw joints\n\t// \tfor (let j = world.m_jointList; j; j = j.m_next) {\n\t// \t\tcontext.lineWidth = 0.25;\n\t// \t\tcontext.strokeStyle = '#00F';\n\t// \t\tdrawJoint(context, scale, world, j);\n\t// \t}\n\t// };\n\n\t// const drawJoint = (context, scale, world, joint) => {\n\t// \tcontext.save();\n\t// \tcontext.scale(scale, scale);\n\t// \tcontext.lineWidth /= scale;\n\n\t// \tconst b1 = joint.m_bodyA;\n\t// \tconst b2 = joint.m_bodyB;\n\t// \tconst x1 = b1.getPosition();\n\t// \tconst x2 = b2.getPosition();\n\t// \tlet p1;\n\t// \tlet p2;\n\t// \tcontext.beginPath();\n\t// \tswitch (joint.m_type) {\n\t// \t\tcase 'distance-joint':\n\t// \t\tcase 'rope-joint':\n\t// \t\t\tcontext.moveTo(x1.x, x1.y);\n\t// \t\t\tcontext.lineTo(x2.x, x2.y);\n\t// \t\t\tbreak;\n\t// \t\tcase 'wheel-joint':\n\t// \t\tcase 'revolute-joint':\n\t// \t\t\tp1 = joint.m_localAnchorA;\n\t// \t\t\tp2 = joint.m_localAnchorB;\n\t// \t\t\tconst a = b2.getAngle();\n\t// \t\t\tconst v = new pl.Vec2(cos(a), sin(a));\n\t// \t\t\tcontext.moveTo(x2.x, x2.y);\n\t// \t\t\tcontext.lineTo(x2.x + v.x, x2.y + v.y);\n\t// \t\t\tbreak;\n\t// \t\tcase 'mouse-joint':\n\t// \t\tcase 'weld-joint':\n\t// \t\t\tp1 = joint.getAnchorA();\n\t// \t\t\tp2 = joint.getAnchorB();\n\t// \t\t\tcontext.moveTo(p1.x, p1.y);\n\t// \t\t\tcontext.lineTo(p2.x, p2.y);\n\t// \t\t\tbreak;\n\t// \t\tcase 'pulley-joint':\n\t// \t\t\tp1 = joint.m_groundAnchorA;\n\t// \t\t\tp2 = joint.m_groundAnchorB;\n\t// \t\t\tcontext.moveTo(p1.x, p1.y);\n\t// \t\t\tcontext.lineTo(x1.x, x1.y);\n\t// \t\t\tcontext.moveTo(p2.x, p2.y);\n\t// \t\t\tcontext.lineTo(x2.x, x2.y);\n\t// \t\t\tcontext.moveTo(p1.x, p1.y);\n\t// \t\t\tcontext.lineTo(p2.x, p2.y);\n\t// \t\t\tbreak;\n\t// \t\tdefault:\n\t// \t\t\tbreak;\n\t// \t}\n\t// \tcontext.closePath();\n\t// \tcontext.stroke();\n\t// \tcontext.restore();\n\t// };\n\n\t// function getAABB(body) {\n\t// \tconst aabb = new pl.AABB();\n\t// \tconst t = new pl.Transform();\n\t// \tt.setIdentity();\n\t// \tconst shapeAABB = new pl.AABB();\n\t// \taabb.lowerBound = new pl.Vec2(1000000, 1000000);\n\t// \taabb.upperBound = new pl.Vec2(-1000000, -1000000);\n\t// \tlet fixture = body.body.getFixtureList();\n\t// \twhile (fixture) {\n\t// \t\tconst shape = fixture.getShape();\n\t// \t\tconst childCount = shape.getChildCount(); //only for chains\n\t// \t\tfor (let child = 0; child < childCount; ++child) {\n\t// \t\t\tshape.computeAABB(shapeAABB, body.body.m_xf, child);\n\t// \t\t\tunionTo(aabb, shapeAABB);\n\t// \t\t}\n\t// \t\tfixture = fixture.getNext();\n\t// \t}\n\t// \taabb.lowerBound.mul(plScale); //upper left, offset from center\n\t// \taabb.upperBound.mul(plScale); //lower right\n\t// \treturn aabb;\n\t// }\n\n\t// function unionTo(a, b) {\n\t// \ta.lowerBound.x = min(a.lowerBound.x, b.lowerBound.x);\n\t// \ta.lowerBound.y = min(a.lowerBound.y, b.lowerBound.y);\n\t// \ta.upperBound.x = max(a.upperBound.x, b.upperBound.x);\n\t// \ta.upperBound.y = max(a.upperBound.y, b.upperBound.y);\n\t// }\n\n\t// The ray cast collects multiple hits along the ray in ALL mode.\n\t// The fixtures are not necessary reported in order.\n\t// We might not capture the closest fixture in ANY.\n\t// const rayCast = (() => {\n\t// \tlet def = {\n\t// \t\tANY: 0,\n\t// \t\tNEAREST: 2,\n\t// \t\tALL: 1\n\t// \t};\n\n\t// \tconst reset = (mode, ignore) => {\n\t// \t\tdef.points = [];\n\t// \t\tdef.normals = [];\n\t// \t\tdef.fixtures = [];\n\t// \t\tdef.fractions = [];\n\t// \t\tdef.ignore = ignore || [];\n\t// \t\tdef.mode = mode == undefined ? def.NEAREST : mode;\n\t// \t};\n\n\t// \tdef.rayCast = (point1, point2, mode, ignore) => {\n\t// \t\treset(mode, ignore);\n\t// \t\tworld.rayCast(scaleTo(point1), scaleTo(point2), def.callback);\n\t// \t};\n\n\t// \tdef.callback = (fixture, point, normal, fraction) => {\n\t// \t\tif (def.ignore.length > 0) for (let i = 0; i < def.ignore.length; i++) if (def.ignore[i] === fixture) return -1;\n\t// \t\tif (def.mode == def.NEAREST && def.points.length == 1) {\n\t// \t\t\tdef.fixtures[0] = fixture;\n\t// \t\t\tdef.points[0] = scaleFrom(point);\n\t// \t\t\tdef.normals[0] = normal;\n\t// \t\t\tdef.fractions[0] = fraction;\n\t// \t\t} else {\n\t// \t\t\tdef.fixtures.push(fixture);\n\t// \t\t\tdef.points.push(scaleFrom(point));\n\t// \t\t\tdef.normals.push(normal);\n\t// \t\t\tdef.fractions.push(fraction);\n\t// \t\t}\n\t// \t\t// -1 to ignore a fixture and continue\n\t// \t\t//  0 to terminate on first hit, or for searching\n\t// \t\t//  fraction seems to return nearest fixture as last entry in array\n\t// \t\t// +1 returns multiple but mix of low high or high low\n\t// \t\treturn def.mode == def.NEAREST ? fraction : def.mode;\n\t// \t};\n\n\t// \treturn def;\n\t// })();\n\n\t// const queryAABB = (() => {\n\t// \tlet def = {};\n\t// \tfunction reset(search) {\n\t// \t\tdef.fixtures = [];\n\t// \t\tdef.search = search || [];\n\t// \t}\n\n\t// \tdef.query = ({ lowerBound, upperBound }, search) => {\n\t// \t\treset(search);\n\t// \t\taabbc = new pl.AABB(lowerBound.mul(1 / plScale), upperBound.mul(1 / plScale));\n\t// \t\tworld.queryAABB(aabbc, def.callback);\n\t// \t};\n\n\t// \tdef.callback = (fixture) => {\n\t// \t\tdef.fixtures.push(fixture);\n\t// \t\treturn true;\n\t// \t};\n\n\t// \treturn def;\n\t// })();\n\n\t/**\n\t * Gets a color from a color palette\n\t *\n\t * @method colorPal\n\t * @param {String} c A single character, a key found in the color palette object.\n\t * @param {Number|Object} palette Can be a palette object or number index\n\t * in the system's palettes array.\n\t * @returns a hex color string for use by p5.js functions\n\t */\n\tthis.colorPal = (c, palette) => {\n\t\tif (c instanceof p5.Color) return c;\n\t\tif (typeof palette == 'number') {\n\t\t\tpalette = pInst.world.palettes[palette];\n\t\t}\n\t\tpalette ??= pInst.world.palettes[0];\n\t\tlet clr;\n\t\tif (palette) clr = palette[c];\n\t\t// if transparent\n\t\tif (clr === '' || c === '.' || c === ' ') {\n\t\t\treturn pInst.color(0, 0, 0, 0);\n\t\t}\n\t\treturn pInst.color(clr || c);\n\t};\n\n\t/**\n\t * Create pixel art images from a string. Each character in the\n\t * input string represents a color value defined in the palette\n\t * object.\n\t *\n\t * @method spriteArt\n\t * @param {String} txt Each character represents a pixel color value\n\t * @param {Number} scale The scale of the image\n\t * @param {Number|Object} palette Color palette\n\t * @returns A p5.js Image\n\t *\n\t * @example\n\t * let str = `\n\t * ...yyyy\n\t * .yybyybyy\n\t * yyyyyyyyyy\n\t * yybyyyybyy\n\t * .yybbbbyy\n\t * ...yyyy`;\n\t *\n\t * let img = spriteArt(str);\n\t */\n\tthis.spriteArt = (txt, scale, palette) => {\n\t\tscale ??= 1;\n\t\tif (typeof palette == 'number') {\n\t\t\tpalette = pInst.world.palettes[palette];\n\t\t}\n\t\tpalette ??= pInst.world.palettes[0];\n\t\tlet lines = txt; // accepts 2D arrays of characters\n\t\tif (typeof txt == 'string') {\n\t\t\ttxt = txt.trim();\n\t\t\ttxt = txt.replace(/\\r*\\n\\t+/g, '\\n'); // trim leading tabs\n\t\t\ttxt = txt.replace(/\\s+$/g, ''); // trim trailing whitespace\n\t\t\tlines = txt.split('\\n');\n\t\t}\n\t\tlet w = 0;\n\t\tfor (let line of lines) {\n\t\t\tif (line.length > w) w = line.length;\n\t\t}\n\t\tlet h = lines.length;\n\t\tlet img = pInst.createImage(w * scale, h * scale);\n\t\timg.loadPixels();\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tfor (let j = 0; j < lines[i].length; j++) {\n\t\t\t\tfor (let sX = 0; sX < scale; sX++) {\n\t\t\t\t\tfor (let sY = 0; sY < scale; sY++) {\n\t\t\t\t\t\tlet c = this.colorPal(lines[i][j], palette);\n\t\t\t\t\t\timg.set(j * scale + sX, i * scale + sY, c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\timg.updatePixels();\n\t\timg.w = img.width;\n\t\timg.h = img.height;\n\t\tpInst.p5play.images.onLoad(img);\n\t\treturn img; // return the p5 graphics object\n\t};\n\n\t/**\n\t * Deprecated, use sprite.draw() instead.\n\t *\n\t * allSprites.draw() is run automatically at the end of the p5.js\n\t * draw loop, unless a sprite or group is drawn separately within the\n\t * draw loop.\n\t *\n\t * @deprecated\n\t * @method drawSprites\n\t */\n\tthis.drawSprite = function (sprite) {\n\t\tif (pInst.frameCount == 1) console.warn('drawSprite() is deprecated, use sprite.draw() instead.');\n\t\tsprite.draw();\n\t};\n\n\t/**\n\t * Deprecated, use group.draw() instead.\n\t *\n\t * allSprites.draw() is run automatically at the end of the p5.js\n\t * draw loop, unless a sprite or group is drawn separately within the\n\t * draw loop.\n\t *\n\t * @deprecated\n\t * @method drawSprites\n\t */\n\tthis.drawSprites = function (group) {\n\t\tif (pInst.frameCount == 1) console.warn('drawSprites() is deprecated, use group.draw() instead.');\n\t\tgroup ??= pInst.allSprites;\n\t\tgroup.draw();\n\t};\n\n\t/**\n\t * Creates a new sprite. Equivalent to `new Sprite()`\n\t *\n\t * @returns {Sprite}\n\t */\n\tthis.createSprite = function () {\n\t\treturn new Sprite(...arguments);\n\t};\n\n\t/**\n\t * Creates a new group of sprites. Equivalent to `new Group()`\n\t *\n\t * @returns {Group}\n\t */\n\tthis.createGroup = function () {\n\t\treturn new Group(...arguments);\n\t};\n\n\t/**\n\t * Loads an animation. Equivalent to `new SpriteAnimation()`\n\t *\n\t * Load animations in the preload p5.js function if you need to use\n\t * them when your program starts.\n\t *\n\t * @method loadAni\n\t * @returns {SpriteAnimation}\n\t */\n\t/**\n\t * Alias for loadAni\n\t *\n\t * @method loadAnimation\n\t * @returns {SpriteAnimation}\n\t */\n\tthis.loadAni = this.loadAnimation = function () {\n\t\treturn new SpriteAnimation(...arguments);\n\t};\n\n\t/**\n\t * Displays an animation. Similar to the p5.js image function.\n\t *\n\t * @method animation\n\t * @param {SpriteAnimation} ani Animation to be displayed\n\t * @param {Number} x X coordinate\n\t * @param {Number} y Y coordinate\n\t *\n\t */\n\tthis.animation = function (ani, x, y, r, sX, sY) {\n\t\tif (ani.visible) ani.update();\n\t\tani.draw(x, y, r, sX, sY);\n\t};\n\n\t/**\n\t * Delay code execution in an async function for the specified time.\n\t *\n\t * @method delay\n\t * @param {Number} millisecond\n\t * @returns {Promise} A Promise that fulfills after the specified time.\n\t *\n\t * @example\n\t * async function startGame() {\n\t *   await delay(3000);\n\t * }\n\t */\n\tp5.prototype.delay = (millisecond) => {\n\t\t// if no input arg given, delay waits for the next possible animation frame\n\t\tif (!millisecond) {\n\t\t\treturn new Promise(requestAnimationFrame);\n\t\t} else {\n\t\t\t// else it wraps setTimeout in a Promise\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tsetTimeout(resolve, millisecond);\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Sleep for the specified time. Equivalent to the delay function.\n\t *\n\t * @method sleep\n\t * @param {Number} millisecond\n\t * @returns {Promise} A Promise that fulfills after the specified time.\n\t *\n\t * @example\n\t * async function startGame() {\n\t *   await sleep(3000);\n\t * }\n\t */\n\tp5.prototype.sleep = (millisecond) => {\n\t\treturn p5.prototype.delay(millisecond);\n\t};\n\n\t/**\n\t * Awaitable function for playing sounds.\n\t *\n\t * @method play\n\t * @param {p5.Sound} sound\n\t * @returns {Promise}\n\t */\n\tthis.play = (sound) => {\n\t\tif (!sound.play) throw new Error('Tried to play a sound but the sound is not a sound object: ' + sound);\n\t\t// TODO reject if sound not found\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsound.play();\n\t\t\tsound.onended(() => resolve());\n\t\t});\n\t};\n\n\tlet userDisabledP5Errors = p5.disableFriendlyErrors;\n\tp5.disableFriendlyErrors = true;\n\n\tconst _createCanvas = this.createCanvas;\n\n\t/**\n\t * Equivalent to p5.js createCanvas function and `new Canvas()`\n\t *\n\t * In p5.play a canvas can be created with an aspect ratio in the\n\t * format `width:height`. For example `new Canvas('16:9')` will create\n\t * the largest possible canvas with a 16:9 aspect ratio.\n\t *\n\t * This function also disables the default keydown responses for\n\t * the arrow keys, slash, and spacebar. This is to prevent the\n\t * browser from scrolling the page when the user is playing a game using\n\t * common keyboard commands.\n\t *\n\t * @method createCanvas\n\t * @param {Number} width|ratio\n\t * @param {Number} height\n\t */\n\tthis.createCanvas = function () {\n\t\tlet args = [...arguments];\n\t\tlet isFullScreen = false;\n\t\tlet pixelated = false;\n\t\tlet w, h, ratio;\n\t\tif (typeof args[0] == 'string') {\n\t\t\tratio = args[0].split(':');\n\t\t\tif (args[1] == 'fullscreen') {\n\t\t\t\tisFullScreen = true;\n\t\t\t}\n\t\t}\n\t\tif (!args.length) {\n\t\t\targs[0] = window.innerWidth;\n\t\t\targs[1] = window.innerHeight;\n\t\t\tisFullScreen = true;\n\t\t} else if (typeof args[0] == 'number' && typeof args[1] != 'number') {\n\t\t\targs[2] = args[1];\n\t\t\targs[1] = args[0];\n\t\t}\n\n\t\tif (args[2] == 'pixelated') {\n\t\t\tpixelated = true;\n\t\t\tisFullScreen = true;\n\t\t\tratio = [args[0], args[1]];\n\t\t}\n\t\tif (ratio) {\n\t\t\tlet rW = Number(ratio[0]);\n\t\t\tlet rH = Number(ratio[1]);\n\n\t\t\tw = window.innerWidth;\n\t\t\th = window.innerWidth * (rH / rW);\n\t\t\tif (h > window.innerHeight) {\n\t\t\t\tw = window.innerHeight * (rW / rH);\n\t\t\t\th = window.innerHeight;\n\t\t\t}\n\t\t\tw = Math.round(w);\n\t\t\th = Math.round(h);\n\n\t\t\tif (!pixelated) {\n\t\t\t\targs[0] = w;\n\t\t\t\targs[1] = h;\n\t\t\t}\n\t\t}\n\t\tif (args.length < 3) args[2] = 'p2d';\n\t\tlet can = _createCanvas.call(pInst, ...args);\n\t\tthis.canvas.tabIndex = 0;\n\t\tthis.canvas.addEventListener('keydown', function (e) {\n\t\t\tif (\n\t\t\t\te.key == ' ' ||\n\t\t\t\te.key == '/' ||\n\t\t\t\te.key == 'ArrowUp' ||\n\t\t\t\te.key == 'ArrowDown' ||\n\t\t\t\te.key == 'ArrowLeft' ||\n\t\t\t\te.key == 'ArrowRight'\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t});\n\t\tthis.canvas.addEventListener('mouseover', () => {\n\t\t\tthis.mouse.isOnCanvas = true;\n\t\t\tthis.mouse.active = true;\n\t\t});\n\t\tthis.canvas.addEventListener('mouseleave', () => {\n\t\t\tthis.mouse.isOnCanvas = false;\n\t\t});\n\t\tthis.canvas.addEventListener('touchstart', (e) => {\n\t\t\te.preventDefault();\n\t\t});\n\t\tthis.world.resize();\n\t\tif (!userDisabledP5Errors) p5.disableFriendlyErrors = false;\n\n\t\t/* prevent callout to copy image, etc when tap to hold */\n\t\t/* prevent webkit from resizing text to fit */\n\t\t/* prevent copy paste, to allow, change 'none' to 'text' */\n\t\tlet style = `\ncanvas { \n\toutline: none;\n\t-webkit-touch-callout: none;\n\t-webkit-text-size-adjust: none;\n\t-webkit-user-select: none;\n\toverscroll-behavior: none;\n}\nmain{\n\toverscroll-behavior: none;\n}`;\n\t\tif (isFullScreen) {\n\t\t\tstyle = 'html,\\nbody,\\n' + style;\n\t\t\tstyle += `\nhtml, body {\n\tmargin: 0;\n\tpadding: 0;\n\toverflow: hidden;\n}\nmain {\n\tmargin: auto;\n\tdisplay: flex;\n\talign-content: center;\n\tjustify-content: center;\n}`;\n\t\t}\n\t\tif (pixelated) {\n\t\t\tstyle += `\ncanvas {\n\timage-rendering: pixelated;\n\twidth: ${w}px!important;\n\theight: ${h}px!important;\n}`;\n\t\t}\n\t\tlet styleElem = document.createElement('style');\n\t\tstyleElem.innerHTML = style;\n\t\tdocument.head.appendChild(styleElem);\n\n\t\tlet idx = navigator.userAgent.indexOf('iPhone OS');\n\t\tif (idx > -1) {\n\t\t\tlet version = navigator.userAgent.substring(idx + 10, idx + 12);\n\t\t\tthis.p5play.version = version;\n\t\t\tif (version < 16) {\n\t\t\t\tpInst.pixelDensity(1);\n\t\t\t}\n\t\t\tthis.p5play.os.platform = 'iOS';\n\t\t\tthis.p5play.os.version = version;\n\t\t} else if (navigator.userAgentData !== undefined) {\n\t\t\tthis.p5play.os.platform = navigator.userAgentData.platform;\n\t\t}\n\n\t\tif (pixelated) {\n\t\t\tpInst.pixelDensity(1);\n\t\t\tpInst.noSmooth();\n\t\t}\n\n\t\treturn can;\n\t};\n\n\tfunction Canvas() {\n\t\treturn pInst.createCanvas(...arguments);\n\t}\n\n\tconst _background = this.background;\n\n\t/**\n\t * Just like the p5.js background function except it also accepts\n\t * a color pallette code.\n\t *\n\t * @method background\n\t */\n\tthis.background = function () {\n\t\tlet args = arguments;\n\t\tlet c;\n\t\tif (args.length == 1 && (typeof args[0] == 'string' || args[0] instanceof p5.Color)) {\n\t\t\tc = this.colorPal(args[0]);\n\t\t}\n\t\tif (c !== undefined) _background.call(this, c);\n\t\telse _background.call(this, ...args);\n\t};\n\n\tconst _fill = this.fill;\n\n\t/**\n\t * Just like the p5.js fill function except it also accepts\n\t * a color pallette code.\n\t *\n\t * @method fill\n\t */\n\tthis.fill = function () {\n\t\tlet args = arguments;\n\t\tlet c;\n\t\tif (args.length == 1) {\n\t\t\tc = this.colorPal(args[0]);\n\t\t}\n\t\tif (c !== undefined) _fill.call(this, c);\n\t\telse _fill.call(this, ...args);\n\t};\n\n\tconst _stroke = this.stroke;\n\n\t/**\n\t * Just like the p5.js stroke function except it also accepts\n\t * a color pallette code.\n\t *\n\t * @method stroke\n\t */\n\tthis.stroke = function () {\n\t\tlet args = arguments;\n\t\tlet c;\n\t\tif (args.length == 1) {\n\t\t\tc = this.colorPal(args[0]);\n\t\t}\n\t\tif (c !== undefined) _stroke.call(this, c);\n\t\telse _stroke.call(this, ...args);\n\t};\n\n\t// images is a cache of loaded/loading images, to prevent making\n\t// the same loadImage fetch requests multiple times (inefficient)\n\tthis.p5play.images = {\n\t\tonLoad: (img) => {} // called anytime an image is fully loaded\n\t};\n\n\tconst _loadImage = this.loadImage;\n\n\t/**\n\t * Just like the p5.js loadImage function except it also caches images\n\t * so that they are only loaded once. Multiple calls to loadImage with\n\t * the same path will return the same image object. It also adds the\n\t * image's url as a property of the image object.\n\t *\n\t * @method loadImage\n\t * @param {string} url\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t * @param {function} [callback]\n\t */\n\tthis.loadImg = this.loadImage = function () {\n\t\tlet args = arguments;\n\t\tlet url = args[0];\n\t\tlet img = pInst.p5play.images[url];\n\t\tlet cb;\n\t\tif (typeof args[args.length - 1] == 'function') {\n\t\t\tcb = args[args.length - 1];\n\t\t}\n\t\tif (img) {\n\t\t\t// if not finished loading, add callback to the list\n\t\t\tif ((img.width == 1 && img.height == 1) || !img.pixels.length) {\n\t\t\t\tif (cb) {\n\t\t\t\t\timg.cbs.push(cb);\n\t\t\t\t\timg.calls++;\n\t\t\t\t} else pInst._decrementPreload();\n\t\t\t} else {\n\t\t\t\tif (cb) cb(); // if already loaded, run the callback immediately\n\t\t\t\tpInst._decrementPreload();\n\t\t\t}\n\t\t\treturn img;\n\t\t}\n\t\tconst _cb = (_img) => {\n\t\t\t// if (!_img.pixels.length) {\n\t\t\t// \tlog('hi');\n\t\t\t// \t_loadImage.call(pInst, url, _cb);\n\t\t\t// \treturn;\n\t\t\t// }\n\n\t\t\t_img.w = _img.width;\n\t\t\t_img.h = _img.height;\n\t\t\tfor (let cb of _img.cbs) {\n\t\t\t\tcb();\n\t\t\t}\n\t\t\tfor (let i = 1; i < _img.calls; i++) {\n\t\t\t\tpInst._decrementPreload();\n\t\t\t}\n\t\t\t// delete _img.calls;\n\t\t\t// delete _img.cbs;\n\t\t\t_img.cbs = [];\n\t\t\tpInst.p5play.images.onLoad(img);\n\t\t};\n\t\timg = _loadImage.call(pInst, url, _cb);\n\t\timg.cbs = [];\n\t\timg.calls = 1;\n\t\tif (cb) img.cbs.push(cb);\n\t\timg.url = url;\n\t\tpInst.p5play.images[url] = img;\n\t\treturn img;\n\t};\n\n\tlet errorMessages = {\n\t\tgeneric: [\n\t\t\t'Ah! I found an error',\n\t\t\t'Oh no! Something went wrong',\n\t\t\t'Oof! Something went wrong',\n\t\t\t'Houston, we have a problem',\n\t\t\t'Whoops, having trouble here'\n\t\t],\n\t\tSprite: {\n\t\t\tconstructor: {\n\t\t\t\tbase: \"Sorry I'm unable to make a new Sprite\",\n\t\t\t\t0: \"What is $0 for? If you're trying to specify the x position of the sprite, please specify the y position as well.\",\n\t\t\t\t1: \"If you're trying to specify points for a chain Sprite, please use an array of position arrays:\\n$0\"\n\t\t\t},\n\t\t\thw: \"I can't change the halfWidth of a Sprite directly, change the sprite's width instead.\",\n\t\t\thh: \"I can't change the halfHeight of a Sprite directly, change the sprite's height instead.\",\n\t\t\trotate: 'The angle of rotation must be a number.',\n\t\t\tchangeAnimation: `I can't find any animation named \"$0\".`,\n\t\t\tcollide: {\n\t\t\t\t0: \"I can't make that sprite collide with $0. Sprites can only collide with another sprite or a group.\",\n\t\t\t\t1: 'The collision callback has to be a function.',\n\t\t\t\t2: \"You're trying to check for an collision with a sprite or group that doesn't exist!\"\n\t\t\t},\n\t\t\toverlap: {\n\t\t\t\t0: \"I can't make that sprite overlap with $0. Sprites can only overlap with another sprite or a group.\",\n\t\t\t\t1: 'The overlap callback has to be a function.',\n\t\t\t\t2: \"You're trying to check for an overlap with a sprite or group that doesn't exist!\"\n\t\t\t}\n\t\t},\n\t\tSpriteAnimation: {\n\t\t\tconstructor: {\n\t\t\t\tbase: \"Hey so, I tried to make a new SpriteAnimation but couldn't\",\n\t\t\t\t0: `I don't know how to display this type of image: \"$0\". I can only use \".png\" image files.`,\n\t\t\t\t1: 'The name of the animation must be the first input parameter.'\n\t\t\t}\n\t\t},\n\t\tGroup: {\n\t\t\tconstructor: {\n\t\t\t\tbase: \"Hmm awkward! Well it seems I can't make that new Group you wanted\"\n\t\t\t}\n\t\t}\n\t};\n\terrorMessages.Group.collide = errorMessages.Sprite.collide;\n\terrorMessages.Group.overlap = errorMessages.Sprite.overlap;\n\n\t/**\n\t * A FriendlyError is a custom error class that extends the native JS Error class.\n\t *\n\t * @private FriendlyError\n\t * @param {String} func is the name of the function the error was thrown in\n\t * @param {Number} errorNum is the error's code number\n\t * @param {Array} e is an array with references to the cause of the error\n\t */\n\tclass FriendlyError extends Error {\n\t\tconstructor(func, errorNum, e) {\n\t\t\tsuper();\n\n\t\t\tif (typeof func != 'string') {\n\t\t\t\te = errorNum;\n\t\t\t\terrorNum = func;\n\t\t\t\tfunc = this.stack.match(/\\n\\s*at ([^\\(]*)/)[1];\n\t\t\t\tfunc = func.slice(0, -1);\n\t\t\t}\n\t\t\tif (typeof errorNum != 'number') {\n\t\t\t\te = errorNum;\n\t\t\t\terrorNum = undefined;\n\t\t\t}\n\t\t\tif (func.slice(0, 3) == 'new') func = func.slice(4);\n\t\t\tfunc = func.split('.');\n\t\t\tlet className = func[0];\n\t\t\tfunc = func[1] || 'constructor';\n\n\t\t\tlet ln = this.stack.match(/\\/([^p\\/][^5][^\\/:]*:[^\\/:]+):/);\n\t\t\tif (ln) {\n\t\t\t\tln = ln[1].split(':');\n\t\t\t\tln = ' in ' + ln[0] + ' at line ' + ln[1] + '. ';\n\t\t\t} else ln = '.';\n\n\t\t\te = e || [];\n\n\t\t\tlet m = errorMessages[className][func];\n\t\t\tlet msg;\n\t\t\tif (m.base) msg = m.base + ln;\n\t\t\telse msg = errorMessages.generic[Math.floor(Math.random() * errorMessages.generic.length)] + ln;\n\t\t\tif (errorNum !== undefined) m = m[errorNum];\n\t\t\tm = m.replace(/\\$([0-9]+)/g, (m, n) => {\n\t\t\t\treturn e[n];\n\t\t\t});\n\t\t\tmsg += m;\n\n\t\t\tp5._friendlyError(msg, func);\n\t\t}\n\t}\n\n\tthis.Sprite = Sprite;\n\tthis.SpriteAnimation = SpriteAnimation;\n\tthis.Group = Group;\n\tthis.World = World;\n\tthis.Canvas = Canvas;\n\n\t/**\n\t * A group of all the sprites.\n\t *\n\t * @property allSprites\n\t */\n\tthis.allSprites = new Group();\n\tthis.allSprites.autoCull = true;\n\tthis.allSprites.tileSize = 1;\n\n\t/**\n\t * The planck physics world. Use this to change gravity and offset the\n\t * sprite's coordinate system.\n\t *\n\t * @property world\n\t */\n\tthis.world = new World();\n\n\t/**\n\t * Equal to the p5.js frameCount, the amount of times the draw() function has\n\t * been called.\n\t *\n\t * @property frame\n\t */\n\tthis.frame = 0;\n\n\t/**\n\t * The default camera. Use this to pan and zoom the camera.\n\t *\n\t * @property camera\n\t */\n\tthis.camera = new Camera();\n\n\t/**\n\t * Get user input from the mouse.\n\t * Stores the state of the left, center, or right mouse buttons.\n\t *\n\t * @property mouse\n\t */\n\t/**\n\t * Get user input from the keyboard.\n\t *\n\t * @property kb\n\t */\n\t/**\n\t * Alias for kb.\n\t *\n\t * @property keyboard\n\t */\n\t/**\n\t * Get user input from game controllers.\n\t *\n\t * @property contro\n\t */\n\n\t/**\n\t * Look at the Input reference pages before reading these docs.\n\t *\n\t * https://p5play.org/learn/input_devices.html\n\t *\n\t * Root class for storing the state of inputs (mouse, keyboard,\n\t * gamepads).\n\t *\n\t * -3 means input was released after being held, pressed for 12 frames\n\t * -2 means input was pressed and released on the same frame\n\t * -1 means input was released\n\t * 0 means input is not pressed\n\t * 1 means input was pressed\n\t * >1 means input is still being pressed\n\t * 12 means input was held\n\t * >12 means input is being held\n\t *\n\t * @class InputDevice\n\t */\n\tclass InputDevice {\n\t\tconstructor() {\n\t\t\t/**\n\t\t\t * The amount of frames an input must be pressed to be considered held.\n\t\t\t * Default is 12.\n\t\t\t *\n\t\t\t * @property holdThreshold\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tthis.holdThreshold = 12;\n\t\t}\n\n\t\t/**\n\t\t * Initializes the input's values to zero.\n\t\t *\n\t\t * @private init\n\t\t */\n\t\tinit(inputs) {\n\t\t\tfor (let inp of inputs) {\n\t\t\t\tthis[inp] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Attempt to auto-correct the user's input. Inheriting classes\n\t\t * override this method.\n\t\t *\n\t\t * @private ac\n\t\t */\n\t\tac(inp) {\n\t\t\treturn inp;\n\t\t}\n\n\t\t/**\n\t\t * @method presses\n\t\t * @param {string} inp\n\t\t * @returns {boolean} true on the first frame that the user presses the input\n\t\t */\n\t\tpresses(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tif (this[inp] === undefined) inp = this.ac(inp);\n\t\t\treturn this[inp] == 1 || this[inp] == -2;\n\t\t}\n\n\t\t/**\n\t\t * @method pressing\n\t\t * @param {string} inp\n\t\t * @returns {number} the amount of frames the user has been pressing the input\n\t\t */\n\t\tpressing(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tif (this[inp] === undefined) inp = this.ac(inp);\n\t\t\tif (this[inp] == -2) return 1;\n\t\t\treturn this[inp] > 0 ? this[inp] : 0;\n\t\t}\n\n\t\t/**\n\t\t * @method pressed\n\t\t * @param {string} inp\n\t\t * @returns {boolean} true on the first frame that the user released the input\n\t\t */\n\t\tpressed(inp) {\n\t\t\treturn this.released(inp);\n\t\t}\n\n\t\t/**\n\t\t * @method holds\n\t\t * @param {string} inp\n\t\t * @returns {boolean} true on the first frame that the user holds the input\n\t\t */\n\t\tholds(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tif (this[inp] === undefined) inp = this.ac(inp);\n\t\t\treturn this[inp] == this.holdThreshold;\n\t\t}\n\n\t\t/**\n\t\t * @method holding\n\t\t * @param {string} inp\n\t\t * @returns {number} the amount of frames the user has been holding the input\n\t\t */\n\t\tholding(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tif (this[inp] === undefined) inp = this.ac(inp);\n\t\t\treturn this[inp] >= this.holdThreshold ? this[inp] : 0;\n\t\t}\n\n\t\t/**\n\t\t * @method held\n\t\t * @param {string} inp\n\t\t * @returns {boolean} true on the first frame that the user released a held input\n\t\t */\n\t\theld(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tif (this[inp] === undefined) inp = this.ac(inp);\n\t\t\treturn this[inp] == -3;\n\t\t}\n\n\t\t/**\n\t\t * @method released\n\t\t * @param {string} inp\n\t\t * @returns {boolean} true on the first frame that the user released the input\n\t\t */\n\t\treleased(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tif (this[inp] === undefined) inp = this.ac(inp);\n\t\t\treturn this[inp] <= -1;\n\t\t}\n\n\t\treleases(inp) {\n\t\t\treturn this.released(inp);\n\t\t}\n\t}\n\n\tclass Mouse extends InputDevice {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tlet _this = this;\n\n\t\t\t// this.x and this.y store the actual position values of the mouse\n\t\t\tthis._position = {\n\t\t\t\tget x() {\n\t\t\t\t\treturn _this.x;\n\t\t\t\t},\n\t\t\t\tset x(val) {\n\t\t\t\t\t_this.x = val;\n\t\t\t\t},\n\t\t\t\tget y() {\n\t\t\t\t\treturn _this.y;\n\t\t\t\t},\n\t\t\t\tset y(val) {\n\t\t\t\t\t_this.y = val;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet inputs = ['x', 'y', 'left', 'center', 'right'];\n\t\t\tthis.init(inputs);\n\t\t\tthis.default = 'left';\n\t\t\tthis.draggable = false;\n\t\t\tthis.isOnCanvas = false;\n\t\t\tthis.active = false;\n\n\t\t\t/**\n\t\t\t * The mouse's x position.\n\t\t\t * @property x\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tthis.x;\n\n\t\t\t/**\n\t\t\t * The mouse's y position.\n\t\t\t * @property y\n\t\t\t * @type {number}\n\t\t\t */\n\t\t\tthis.y;\n\t\t}\n\n\t\t/**\n\t\t * The mouse's position.\n\t\t * @property pos\n\t\t */\n\t\tget pos() {\n\t\t\treturn this._position;\n\t\t}\n\t\t/**\n\t\t * The mouse's position. Alias for pos.\n\t\t * @property position\n\t\t */\n\t\tget position() {\n\t\t\treturn this._position;\n\t\t}\n\n\t\tac(inp) {\n\t\t\tif (inp.slice(0, 4)) inp = 'left';\n\t\t\telse if (inp.slice(0, 5) == 'right') inp = 'right';\n\t\t\telse if (inp.slice(0, 6) == 'middle') inp = 'center';\n\t\t\telse inp = inp.toLowerCase();\n\t\t\treturn inp;\n\t\t}\n\n\t\t/**\n\t\t * @method dragging\n\t\t * @param {string} inp\n\t\t * @returns {number} the amount of frames the user has been dragging the input\n\t\t */\n\t\tdragging(inp) {\n\t\t\tinp ??= this.default;\n\t\t\tthis.draggable = true;\n\t\t\treturn this[inp] >= this.holdThreshold ? this[inp] : 0;\n\t\t}\n\t}\n\n\tthis.mouse = new Mouse();\n\n\tclass SpriteMouse extends Mouse {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.hover = 0;\n\t\t}\n\n\t\t/**\n\t\t * @method hovers\n\t\t * @returns {boolean} true on the first frame that the mouse is over the sprite\n\t\t */\n\t\thovers() {\n\t\t\treturn this.hover == 1;\n\t\t}\n\n\t\t/**\n\t\t * @method hovering\n\t\t * @returns {number} the amount of frames the mouse has been over the sprite\n\t\t */\n\t\thovering() {\n\t\t\treturn this.hover > 0 ? this.hover : 0;\n\t\t}\n\n\t\t/**\n\t\t * @method hovered\n\t\t * @returns {boolean} true on the first frame that the mouse is no longer over the sprite\n\t\t */\n\t\thovered() {\n\t\t\treturn this.hover == -1;\n\t\t}\n\t}\n\n\tconst _onmousedown = this._onmousedown;\n\n\tconst __onmousedown = function (btn) {\n\t\tthis.mouse[btn]++;\n\t\tthis.mouse.active = true;\n\n\t\tlet ms;\n\t\tif (this.p5play.mouseSprites.length) {\n\t\t\tms = this.p5play.mouseSprites[0];\n\t\t\tms.mouse[btn] = 1;\n\t\t\t// old mouse sprite didn't have the mouse released on it\n\t\t\t// so it just gets set to 0 (not pressed)\n\t\t\tif (this.p5play.mouseSprite) {\n\t\t\t\tthis.p5play.mouseSprite.mouse[btn] = 0;\n\t\t\t\tif (btn == 'left') {\n\t\t\t\t\tthis.p5play.mouseSprite.mouse.draggable = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.p5play.mouseSprite = ms;\n\t\t}\n\t};\n\n\tthis._onmousedown = function (e) {\n\t\tlet btn = 'left';\n\t\tif (e.button === 1) btn = 'center';\n\t\telse if (e.button === 2) btn = 'right';\n\n\t\t__onmousedown.call(this, btn);\n\n\t\t_onmousedown.call(this, e);\n\t};\n\n\tconst _ontouchstart = this._ontouchstart;\n\n\tthis._ontouchstart = function (e) {\n\t\t__onmousedown.call(this, 'left');\n\t\t_ontouchstart.call(this, e);\n\t};\n\n\tconst _onmouseup = this._onmouseup;\n\n\tconst __onmouseup = function (btn) {\n\t\tif (this.mouse[btn] >= this.mouse.holdThreshold) {\n\t\t\tthis.mouse[btn] = -3;\n\t\t} else if (this.mouse[btn] > 1) this.mouse[btn] = -1;\n\t\telse this.mouse[btn] = -2;\n\n\t\tif (this.p5play.mouseSprite) {\n\t\t\tif (this.p5play.mouseSprite.mouse.hover > 1) {\n\t\t\t\tif (this.p5play.mouseSprite.mouse[btn] >= this.mouse.holdThreshold) {\n\t\t\t\t\tthis.p5play.mouseSprite.mouse[btn] = -3;\n\t\t\t\t} else if (this.p5play.mouseSprite.mouse[btn] > 1) {\n\t\t\t\t\tthis.p5play.mouseSprite.mouse[btn] = -1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.p5play.mouseSprite.mouse[btn] = -2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.p5play.mouseSprite.mouse[btn] = 0;\n\t\t\t\tthis.p5play.mouseSprite.mouse.draggable = false;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis._onmouseup = function (e) {\n\t\tlet btn = 'left';\n\t\tif (e.button === 1) btn = 'center';\n\t\telse if (e.button === 2) btn = 'right';\n\n\t\t__onmouseup.call(this, btn);\n\t\t_onmouseup.call(this, e);\n\t};\n\n\tconst _ontouchend = this._ontouchend;\n\n\tthis._ontouchend = function (e) {\n\t\t__onmouseup.call(this, 'left');\n\t\t_ontouchend.call(this, e);\n\t};\n\n\tclass KeyBoard extends InputDevice {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.default = ' ';\n\t\t}\n\n\t\tac(inp) {\n\t\t\tif (inp.length == 1) return inp.toLowerCase();\n\t\t\tif (!isNaN(inp)) {\n\t\t\t\tif (inp == 38) return 'ArrowUp';\n\t\t\t\tif (inp == 40) return 'ArrowDown';\n\t\t\t\tif (inp == 37) return 'ArrowLeft';\n\t\t\t\tif (inp == 39) return 'ArrowRight';\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Use key names with the keyboard input functions, not key codes! If you are trying to detect if the user pressed a number key make it a string. For example: \"5\"'\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (inp == 'space' || inp == 'spacebar') return ' ';\n\t\t\treturn inp[0].toUpperCase() + inp.slice(1).toLowerCase();\n\t\t}\n\n\t\tget space() {\n\t\t\treturn this[' '];\n\t\t}\n\t\tget spacebar() {\n\t\t\treturn this[' '];\n\t\t}\n\t}\n\n\tthis.kb = new KeyBoard();\n\tthis.keyboard = this.kb;\n\n\tif (navigator.keyboard) {\n\t\tconst keyboard = navigator.keyboard;\n\t\tif (window == window.top) {\n\t\t\tkeyboard.getLayoutMap().then((keyboardLayoutMap) => {\n\t\t\t\tconst key = keyboardLayoutMap.get('KeyW');\n\t\t\t\tif (key != 'w') this.p5play.standardizeKeyboard = true;\n\t\t\t});\n\t\t} else {\n\t\t\tthis.p5play.standardizeKeyboard = true;\n\t\t}\n\t} else {\n\t\t// Firefox doesn't have navigator.keyboard\n\t\t// so just make it use key codes\n\t\tthis.p5play.standardizeKeyboard = true;\n\t}\n\n\t/**\n\t * Obsolete: Use kb.pressing(key) instead.\n\t *\n\t * @obsolete keyIsDown\n\t * @param {String} key\n\t */\n\tthis.keyIsDown = function (keyCode) {\n\t\tthrow new Error(\n\t\t\t`The p5.js keyIsDown function is outdated and can't be used in p5.play. Trust me, you'll see that the p5.play kb.pressing function is much better. It uses key name strings that are easier to write and easier to read! https://p5play.org/learn/input_devices.html The p5.js keyIsDown function relies on key codes and custom constants for key codes, which are not only hard to remember but were also deprecated in the JavaScript language standards over six years ago and shouldn't be used in new projects. More info: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode`\n\t\t);\n\t};\n\n\t/**\n\t * @private _getKeyFromCode\n\t * @param {*} e keyboard event\n\t * @returns key name\n\t */\n\tfunction _getKeyFromCode(e) {\n\t\tlet code = e.code;\n\t\tif (code.length == 4 && code.slice(0, 3) == 'Key') {\n\t\t\treturn code[3].toLowerCase();\n\t\t}\n\t\treturn e.key;\n\t}\n\n\tlet simpleKeyControls = {\n\t\tw: 'up',\n\t\ts: 'down',\n\t\ta: 'left',\n\t\td: 'right',\n\t\tArrowUp: 'up',\n\t\tArrowDown: 'down',\n\t\tArrowLeft: 'left',\n\t\tArrowRight: 'right',\n\t\ti: 'up2',\n\t\tk: 'down2',\n\t\tj: 'left2',\n\t\tl: 'right2'\n\t};\n\n\tconst _onkeydown = this._onkeydown;\n\n\tthis._onkeydown = function (e) {\n\t\tlet key = e.key;\n\t\tif (this.p5play.standardizeKeyboard) {\n\t\t\tkey = _getKeyFromCode(e);\n\t\t}\n\t\tlet keys = [key];\n\t\tlet k = simpleKeyControls[key];\n\t\tif (k) keys.push(k);\n\t\tfor (let k of keys) {\n\t\t\tif (!this.kb[k] || this.kb[k] < 0) {\n\t\t\t\tthis.kb[k] = 1;\n\t\t\t}\n\t\t}\n\t\t_onkeydown.call(this, e);\n\t};\n\n\tconst _onkeyup = this._onkeyup;\n\n\tthis._onkeyup = function (e) {\n\t\tlet key = e.key;\n\t\tif (this.p5play.standardizeKeyboard) {\n\t\t\tkey = _getKeyFromCode(e);\n\t\t}\n\t\tlet keys = [key];\n\t\tlet k = simpleKeyControls[key];\n\t\tif (k) keys.push(k);\n\t\tfor (let k of keys) {\n\t\t\tif (this.kb[k] >= this.kb.holdThreshold) {\n\t\t\t\tthis.kb[k] = -3;\n\t\t\t} else if (this.kb[k] > 1) this.kb[k] = -1;\n\t\t\telse this.kb[k] = -2;\n\t\t}\n\n\t\t_onkeyup.call(this, e);\n\t};\n\n\tclass Contro extends InputDevice {\n\t\tconstructor(gp) {\n\t\t\tsuper();\n\t\t\tlet inputs = [\n\t\t\t\t'a',\n\t\t\t\t'b',\n\t\t\t\t'x',\n\t\t\t\t'y',\n\t\t\t\t'l',\n\t\t\t\t'r',\n\t\t\t\t'lt',\n\t\t\t\t'rt',\n\t\t\t\t'select',\n\t\t\t\t'start',\n\t\t\t\t'up',\n\t\t\t\t'down',\n\t\t\t\t'left',\n\t\t\t\t'right',\n\t\t\t\t'leftTrigger',\n\t\t\t\t'rightTrigger'\n\t\t\t];\n\t\t\tthis.init(inputs);\n\n\t\t\tthis.leftStick = {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tbtn: 0\n\t\t\t};\n\n\t\t\tthis.rightStick = {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tbtn: 0\n\t\t\t};\n\n\t\t\tthis._btns = {\n\t\t\t\ta: 0,\n\t\t\t\tb: 1,\n\t\t\t\tx: 2,\n\t\t\t\ty: 3,\n\t\t\t\tl: 4,\n\t\t\t\tr: 5,\n\t\t\t\tlt: 6,\n\t\t\t\trt: 7,\n\t\t\t\tselect: 8,\n\t\t\t\tstart: 9,\n\t\t\t\tleftStickButton: 10,\n\t\t\t\trightStickButton: 11,\n\t\t\t\tup: 12,\n\t\t\t\tdown: 13,\n\t\t\t\tleft: 14,\n\t\t\t\tright: 15\n\t\t\t};\n\t\t\tthis._axes = {\n\t\t\t\tleftStick: {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 1\n\t\t\t\t},\n\t\t\t\trightStick: {\n\t\t\t\t\tx: 2,\n\t\t\t\t\ty: 3\n\t\t\t\t},\n\t\t\t\tleftTrigger: 4,\n\t\t\t\trightTrigger: 5\n\t\t\t};\n\n\t\t\t// corrects button mapping for GuliKit gamepads\n\t\t\t// which have a Nintendo Switch style button layout\n\t\t\t// https://www.aliexpress.com/item/1005003624801819.html\n\t\t\tif (gp.id.includes('GuliKit')) {\n\t\t\t\tthis._btns.a = 1;\n\t\t\t\tthis._btns.b = 0;\n\t\t\t\tthis._btns.x = 3;\n\t\t\t\tthis._btns.y = 2;\n\t\t\t}\n\n\t\t\tlog(gp);\n\n\t\t\tthis.gamepad = gp;\n\t\t\tthis.id = gp.id;\n\t\t}\n\n\t\tac(inp) {\n\t\t\treturn inp.toLowerCase();\n\t\t}\n\n\t\t_update() {\n\t\t\tthis.gamepad = navigator.getGamepads()[this.gamepad.index];\n\t\t\tif (!this.gamepad) return;\n\n\t\t\tlet pad = this.gamepad;\n\n\t\t\t// buttons\n\t\t\tfor (let name in this._btns) {\n\t\t\t\tlet idx = this._btns[name];\n\t\t\t\tif (pad.buttons[idx].pressed) this[name]++;\n\t\t\t\telse this[name] = 0;\n\t\t\t}\n\n\t\t\t// sticks\n\t\t\tthis.leftStick.x = pad.axes[this._axes.leftStick.x];\n\t\t\tthis.leftStick.y = pad.axes[this._axes.leftStick.y];\n\n\t\t\tthis.rightStick.x = pad.axes[this._axes.rightStick.x];\n\t\t\tthis.rightStick.y = pad.axes[this._axes.rightStick.y];\n\n\t\t\t// triggers\n\t\t\tif (pad.axes[this._axes.leftTrigger] !== undefined) {\n\t\t\t\tthis.leftTrigger = pad.axes[this._axes.leftTrigger];\n\t\t\t\tthis.rightTrigger = pad.axes[this._axes.rightTrigger];\n\t\t\t} else {\n\t\t\t\tthis.leftTrigger = pad.buttons[this._btns.lt].value;\n\t\t\t\tthis.rightTrigger = pad.buttons[this._btns.rt].value;\n\t\t\t}\n\n\t\t\treturn true; // update completed\n\t\t}\n\t}\n\n\tclass Contros extends Array {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tlet _this = this;\n\t\t\twindow.addEventListener('gamepadconnected', (e) => {\n\t\t\t\t_this._addContro(e.gamepad);\n\t\t\t});\n\t\t\t// TODO\n\t\t\t// window.addEventListener('gamepaddisconnected', (e) => {\n\t\t\t// \t_this._removeContro(e.gamepad);\n\t\t\t// });\n\n\t\t\tthis.default = 'a';\n\n\t\t\tlet methods = ['presses', 'pressing', 'pressed', 'holds', 'holding', 'held', 'released'];\n\t\t\tfor (let m of methods) {\n\t\t\t\tthis[m] = (inp) => {\n\t\t\t\t\tif (this[0]) return this[0][m](inp);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tlet inputs = [\n\t\t\t\t'a',\n\t\t\t\t'b',\n\t\t\t\t'x',\n\t\t\t\t'y',\n\t\t\t\t'l',\n\t\t\t\t'r',\n\t\t\t\t'lt',\n\t\t\t\t'rt',\n\t\t\t\t'select',\n\t\t\t\t'start',\n\t\t\t\t'leftStickButton',\n\t\t\t\t'rightStickButton',\n\t\t\t\t'up',\n\t\t\t\t'down',\n\t\t\t\t'left',\n\t\t\t\t'right'\n\t\t\t];\n\t\t\tfor (let inp of inputs) {\n\t\t\t\tObject.defineProperty(this, inp, {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tif (_this[0]) return _this[0][inp];\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet props = ['leftStick', 'rightStick'];\n\t\t\tfor (let prop of props) {\n\t\t\t\tthis[prop] = {};\n\t\t\t\tfor (let axis of ['x', 'y']) {\n\t\t\t\t\tObject.defineProperty(this[prop], axis, {\n\t\t\t\t\t\tget() {\n\t\t\t\t\t\t\tif (_this[0]) return _this[0][prop][axis];\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// test if the broswer supports the HTML5 Gamepad API\n\t\t\t// all modern browsers do, this is really just to prevent\n\t\t\t// p5.play's Jest tests from failing\n\t\t\tif (!navigator?.getGamepads) return;\n\n\t\t\t// if the page was not reloaded, but p5.play sketch was,\n\t\t\t// then gamepads could be already connected\n\t\t\t// so they need to be added as Contro objects\n\t\t\tlet gps = navigator.getGamepads();\n\t\t\tfor (let gp of gps) {\n\t\t\t\tif (gp) this._addContro(gp);\n\t\t\t}\n\t\t}\n\n\t\t_addContro(gp) {\n\t\t\tif (!gp) return;\n\t\t\tlog('controller ' + this.length + ' connected: ' + gp.id);\n\t\t\tthis.push(new Contro(gp));\n\t\t}\n\n\t\t/**\n\t\t * Updates the state of all controllers.\n\t\t */\n\t\t_update() {\n\t\t\tfor (let c of this) {\n\t\t\t\tc._update();\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.contro = new Contros();\n\tthis.controllers = this.contro;\n});\n\n// called before each p5.js draw function call\np5.prototype.registerMethod('pre', function () {\n\tif (this.frameCount == 1) {\n\t\tthis.camera.x = this.world.hw;\n\t\tthis.camera.y = this.world.hh;\n\t\tthis.camera.init = true;\n\n\t\t// this stops the right click menu from appearing\n\t\tthis.canvas.addEventListener('contextmenu', (event) => event.preventDefault());\n\t}\n\n\tthis.mouse.x = (this.mouseX - this.world.hw) / this.camera.zoom + this.camera.x;\n\tthis.mouse.y = (this.mouseY - this.world.hh) / this.camera.zoom + this.camera.y;\n\n\tthis.camera.mouse.x = this.mouseX;\n\tthis.camera.mouse.y = this.mouseY;\n\n\tthis.contro._update();\n});\n\n// called after each p5.js draw function call\np5.prototype.registerMethod('post', function p5playPostDraw() {\n\tthis.frame = this.frameCount;\n\n\tif (this.p5play.autoDrawSprites) {\n\t\tthis.camera.on();\n\t\tthis.allSprites.draw();\n\t\tthis.camera.off();\n\t\tthis.p5play.autoDrawSprites = true;\n\t}\n\n\tif (this.p5play.autoUpdateSprites) {\n\t\tthis.updateSprites();\n\t\tthis.p5play.autoUpdateSprites = true;\n\t}\n\n\tif (this.allSprites.autoCull) {\n\t\tthis.allSprites.cull(10000);\n\t}\n\n\tfor (let btn of ['left', 'center', 'right']) {\n\t\tif (this.mouse[btn] < 0) this.mouse[btn] = 0;\n\t\telse if (this.mouse[btn] > 0) this.mouse[btn]++;\n\n\t\tif (this.p5play.mouseSprite) {\n\t\t\tif (this.p5play.mouseSprite.mouse[btn] < 0) {\n\t\t\t\tthis.p5play.mouseSprite.mouse[btn] = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (let k in this.kb) {\n\t\tif (k == 'holdThreshold') continue;\n\t\tif (this.kb[k] < 0) this.kb[k] = 0;\n\t\telse if (this.kb[k] > 0) this.kb[k]++;\n\t}\n\n\tif (this.p5play.mouseTracking) {\n\t\tif (this.p5play.mouseSprite) {\n\t\t\tlet val = 0;\n\t\t\tfor (let btn of ['left', 'center', 'right']) {\n\t\t\t\tval += this.p5play.mouseSprite.mouse[btn];\n\t\t\t}\n\t\t\tif (val == 0) this.p5play.mouseSprite = null;\n\t\t}\n\n\t\tlet sprites = this.getSpritesAt(this.mouse.x, this.mouse.y);\n\t\tsprites.sort((a, b) => (a.layer - b.layer) * -1);\n\n\t\tlet uiSprites = this.getSpritesAt(this.camera.mouse.x, this.camera.mouse.y, this.allSprites, false);\n\t\tuiSprites.sort((a, b) => (a.layer - b.layer) * -1);\n\n\t\tsprites = sprites.concat(uiSprites);\n\n\t\tlet ms;\n\t\tif (this.mouse.pressing('left') || this.mouse.pressing('center') || this.mouse.pressing('right')) {\n\t\t\t// mouse sprite is not draggable\n\t\t\tif (!this.p5play.mouseSprite?.mouse.draggable) {\n\t\t\t\t// if sprite is being dragged,\n\t\t\t\t// it should be dragged behind sprites on higher layers\n\t\t\t\tfor (let s of sprites) {\n\t\t\t\t\tif (s == this.p5play.mouseSprite) {\n\t\t\t\t\t\tms = s;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tms = this.p5play.mouseSprite;\n\t\t\t}\n\t\t\t// if mouse is pressing the sprite\n\t\t\tif (ms) {\n\t\t\t\tms.mouse.left = this.mouse.left;\n\t\t\t\tms.mouse.center = this.mouse.center;\n\t\t\t\tms.mouse.right = this.mouse.right;\n\t\t\t\tms.mouse.x = ms.x - this.mouse.x;\n\t\t\t\tms.mouse.y = ms.y - this.mouse.y;\n\t\t\t} else if (this.p5play.mouseSprite) {\n\t\t\t\tthis.p5play.mouseSprite.mouse.left = 0;\n\t\t\t\tthis.p5play.mouseSprite.mouse.center = 0;\n\t\t\t\tthis.p5play.mouseSprite.mouse.right = 0;\n\t\t\t\tthis.p5play.mouseSprite.mouse.draggable = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (let s of sprites) {\n\t\t\ts.mouse.hover++;\n\t\t}\n\n\t\tfor (let s of this.p5play.mouseSprites) {\n\t\t\tif ((!this.p5play.mouseSprite?.mouse.draggable || s != ms) && !sprites.includes(s)) {\n\t\t\t\ts.mouse.hover = -1;\n\t\t\t\ts.mouse.left = 0;\n\t\t\t\ts.mouse.center = 0;\n\t\t\t\ts.mouse.right = 0;\n\t\t\t\ts.mouse.draggable = false;\n\t\t\t}\n\t\t}\n\t\tthis.p5play.mouseSprites = sprites;\n\t}\n\n\tthis.camera.off();\n});\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}